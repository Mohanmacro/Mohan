{"version":3,"sources":["../../mol.node.jam.js","../../mol.ts","../../ambient/ambient.ts","../../object/object.ts","../../compare/any/any.ts","../../conform/conform.ts","../../fail/fail.ts","../../fail/hidden/hidden.ts","../../log/log.ts","../../log/log_context.ts","../../log/log_debug.node.ts","../../log/log_filter.node.ts","../../log/log_group.ts","../../defer/defer.ts","../../state/stack/stack.ts","../../atom/atom.ts","../../dict/dict.ts","../../mem/mem.ts","../../const/const.ts","../../exec/exec.node.ts","../../../node/node.node.ts","../../file/file.node.ts","../../typeof/typeof.ts","../../tree/tree.ts","../../window/window.node.ts","../../dom/context/context.node.ts","../../dom/context/context.ts","../../view/selection/selection.ts","../../dom/render/attributes/attributes.ts","../../dom/render/events/events.ts","../../dom/render/children/children.ts","../../dom/render/styles/styles.ts","../../dom/render/fields/fields.ts","../../func/name/name.ts","../../view/view.ts","../../state/local/local.ts","../../locale/locale.ts","../../view/tree/tree.ts","../../graph/graph.ts","../build.node.ts","../../server/server.node.ts","../server/server.node.ts","../../test/test.test.ts","../../compare/any/any.test.ts","../../conform/conform.test.ts","../../assert/assert.test.ts","../../assert/assert.ts","../../object/object.test.ts","../../atom/atom.test.ts","type.ts","jsx d.ts","../../jsx/jsx.ts","../../jsx/make/make.test.tsx","../../jsx/make/make.ts","../../dict/dict.test.tsx","../../mem/mem.test.ts","../../const/const.test.ts","../../typeof/typeof.test.ts","../../tree/tree.test.ts","../../view/view.test.ts","../../state/local/local.mock.test.ts","../../state/local/local.test.ts","../../graph/graph.test.ts","../../dom/parse/parse.ts","../../jsx/attach/attach.test.tsx","../../jsx/attach/attach.ts","../../class/class.ts","../../object2/object2.ts","../../wrapper/wrapper.test.ts","../../wrapper/wrapper.ts","../../after/mock/mock.test.ts","../../after/timeout/timeout.test.ts","../../after/timeout/timeout.ts","../../after/frame/frame.node.ts","../../after/frame/frame.test.ts","../../array/trim/trim.test.ts","../../array/trim/trim.ts","../../fiber/fiber.test.ts","../../fiber/fiber.ts","../../owning/owning.ts","../../atom2/atom2.test.ts","../../atom2/atom2.ts","../../atom2/prop/prop.test.ts","../../atom2/prop/prop.ts","../../atom2/field/field.ts","../../atom2/autorun/autorun.test.ts","../../atom2/autorun/autorun.ts","../../jsx/view/view.test.tsx","../../jsx/view/view.tsx"],"names":[],"mappings":"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","file":"node.test.js","sourcesContent":[null,"declare namespace $ {}\nexport = $\nmodule.exports\n","namespace $ {\n\n\texport namespace $$ { export let $$ : typeof $ }\n\n\texport type $mol_ambient_context = ( typeof globalThis ) & ( typeof $.$$ ) & ( typeof $ )\n\n\texport function $mol_ambient( this : $mol_ambient_context , overrides : Partial< $mol_ambient_context > ) : $mol_ambient_context {\n\t\treturn Object.setPrototypeOf( overrides , this )\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\t\n\texport class $mol_object {\n\t\t\n\t\tstatic $ : $mol_ambient_context = $ as any\n\n\t\tget $() {\n\t\t\tconst owner = this.object_owner()\n\t\t\treturn ( owner && owner.$ || $ ) as $mol_ambient_context\n\t\t}\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\tconst instance = new this\n\t\t\tfor( let key in config ) instance[ key ] = config[ key ]!\n\t\t\treturn instance\n\t\t}\n\t\t\n\t\tstatic toString() : string {\n\t\t\treturn this.name\n\t\t}\n\t\t\n\t\t'object_owner()' : any\n\t\tobject_owner( next? : any ) {\n\t\t\treturn this[ 'object_owner()' ] || ( this[ 'object_owner()' ] = next )\n\t\t}\n\t\t\n\t\t'object_host()' : any\n\t\tobject_host( next? : any ) {\n\t\t\treturn this[ 'object_host()' ] || ( this[ 'object_host()' ] = next )\n\t\t}\n\t\t\n\t\t'object_field()' : string\n\t\tobject_field( next? : string ) {\n\t\t\treturn this[ 'object_field()' ] || ( this[ 'object_field()' ] = next! ) || ''\n\t\t}\n\t\t\n\t\tobject_id( next? : string ) {\n\t\t\treturn this[ Symbol.toStringTag ] || ( this[ Symbol.toStringTag ] = next ) || ''\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this.object_id()\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tdestructor() { }\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_compare_any( a : any , b : any ) {\n\t\t\n\t\tif( a === b ) return true\n\t\t\n\t\tif( !Number.isNaN( a ) ) return false\n\t\tif( !Number.isNaN( b ) ) return false\n\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\tconst cache = new WeakMap< any , boolean >()\n\n\texport const $mol_conform_stack = [] as any[]\n\n\texport function $mol_conform< Target , Source >( target : Target , source : Source ) : Target {\n\n\t\tif( $mol_compare_any( target , source ) ) return source as any\n\n\t\tif( !target || typeof target !== 'object' ) return target\n\t\tif( !source || typeof source !== 'object' ) return target\n\n\t\tif( target instanceof Error ) return target\n\t\tif( source instanceof Error ) return target\n\t\t\n\t\tif( target['constructor'] !== source['constructor'] ) return target\n\n\t\tif( cache.get( target ) ) return target\n\t\tcache.set( target , true )\n\t\t\n\t\tconst conform = $mol_conform_handlers.get( target['constructor'] )\n\t\tif( !conform ) return target\n\n\t\tif( $mol_conform_stack.indexOf( target ) !== -1 ) return target\n\n\t\t$mol_conform_stack.push( target )\n\n\t\ttry { return conform( target , source ) }\n\t\tfinally { $mol_conform_stack.pop() }\n\n\t}\n\n\texport const $mol_conform_handlers = new WeakMap< Object , ( target : any , source : any )=> any >()\n\n\texport function $mol_conform_handler< Class >(\n\t\tcl : { new( ... args : any[] ) : Class } ,\n\t\thandler : ( target : Class , source : Class )=> Class ,\n\t) {\n\t\t$mol_conform_handlers.set( cl , handler )\n\t}\n\n\tfunction $mol_conform_array<\n\t\tValue ,\n\t\tList extends {\n\t\t\t[ index : number ] : Value\n\t\t\tlength : number\n\t\t} ,\n\t>( target : List , source : List ) {\n\t\t\n\t\tif( source.length !== target.length ) return target\n\t\t\n\t\tfor( let i = 0 ; i < target.length ; ++i ) {\n\t\t\tif( !$mol_compare_any( source[i] , target[i] ) ) return target\n\t\t}\n\n\t\treturn source\n\t}\n\n\t$mol_conform_handler( Array , $mol_conform_array )\n\t$mol_conform_handler( Uint8Array , $mol_conform_array )\n\t$mol_conform_handler( Uint16Array , $mol_conform_array )\n\t$mol_conform_handler( Uint32Array , $mol_conform_array )\n\n\t$mol_conform_handler( Object , ( target , source )=> {\n\n\t\tlet count = 0\n\t\tlet equal = true\n\n\t\tfor( let key in target ) {\n\n\t\t\tconst conformed = $mol_conform( target[key] , source[key] )\n\t\t\t\n\t\t\tif( conformed !== target[key] ) {\n\t\t\t\ttry { target[key] = conformed } catch( error ) {}\n\t\t\t\tif( !$mol_compare_any( conformed , target[key] ) ) equal = false\n\t\t\t}\n\t\t\t\n\t\t\tif( !$mol_compare_any( conformed , source[key] ) ) equal = false\n\t\t\t\n\t\t\t++ count\n\t\t}\n\n\t\tfor( let key in source ) if( -- count < 0 ) break\n\n\t\treturn ( equal && count === 0 ) ? source : target\n\t} )\n\n\t$mol_conform_handler( Date , ( target , source )=> {\n\t\tif( target.getTime() === source.getTime() ) return source\n\t\treturn target \n\t} )\n\n\t$mol_conform_handler( RegExp , ( target , source )=> {\n\t\tif( target.toString() === source.toString() ) return source\n\t\treturn target\n\t} )\n\n}\n","namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_log( path : any , ... values : any[] ) {\n\t\t\n\t\tif( $mol_log_filter() == null ) return\n\t\t\n\t\tpath = String( path )\n\t\tif( path.indexOf( $mol_log_filter() ) === -1 ) return\n\t\t\n\t\tconst context = $mol_log_context()\n\t\tif( context ) context()\n\t\t\n\t\tconsole.debug( path , ... values )\n\n\t\tif( $mol_log_debug() == null ) return\n\t\tif( path.indexOf( $mol_log_debug() ) === -1 ) return\n\t\t\n\t\tdebugger\n\t}\n\t\n}\n","namespace $ {\n\n\tlet context = null as null | ( ()=> void )\n\texport function $mol_log_context( next = context ) {\n\t\treturn context = next\n\t}\n\n}\n","namespace $ {\n\n\tlet debug : ()=> void\n\texport function $mol_log_debug( next = debug ) {\n\t\treturn debug = next\n\t}\n\n}\n","namespace $ {\n\n\tlet filter : null | string\n\texport var $mol_log_filter = function $mol_log_filter( next = filter ) {\n\t\treturn filter = next\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_log_group< Task extends Function , This >( name : string , task : Task ) {\n\t\t\n\t\tconst filter = $mol_log_filter()\n\t\tif( filter == null ) return task\n\n\t\treturn function $mol_log_group_wrapper( this : This , ... args : any [] ) {\n\n\t\t\tlet started = false\n\t\t\tlet prev = $mol_log_context()\n\n\t\t\t$mol_log_context( ()=> {\n\t\t\t\tif( prev ) prev()\n\t\t\t\tstarted = true\n\n\t\t\t\tif( filter || prev ) console.group( name )\n\t\t\t\telse console.groupCollapsed( name )\n\n\t\t\t\t$mol_log_context( prev = null )\n\t\t\t} )\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn task.apply( this , args )\n\t\t\t} finally {\n\t\t\t\tif( started ) console.groupEnd()\n\t\t\t\t$mol_log_context( prev )\n\t\t\t}\n\n\t\t} as any as Task\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport class $mol_defer extends $mol_object {\n\t\t\n\t\tconstructor( public run : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_defer.add( this )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t$mol_defer.drop( this )\n\t\t}\n\t\t\n\t\tstatic all : $mol_defer[] = []\n\t\tstatic timer = null as any\n\t\t\n\t\tstatic scheduleNative : ( handler : ()=> void ) => any = ( typeof requestAnimationFrame == 'function' )\n\t\t\t? handler => requestAnimationFrame( handler )\n\t\t\t: handler => setTimeout( handler , 16 )\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.timer ) return\n\t\t\t\n\t\t\tthis.timer = this.scheduleNative( ()=> {\n\t\t\t\tthis.timer = null\n\t\t\t\tthis.run()\n\t\t\t} )\n\t\t}\n\t\t\n\t\tstatic unschedule() {\n\t\t\tif( !this.timer ) return\n\t\t\t\n\t\t\tcancelAnimationFrame( this.timer )\n\t\t\tthis.timer = null\n\t\t}\n\t\t\n\t\tstatic add( defer : $mol_defer ) {\n\t\t\tthis.all.push( defer )\n\t\t\tthis.schedule()\n\t\t}\n\t\t\n\t\tstatic drop( defer : $mol_defer ) {\n\t\t\tvar index = this.all.indexOf( defer )\n\t\t\tif( index >= 0 ) this.all.splice( index , 1 )\n\t\t}\n\t\t\n\t\tstatic run() {\n\t\t\tif( this.all.length === 0 ) return\n\t\t\tthis.schedule()\n\t\t\tfor( var defer : $mol_defer | undefined ; defer = this.all.shift() ; ) defer.run()\n\t\t\t//this.unschedule()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/// Global storage of temporary state\n\texport var $mol_state_stack = new Map< string , any >()\n\t\n}\n","namespace $ {\n\t\n\texport enum $mol_atom_status {\n\t\tobsolete = 'obsolete' ,\n\t\tchecking = 'checking' ,\n\t\tpulling = 'pulling' ,\n\t\tactual = 'actual' ,\n\t}\n\n\texport function $mol_atom_fence< Task extends ()=> any >( task : Task ) {\n\n\t\tconst slave = $mol_atom.stack[0]\n\t\t$mol_atom.stack[0] = null as any\n\t\t\n\t\ttry {\n\t\t\treturn task()\n\t\t} finally {\n\t\t\t$mol_atom.stack[0] = slave\n\t\t}\n\t\t\n\t}\n\t\n\texport class $mol_atom< Value = any > extends $mol_object {\n\t\t\n\t\tmasters : Set< $mol_atom<any> > | null = null\n\t\tslaves : Set< $mol_atom<any> > | null = null\n\t\t\n\t\tstatus = $mol_atom_status.obsolete\n\t\t\n\t\treadonly handler : ( next? : Value , force? : $mol_atom_force )=> Value | void\n\n\t\t'value()' : Value | Error | undefined\n\n\t\tconstructor(\n\t\t\tid : string ,\n\t\t\thandler : ( next? : Value , force? : $mol_atom_force )=> Value | void = next => next ,\n\t\t) {\n\t\t\tsuper()\n\t\t\t\n\t\t\tthis.object_id( id )\n\t\t\tthis.handler = handler\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\tthis.unlink()\n\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\n\t\t\tconst value = this['value()']\n\t\t\t\n\t\t\tif( value instanceof $mol_object ) {\n\t\t\t\tif( value.object_owner() === this ) value.destructor();\n\t\t\t}\n\n\t\t\tthis['value()'] = undefined as unknown as Value\n\t\t}\n\t\t\n\t\tunlink() {\n\t\t\tthis.disobey_all()\n\t\t\tif( this.slaves ) this.check_slaves()\n\t\t}\n\t\t\n\t\tget( force? : $mol_atom_force ) {\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\tif( slave ) {\n\t\t\t\tthis.lead( slave )\n\t\t\t\tslave.obey( this )\n\t\t\t}\n\t\t\t\n\t\t\tthis.actualize( force )\n\t\t\t\n\t\t\tconst value = this['value()'] as Value\n\t\t\t\n\t\t\tif( typeof Proxy !== 'function' && value instanceof Error ) {\n\t\t\t\tthrow value\n\t\t\t}\n\t\t\t\n\t\t\treturn value as Value\n\t\t}\n\t\t\n\t\tactualize( force? : $mol_atom_force ) {\n\t\t\t\n\t\t\tif( this.status === $mol_atom_status.pulling ) {\n\t\t\t\tthrow new Error( `Cyclic atom dependency of ${ this }` )\n\t\t\t}\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.actual ) return\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\t$mol_atom.stack[0] = this\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.checking ) {\n\t\t\t\t\n\t\t\t\tthis.masters!.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tif( this.status !== $mol_atom_status.checking ) return\n\t\t\t\t\t\tmaster.actualize()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tif( this.status === $mol_atom_status.checking ) {\n\t\t\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif( force || this.status !== $mol_atom_status.actual ) {\n\t\t\t\t\n\t\t\t\tconst oldMasters = this.masters\n\t\t\t\tthis.masters = null\n\t\t\t\t\n\t\t\t\tif( oldMasters ) oldMasters.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tmaster.dislead( this )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tthis.status = $mol_atom_status.pulling\n\t\t\t\tconst next = this.pull( force )\n\t\t\t\t\n\t\t\t\tif( next === undefined ) {\n\t\t\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\t} else {\n\t\t\t\t\tthis.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_atom.stack[0] = slave\n\t\t}\n\t\t\n\t\tpull( force? : $mol_atom_force ) {\n\t\t\ttry {\n\t\t\t\treturn this.handler( this._next , force )\n\t\t\t} catch( error ) {\n\t\t\t\tif( error[ '$mol_atom_catched' ] ) return error\n\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\n\t\t\t\tconsole.error( error.stack || error )\n\t\t\t\t\n\t\t\t\tif(!( error instanceof Error )) {\n\t\t\t\t\terror = new Error( error.message || error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\treturn error\n\t\t\t}\n\t\t}\n\t\t\n\t\t_next : Value | undefined\n\t\t_ignore : Value | undefined\n\t\t\n\t\tset( next : Value ) {\n\t\t\treturn this.value( next )\n\t\t}\n\t\t\n\t\tpush( next_raw? : Value|Error ) : Value {\n\t\t\tif(!( next_raw instanceof $mol_atom_wait )) {\n\t\t\t\tthis._ignore = this._next\n\t\t\t\tthis._next = undefined\n\t\t\t}\n\t\t\t\n\t\t\tthis.status = next_raw === undefined ? $mol_atom_status.obsolete : $mol_atom_status.actual\n\t\t\t\n\t\t\tconst prev = this['value()']\n\t\t\t\n\t\t\tlet next = ( next_raw instanceof Error || prev instanceof Error ) ? next_raw : $mol_conform( next_raw , prev )!\n\t\t\t\n\t\t\tif( next === prev ) return prev as Value\n\t\t\t\n\t\t\tif( prev instanceof $mol_object ) {\n\t\t\t\tif( prev.object_owner() === this ) prev.destructor()\n\t\t\t}\n\t\t\t\n\t\t\tif( next instanceof $mol_object ) {\n\t\t\t\tnext.object_owner( this )\n\t\t\t}\n\t\t\t\n\t\t\tif(( typeof Proxy === 'function' )&&( next instanceof Error )) {\n\t\t\t\tnext = new Proxy( next , {\n\t\t\t\t\tget( target : Error ) {\n\t\t\t\t\t\treturn $mol_fail_hidden( target.valueOf() )\n\t\t\t\t\t} ,\n\t\t\t\t\townKeys( target : Error ) : string[] {\n\t\t\t\t\t\treturn $mol_fail_hidden( target.valueOf() )\n\t\t\t\t\t} ,\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\tthis['value()'] = next\n\t\t\t$mol_log( this , prev , '➔' , next )\n\t\t\t\n\t\t\tthis.obsolete_slaves()\n\t\t\t\n\t\t\treturn next as Value\n\t\t}\n\t\t\n\t\tobsolete_slaves() {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tthis.slaves.forEach( slave => slave.obsolete() )\n\t\t}\n\t\t\n\t\tcheck_slaves() {\n\t\t\tif( this.slaves ) {\n\t\t\t\tthis.slaves.forEach( slave => slave.check() )\n\t\t\t} else {\n\t\t\t\t$mol_atom.actualize( this )\n\t\t\t}\n\t\t}\n\t\t\n\t\tcheck() {\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `May be obsolated while pulling ${ this }` )\n\t\t\t//}\n\t\t\t\n\t\t\tif( this.status === $mol_atom_status.actual || this.status === $mol_atom_status.pulling ) {\n\t\t\t\tthis.status = $mol_atom_status.checking\n\t\t\t\tthis.check_slaves()\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\t\n\t\tobsolete() {\n\t\t\tif( this.status === $mol_atom_status.obsolete ) return\n\t\t\t\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `Obsolated while pulling ${ this }` )\n\t\t\t//} \n\t\t\t\n\t\t\tthis.status = $mol_atom_status.obsolete\n\t\t\t\n\t\t\tthis.check_slaves()\n\t\t\t\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) {\n\t\t\t\tthis.slaves = new Set<$mol_atom<any>>()\n\t\t\t\t$mol_atom.unreap( this )\n\t\t\t}\n\t\t\tthis.slaves.add( slave )\n\t\t}\n\t\t\n\t\tdislead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tif( this.slaves.size === 1 ) {\n\t\t\t\tthis.slaves = null\n\t\t\t\t$mol_atom.reap( this )\n\t\t\t} else {\n\t\t\t\tthis.slaves.delete( slave )\n\t\t\t}\n\t\t}\n\t\t\n\t\tobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) this.masters = new Set< $mol_atom<any> >()\n\t\t\tthis.masters.add( master )\n\t\t}\n\t\t\n\t\tdisobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) return\n\t\t\tthis.masters.delete( master )\n\t\t}\n\t\t\n\t\tdisobey_all() {\n\t\t\tif( !this.masters ) return\n\t\t\t\n\t\t\tthis.masters.forEach( master => master.dislead( this ) )\n\t\t\t\n\t\t\tthis.masters = null\n\t\t}\n\n\t\tcache( next? : Value|Error ) {\n\t\t\tif( next === undefined ) return this['value()']\n\t\t\treturn this['value()'] = next\n\t\t}\n\t\t\n\t\tvalue( next? : Value , force? : $mol_atom_force ) : Value {\n\n\t\t\tif( force === $mol_atom_force_cache ) return this.push( next )\n\n\t\t\tif( next !== undefined ) {\n\t\t\t\t\n\t\t\t\tif( force === $mol_atom_force ) return this.push( next )\n\n\t\t\t\tlet next_normal = $mol_conform( next , this._ignore )\n\t\t\t\tif( next_normal === this._ignore ) return this.get( force )\n\n\t\t\t\tif(!( this['value()'] instanceof Error )) {\n\t\t\t\t\tnext_normal = $mol_conform( next , this['value()'] )\n\t\t\t\t\tif( next_normal === this['value()'] ) return this.get( force )\n\t\t\t\t}\n\n\t\t\t\tthis._next = next_normal\n\t\t\t\tthis._ignore = next_normal\n\n\t\t\t\tforce = $mol_atom_force_update\n\t\t\t}\n\t\t\t\n\t\t\treturn this.get( force )\n\t\t}\n\t\t\n\t\tstatic stack = [] as $mol_atom<any>[]\n\t\tstatic updating : $mol_atom<any>[] = []\n\t\tstatic reaping = new Set< $mol_atom<any> >()\n\t\tstatic scheduled = false\n\t\t\n\t\tstatic actualize( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.updating.push( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic reap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.add( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic unreap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.delete( atom )\n\t\t}\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.scheduled ) return\n\t\t\t\n\t\t\tnew $mol_defer(\n\t\t\t\t$mol_log_group( '$mol_atom.sync()' , () => {\n\t\t\t\t\tif( !this.scheduled ) return\n\t\t\t\t\tthis.scheduled = false\n\t\t\t\t\tthis.sync()\n\t\t\t\t} )\n\t\t\t)\n\t\t\t\n\t\t\tthis.scheduled = true\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\tthis.schedule()\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\tconst atom = this.updating.shift()\n\t\t\t\tif( !atom ) break\n\t\t\t\tif( this.reaping.has( atom ) ) continue\n\t\t\t\tif( atom.status !== $mol_atom_status.actual ) atom.get()\n\t\t\t}\n\t\t\t\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\tthis.reaping.forEach(\n\t\t\t\t\tatom => {\n\t\t\t\t\t\tthis.reaping.delete( atom )\n\t\t\t\t\t\tif( !atom.slaves ) atom.destructor()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tthis.scheduled = false\n\t\t}\n\t\t\n\t\tthen< Next >( done : ( prev? : Value )=> Next , fail? : ( error : Error )=> Next ) {\n\t\t\t\n\t\t\tlet prev : Value\n\t\t\tlet next : Next\n\t\t\t\n\t\t\tconst atom = new $mol_atom<any>(\n\t\t\t\t`${ this }.then(${ done })` ,\n\t\t\t\t() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( prev == undefined ) {\n\t\t\t\t\t\t\tconst val = this.get()\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val['valueOf']()\n\t\t\t\t\t\t\tprev = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( next == undefined ) {\n\t\t\t\t\t\t\tconst val = done( prev )\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val['valueOf']()\n\t\t\t\t\t\t\tnext = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn next\n\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( fail ) return fail( error )\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn error\n\t\t\t\t\t}\n\n\t\t\t\t} ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_atom.actualize( atom )\n\t\t\t\n\t\t\treturn atom\n\t\t}\n\t\t\n\t\tcatch( fail : ( error : Error )=> Value ) {\n\t\t\treturn this.then( next => next , fail )\n\t\t}\n\t\t\n\t}\n\t\n\t$mol_state_stack.set( '$mol_atom.stack' , $mol_atom.stack )\n\n\texport function $mol_atom_current< Value = any >() {\n\t\treturn $mol_atom.stack[0] as $mol_atom< Value >\n\t}\n\t\n\texport class $mol_atom_wait extends Error {\n\t\tname = '$mol_atom_wait'\n\t}\n\t\n\texport class $mol_atom_force extends Object {\n\t\t$mol_atom_force! : boolean\n\t\tstatic $mol_atom_force : boolean\n\t\tstatic toString() { return this.name }\n\t}\n\n\texport class $mol_atom_force_cache extends $mol_atom_force {}\n\texport class $mol_atom_force_update extends $mol_atom_force {}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dict_key( value : any ) {\n\t\t\n\t\tif( !value ) return JSON.stringify( value )\n\t\tif( typeof value !== 'object' ) return JSON.stringify( value )\n\n\t\tif( value instanceof Array ) return JSON.stringify( value )\n\t\tif( value.constructor === Object ) return JSON.stringify( value )\n\t\t\n\t\treturn value\n\t}\n\t\n\texport class $mol_dict< Key , Value > extends Map< Key , Value > {\n\n\t\tget( key : Key ) {\n\t\t\treturn super.get( $mol_dict_key( key ) )\n\t\t}\n\n\t\thas( key : Key ) {\n\t\t\treturn super.has( $mol_dict_key( key ) )\n\t\t}\n\n\t\tset( key : Key , value : Value ) {\n\t\t\treturn super.set( $mol_dict_key( key ) , value )\n\t\t}\n\n\t\tdelete( key : Key ) {\n\t\t\treturn super.delete( $mol_dict_key( key ) )\n\t\t}\n\n\t\tforEach( back : ( value : Value , key : Key , dict : Map< Key , Value > ) => void , context? : any ) {\n\t\t\treturn super.forEach( ( val , key , dict )=> {\n\t\t\t\tif( typeof key === 'string' ) key = JSON.parse( key )\n\t\t\t\treturn back.call( this , val , key , dict )\n\t\t\t} , context )\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\tconst iterator = super[ Symbol.iterator ]()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\tconst iteration = iterator.next()\n\n\t\t\t\t\tif( !iteration.done ) {\n\t\t\t\t\t\tconst key = iteration.value[0]\n\t\t\t\t\t\tif( typeof key === 'string' ) iteration.value[0] = JSON.parse( key )\n\t\t\t\t\t}\n\n\t\t\t\t\treturn iteration\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_mem< Host , Value >(\n\t\tobj : Host ,\n\t\tname : string ,\n\t\tdescr : TypedPropertyDescriptor< ( next? : Value , force? : $mol_atom_force )=> Value >\n\t) {\n\n\t\tconst value = descr.value!\n\t\tconst store = new WeakMap< Object , $mol_atom<Value> >()\n\t\t\n\t\tdescr.value = function $mol_mem_value( next? : Value , force? : $mol_atom_force ) {\n\t\t\tconst host : any = this\n\t\t\n\t\t\tlet atom = store.get( host )\n\t\t\tif( !atom ) {\n\t\t\t\t\n\t\t\t\tconst id = `${ host }.${ name }()`\n\t\t\t\tatom = new $mol_atom<Value>( id , function( ... args : any[] ) {\n\t\t\t\t\tconst v = value.call( host , ... args )\n\t\t\t\t\tif( v instanceof $mol_object ) {\n\t\t\t\t\t\tif( !v.object_host() ) {\n\t\t\t\t\t\t\tv.object_host( host )\n\t\t\t\t\t\t\tv.object_field( name )\n\t\t\t\t\t\t\tv.object_id( id )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn v\n\t\t\t\t} )\n\n\t\t\t\tatom.object_owner( host )\n\t\t\t\t\n\t\t\t\tconst destructor = atom.destructor\n\t\t\t\tatom.destructor = ()=> {\n\t\t\t\t\tstore.delete( host )\n\t\t\t\t\tdestructor.call( atom )\n\t\t\t\t}\n\n\t\t\t\tstore.set( host , atom )\n\t\t\t}\n\t\t\t\n\t\t\treturn atom.value( next , force )\n\t\t}\n\t\t\n\t\tObject.defineProperty( obj , name + \"()\" , { get : function() { return store.get( this ) } } )\n\n\t\tdescr.value[ 'value' ] = value\n\t}\n\n\texport function $mol_mem_key< Host , Key , Value >(\n\t\tobj : Host ,\n\t\tname : string ,\n\t\tdescr : TypedPropertyDescriptor< ( key : Key , next? : Value , force? : $mol_atom_force )=> Value >\n\t) {\n\t\tconst value = descr.value!\n\t\tconst store = new WeakMap< Object , Map< any , $mol_atom<Value> > >()\n\t\t\n\t\tdescr.value = function $mol_mem_key_value( key : Key , next? : Value , force? : $mol_atom_force ) {\n\t\t\tconst host : any = this\n\t\t\t\n\t\t\tlet dict = store.get( host )\n\t\t\tif( !dict ) store.set( host , dict = new $mol_dict )\n\t\t\t\n\t\t\tlet atom = dict.get( key )\n\t\t\tif( !atom ) {\n\t\t\t\t\n\t\t\t\tconst id = `${ host }.${ name }(${ JSON.stringify( key ) })`\n\t\t\t\tatom = new $mol_atom<Value>( id , function( ... args: any[] ) {\n\t\t\t\t\tconst v = value.call( host , key , ... args )\n\t\t\t\t\tif( v instanceof $mol_object ) {\n\t\t\t\t\t\tif( !v.object_host() ) {\n\t\t\t\t\t\t\tv.object_host( host )\n\t\t\t\t\t\t\tv.object_field( name )\n\t\t\t\t\t\t\tv.object_id( id )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn v\n\t\t\t\t} )\n\n\t\t\t\tconst destructor = atom.destructor\n\t\t\t\tatom.destructor = ()=> {\n\t\t\t\t\tdict!.delete( key )\n\t\t\t\t\tdestructor.call( atom )\n\t\t\t\t}\n\n\t\t\t\tdict.set( key , atom )\n\n\t\t\t}\n\t\t\t\n\t\t\treturn atom.value( next , force )\n\t\t}\n\t\t\n\t\tObject.defineProperty( obj , name + \"()\" , { get : function() { return store.get( this ) } } )\n\t\tvoid( ( descr.value as any )[ 'value' ] = value )\n\t}\n\t\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\tgetter[ Symbol.toStringTag ] = value\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\texport function $mol_exec( dir : string , command : string , ...args : string[] ) {\n\n\t\tlet [ app , ... args0 ] = command.split( ' ' )\n\t\targs = [ ... args0 , ... args ]\n\n\t\tconsole.info( `${ $node.path.relative( '' , dir ) }> ${app} ${ args.join( ' ' ) }` )\n\n\t\tvar res = $node.child_process.spawnSync(\n\t\t\tapp ,\n\t\t\targs,\n\t\t\t{\n\t\t\t\tcwd : $node.path.resolve( dir ) ,\n\t\t\t\tshell : true ,\n\t\t\t}\n\t\t)\n\t\t\n\t\tif( res.status || res.error ) return $mol_fail( res.error || new Error( res.stderr ) )\n\t\tif( !res.stdout ) res.stdout = ''\n\n\t\treturn res\n\t}\n}\n","var $node = new Proxy( {} , { get( target : any, name : string , wrapper : any ) {\n\n\tif( require( 'module' ).builtinModules.indexOf( name ) >= 0 ) return require( name )\n\t\n\tif( !require( 'fs' ).existsSync( `./node_modules/${ name }` ) ) {\n\t\t$.$mol_exec( '.' , 'npm' , 'install' , name )\n\t}\n\t\n\treturn require( name )\n\n} } )\n","namespace $ {\n\t\n\texport class $mol_file extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic absolute( path : string ) {\n\t\t\treturn $mol_file.make({\n\t\t\t\tpath : $mol_const( path )\n\t\t\t})\n\t\t}\n\t\t\n\t\tstatic relative( path : string ) : $mol_file {\n\t\t\treturn $mol_file.absolute( $node.path.resolve( path ).replace( /\\\\/g , '/' ) )\n\t\t}\n\t\t\n\t\tpath() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\twatcher() {\n\n\t\t\tconst watcher = $node.chokidar.watch( this.path() , {\n\t\t\t\tpersistent : false ,\n\t\t\t\tignored : /(^\\.|___$)/ ,\n\t\t\t\tdepth :  0 ,\n\t\t\t\tignoreInitial : true ,\n\t\t\t} )\n\t\t\t\n\t\t\twatcher.on( 'all' , ( type : string , path : string )=> {\n\t\t\t\t\n\t\t\t\tconst file = $mol_file.relative( path.replace( /\\\\/g , '/' ) )\n\t\t\t\tfile.stat( undefined , $mol_atom_force_cache )\n\n\t\t\t\tif( type === 'change' ) return\n\t\t\t\tfile.parent().stat( undefined , $mol_atom_force_cache )\n\n\t\t\t} )\n\n\t\t\twatcher.on( 'error' , ( error : Error )=> {\n\t\t\t\tthis.stat( error , $mol_atom_force_cache )\n\t\t\t} )\n\t\t\t\n\t\t\treturn watcher\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstat( next? : any , force? : $mol_atom_force ) {\n\t\t\tvar path = this.path()\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvar stat = next || $node.fs.statSync( path )\n\t\t\t} catch( error ) {\n\t\t\t\tif( error.code === 'ENOENT' ) return null\n\t\t\t\treturn error\n\t\t\t}\n\t\t\t\n\t\t\tthis.parent().watcher()\n\t\t\t\n\t\t\treturn stat\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tversion() {\n\t\t\treturn this.stat().mtime.getTime().toString( 36 ).toUpperCase()\n\t\t}\n\t\t\n\t\texists( next? : boolean ) {\n\t\t\tvar exists = !!this.stat()\n\t\t\t\n\t\t\tif( next === void 0 ) {\n\t\t\t\treturn exists\n\t\t\t} else {\n\t\t\t\tif( next == exists ) return exists\n\t\t\t\t\n\t\t\t\tif( next ) {\n\t\t\t\t\tthis.parent().exists( true )\n\t\t\t\t\t$node.fs.mkdirSync( this.path() )\n\t\t\t\t} else {\n\t\t\t\t\t$node.fs.unlinkSync( this.path() )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.stat( undefined , $mol_atom_force_cache )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t}\n\t\t\n\t\tparent() {\n\t\t\treturn this.resolve( '..' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttype() {\n\t\t\tvar stat = this.stat()\n\t\t\t\n\t\t\tif( stat ) {\n\t\t\t\tif( stat.isFile() ) return 'file'\n\t\t\t\tif( stat.isDirectory() ) return 'dir'\n\t\t\t\tif( stat.isBlockDevice() ) return 'blocks'\n\t\t\t\tif( stat.isCharacterDevice() ) return 'chars'\n\t\t\t\tif( stat.isSymbolicLink() ) return 'link'\n\t\t\t\tif( stat.isFIFO() ) return 'fifo'\n\t\t\t\tif( stat.isSocket() ) return 'socket'\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error( `Unknown file type ${this.path()}` )\n\t\t}\n\t\t\n\t\tname() {\n\t\t\treturn $node.path.basename( this.path() )\n\t\t}\n\t\t\n\t\text() {\n\t\t\tvar match = /((?:\\.\\w+)+)$/.exec( this.path() )\n\t\t\treturn match ? match[ 1 ].substring( 1 ) : ''\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tcontent( next? : string , force? : $mol_atom_force ) {\n\t\t\tif( next === void 0 ) {\n\t\t\t\treturn this.stat() && $node.fs.readFileSync( this.path() )//.toString()\n\t\t\t}\n\t\t\t\n\t\t\tthis.parent().exists( true )\n\t\t\t$node.fs.writeFileSync( this.path() , next )\n\t\t\t\n\t\t\treturn next//.toString()\n\t\t}\n\t\t\n\t\treader() {\n\t\t\treturn $node.fs.createReadStream( this.path() )\n\t\t}\n\t\t\n\t\twriter() {\n\t\t\treturn $node.fs.createWriteStream( this.path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsub() : $mol_file[] {\n\t\t\tthis.stat()\n\t\t\t\n\t\t\tswitch( this.type() ) {\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn ( <string[]> $node.fs.readdirSync( this.path() ) )\n\t\t\t\t\t.filter( name => !/^\\.+$/.test( name ) )\n\t\t\t\t\t.map( name => this.resolve( name ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn []\n\t\t}\n\t\t\n\t\tresolve( path : string ) : $mol_file {\n\t\t\treturn ( this.constructor as typeof $mol_file ).relative( $node.path.join( this.path() , path ) )\n\t\t}\n\t\t\n\t\trelate( base = ( this.constructor as typeof $mol_file ).relative( '.' ) ) {\n\t\t\treturn $node.path.relative( base.path() , this.path() ).replace( /\\\\/g , '/' )\n\t\t}\n\t\t\n\t\tappend( next : string ) {\n\t\t\t$node.fs.appendFileSync( this.path() , next )\n\t\t}\n\t\t\n\t\tfind(\n\t\t\tinclude? : RegExp ,\n\t\t\texclude? : RegExp\n\t\t) {\n\t\t\t\n\t\t\tvar found : $mol_file[] = []\n\t\t\tthis.sub().forEach(\n\t\t\t\tchild => {\n\t\t\t\t\tif( exclude && child.path().match( exclude ) ) return\n\t\t\t\t\tif( !include || child.path().match( include ) ) found.push( child )\n\t\t\t\t\tif( child.type() === 'dir' ) found = found.concat( child.find( include , exclude ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn found\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_typeof( value : any ) {\n\t\tvar str = {}.toString.apply( value )\n\t\tvar type = str.substring( 8, str.length - 1 )\n\t\treturn type\n\t}\n\n}\n","namespace $ {\n\n\texport type $mol_tree_path = Array< string | number | null >\n\n\texport type $mol_tree_hack = ( input : $mol_tree , context : $mol_tree_context )=> $mol_tree[]\n\texport type $mol_tree_context = Record< string , $mol_tree_hack >\n\texport type $mol_tree_library = Record< string , $mol_tree_context >\n\t\n\texport class $mol_tree {\n\t\t\n\t\ttype : string\n\t\tdata : string\n\t\tsub : $mol_tree[]\n\t\tbaseUri : string\n\t\trow : number\n\t\tcol : number\n\t\t\n\t\tconstructor(\n\t\t\tconfig : {\n\t\t\t\ttype? : string\n\t\t\t\tvalue? : string\n\t\t\t\tdata? : string\n\t\t\t\tsub? : $mol_tree[]\n\t\t\t\tbaseUri? : string\n\t\t\t\trow? : number\n\t\t\t\tcol? : number\n\t\t\t} = {}\n\t\t) {\n\t\t\tthis.type = config.type || ''\n\t\t\tif( config.value !== undefined ) {\n\t\t\t\tvar sub = $mol_tree.values( config.value )\n\t\t\t\tif( config.type || sub.length > 1 ) {\n\t\t\t\t\tthis.sub = sub.concat( config.sub || [] )\n\t\t\t\t\tthis.data = config.data || ''\n\t\t\t\t} else {\n\t\t\t\t\tthis.data = sub[ 0 ].data\n\t\t\t\t\tthis.sub = config.sub || []\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.data = config.data || ''\n\t\t\t\tthis.sub = config.sub || []\n\t\t\t}\n\t\t\tthis.baseUri = config.baseUri || ''\n\t\t\tthis.row = config.row || 0\n\t\t\tthis.col = config.col || 0\n\t\t}\n\t\t\n\t\tstatic values( str : string , baseUri? : string ) {\n\t\t\treturn str.split( '\\n' ).map(\n\t\t\t\t( data , index ) => new $mol_tree(\n\t\t\t\t\t{\n\t\t\t\t\t\tdata : data ,\n\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\trow : index + 1\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\t\n\t\tclone(\n\t\t\tconfig : {\n\t\t\t\ttype? : string\n\t\t\t\tvalue? : string\n\t\t\t\tdata? : string\n\t\t\t\tsub? : $mol_tree[]\n\t\t\t\tbaseUri? : string\n\t\t\t\trow? : number\n\t\t\t\tcol? : number\n\t\t\t}\n\t\t) {\n\t\t\treturn new $mol_tree(\n\t\t\t\t{\n\t\t\t\t\ttype : ( 'type' in config ) ? config.type : this.type ,\n\t\t\t\t\tdata : ( 'data' in config ) ? config.data : this.data ,\n\t\t\t\t\tsub : ( 'sub' in config ) ? config.sub : this.sub ,\n\t\t\t\t\tbaseUri : ( 'baseUri' in config ) ? config.baseUri : this.baseUri ,\n\t\t\t\t\trow : ( 'row' in config ) ? config.row : this.row ,\n\t\t\t\t\tcol : ( 'col' in config ) ? config.col : this.col ,\n\t\t\t\t\tvalue : config.value\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\tstatic fromString( str : string , baseUri? : string ) {\n\t\t\t\n\t\t\tvar root = new $mol_tree( { baseUri : baseUri } )\n\t\t\tvar stack = [ root ]\n\t\t\t\n\t\t\tvar row = 0\n\t\t\tvar prefix = str.replace( /^\\n?(\\t*)[\\s\\S]*/ , '$1' )\n\t\t\tvar lines = str.replace( new RegExp( '^\\\\t{0,' + prefix.length + '}' , 'mg' ) , '' ).split( '\\n' )\n\t\t\tlines.forEach(\n\t\t\t\tline => {\n\t\t\t\t\t++row\n\t\t\t\t\t\n\t\t\t\t\tvar chunks = /^(\\t*)((?:[^\\n\\t\\\\ ]+ *)*)(\\\\[^\\n]*)?(.*?)(?:$|\\n)/m.exec( line )\n\t\t\t\t\tif( !chunks || chunks[4] ) throw new Error( `Syntax error at ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\n\t\t\t\t\tvar indent = chunks[ 1 ]\n\t\t\t\t\tvar path = chunks[ 2 ]\n\t\t\t\t\tvar data = chunks[ 3 ]\n\t\t\t\t\t\n\t\t\t\t\tvar deep = indent.length\n\t\t\t\t\tvar types = path ? path.replace( / $/ , '' ).split( / +/ ) : []\n\t\t\t\t\t\n\t\t\t\t\tif( stack.length <= deep ) throw new Error( `Too many tabs at ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\n\t\t\t\t\tstack.length = deep + 1\n\t\t\t\t\tvar parent = stack[ deep ];\n\t\t\t\t\t\n\t\t\t\t\tlet col = deep\n\t\t\t\t\ttypes.forEach(\n\t\t\t\t\t\ttype => {\n\t\t\t\t\t\t\tif( !type ) throw new Error( `Unexpected space symbol ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\t\tvar next = new $mol_tree({ type , baseUri , row , col })\n\t\t\t\t\t\t\tparent.sub.push( next )\t\n\t\t\t\t\t\t\tparent = next\n\t\t\t\t\t\t\tcol += type.length + 1\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\tif( data ) {\n\t\t\t\t\t\tvar next = new $mol_tree({ data : data.substring( 1 ) , baseUri , row , col })\n\t\t\t\t\t\tparent.sub.push( next )\n\t\t\t\t\t\tparent = next\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstack.push( parent )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\tstatic fromJSON( json : any , baseUri = '' ) : $mol_tree {\n\t\t\tvar type = $mol_typeof( json )\n\t\t\tswitch( type ) {\n\t\t\t\tcase 'Boolean' :\n\t\t\t\tcase 'Null' :\n\t\t\t\tcase 'Number' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : String( json ) ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'String' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue : json ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Array' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"/\" ,\n\t\t\t\t\t\t\tsub : ( json as any[] ).map( json => $mol_tree.fromJSON( json , baseUri ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Date' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"\" ,\n\t\t\t\t\t\t\tvalue : json.toISOString() ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Object' :\n\t\t\t\t\tvar sub : $mol_tree[] = []\n\t\t\t\t\tfor( var key in json ) {\n\t\t\t\t\t\tif( json[ key ] === undefined ) continue\n\t\t\t\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\t\t\t\t\t\t\tvar child = new $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype : key ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar child = new $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue : key ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild.sub.push(\n\t\t\t\t\t\t\t$mol_tree.fromJSON( json[ key ] , baseUri )\n\t\t\t\t\t\t)\n\t\t\t\t\t\tsub.push( child )\n\t\t\t\t\t}\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"*\" ,\n\t\t\t\t\t\t\tsub : sub ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t}\n\t\t\tthrow new Error( `Unsupported type (${type}) at ${baseUri}` )\n\t\t}\n\t\t\n\t\tget uri() {\n\t\t\treturn this.baseUri + '#' + this.row + ':' + this.col\n\t\t}\n\t\t\n\t\ttoString( prefix = '' ) : string {\n\t\t\tvar output = ''\n\t\t\t\n\t\t\tif( this.type.length ) {\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\t\t\t\toutput += this.type\n\t\t\t\tif( this.sub.length == 1 ) {\n\t\t\t\t\treturn output + ' ' + this.sub[ 0 ].toString( prefix )\n\t\t\t\t}\n\t\t\t\toutput += \"\\n\"\n\t\t\t} else if( this.data.length || prefix.length ) {\n\t\t\t\toutput += \"\\\\\" + this.data + \"\\n\"\n\t\t\t}\n\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\toutput += prefix\n\t\t\t\toutput += child.toString( prefix + \"\\t\" )\n\t\t\t}\n\t\t\t\n\t\t\treturn output\n\t\t}\n\t\t\n\t\ttoJSON() : any {\n\t\t\tif( !this.type ) return this.value\n\t\t\t\n\t\t\tif( this.type === 'true' ) return true\n\t\t\tif( this.type === 'false' ) return false\n\t\t\tif( this.type === 'null' ) return null\n\t\t\t\n\t\t\tif( this.type === '*' ) {\n\t\t\t\tvar obj = {}\n\t\t\t\tfor( var child of this.sub ) {\n\t\t\t\t\tvar key = child.type || child.clone({ sub : child.sub.slice( 0 , child.sub.length - 1 ) }).value\n\t\t\t\t\tvar val = child.sub[ child.sub.length - 1 ].toJSON()\n\t\t\t\t\tif( val !== undefined ) ( obj as any )[ key ] = val\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === '/' ) {\n\t\t\t\tvar res : any[] = []\n\t\t\t\tthis.sub.forEach(\n\t\t\t\t\tchild => {\n\t\t\t\t\t\tvar val = child.toJSON()\n\t\t\t\t\t\tif( val !== undefined ) res.push( val )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\treturn res\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'time' ) {\n\t\t\t\treturn new Date( this.value )\n\t\t\t}\n\t\t\t\n\t\t\tif( String( Number( this.type ) ) == this.type.trim() ) return Number( this.type )\n\t\t\t\n\t\t\tthrow new Error( `Unknown type (${this.type}) at ${this.uri}` )\n\t\t}\n\t\t\n\t\tget value() {\n\t\t\tvar values : string[] = []\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\tif( child.type ) continue\n\t\t\t\tvalues.push( child.value )\n\t\t\t}\n\t\t\treturn this.data + values.join( \"\\n\" )\n\t\t}\n\t\t\n\t\tinsert( value : $mol_tree , ...path : $mol_tree_path ) : $mol_tree {\n\t\t\tif( path.length === 0 ) return value\n\t\t\t\n\t\t\tconst type = path[0]\n\t\t\tif( typeof type === 'string' ) {\n\n\t\t\t\tlet replaced = false\n\t\t\t\tconst sub = this.sub.map( ( item , index )=> {\n\t\t\t\t\tif( item.type !== type ) return item\n\t\t\t\t\treplaced = true\n\t\t\t\t\treturn item.insert( value , ... path.slice( 1 ) )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( !replaced ) sub.push( new $mol_tree({ type }).insert( value , ... path.slice( 1 ) ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else if( typeof type === 'number' ) {\n\t\t\t\t\n\t\t\t\tconst sub = this.sub.slice()\n\t\t\t\tsub[ type ] = ( sub[ type ] || new $mol_tree ).insert( value , ... path.slice( 1 ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub : ( ( this.sub.length === 0 ) ? [ new $mol_tree() ] : this.sub ).map( item => item.insert( value , ... path.slice( 1 ) ) ) })\n\n\t\t\t}\n\t\t}\n\n\t\tselect( ...path : $mol_tree_path ) {\n\t\t\tvar next = [ this as $mol_tree ]\n\t\t\tfor( var type of path ) {\n\t\t\t\tif( !next.length ) break\n\t\t\t\tvar prev = next\n\t\t\t\tnext = []\n\n\t\t\t\tfor( var item of prev ) {\n\n\t\t\t\t\tswitch( typeof( type ) ) {\n\n\t\t\t\t\t\tcase 'string' :\n\t\t\t\t\t\t\tfor( var child of item.sub ) {\n\t\t\t\t\t\t\t\tif( !type || ( child.type == type ) ) {\n\t\t\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'number' :\n\t\t\t\t\t\t\tif( type < item.sub.length ) next.push( item.sub[ type ] )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault : next.push( ... item.sub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new $mol_tree( { sub : next } )\n\t\t}\n\t\t\n\t\tfilter( path : string[] , value? : string ) {\n\t\t\tvar sub = this.sub.filter(\n\t\t\t\tfunction( item ) {\n\t\t\t\t\t\n\t\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\t\n\t\t\t\t\tif( value == null ) {\n\t\t\t\t\t\treturn Boolean( found.sub.length )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found.sub.some( child => child.value == value )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn new $mol_tree( { sub : sub } )\n\t\t}\n\n\t\ttransform( visit : ( stack : $mol_tree[] , sub : ()=> $mol_tree[] )=> $mol_tree | null , stack : $mol_tree[] = [] ) : $mol_tree | null {\n\t\t\tconst sub_stack = [ this , ...stack ]\n\t\t\treturn visit( sub_stack , ()=> this.sub.map( node => node.transform( visit , sub_stack ) ).filter( n => n ) as $mol_tree[] )\n\t\t}\n\n\t\thack( context : $mol_tree_context ) : $mol_tree {\n\t\t\t\n\t\t\tconst sub = ( [] as $mol_tree[] ).concat( ... this.sub.map( child => {\n\n\t\t\t\tconst handle = context[ child.type ] || context[ '' ]\n\t\t\t\tif( !handle ) $mol_fail( child.error( 'Handler not defined' ) )\n\t\t\t\t\n\t\t\t\treturn handle( child , context )\n\n\t\t\t} ) )\n\n\t\t\treturn this.clone({ sub })\n\t\t}\n\n\t\terror( message : string ) {\n\t\t\treturn new Error( `${message}:\\n${ this } ${this.baseUri}:${this.row}:${this.col}` )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_window extends $mol_object {\n\t\t\n\t\tstatic size( next? : {\n\t\t\twidth : number\n\t\t\theight: number\n\t\t} ) {\n\t\t\treturn next || {\n\t\t\t\twidth : 1024 ,\n\t\t\t\theight : 768 ,\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : Window & Pick< typeof globalThis , 'Node' | 'Element' | 'HTMLElement' | 'XMLHttpRequest' | 'DOMParser' | 'XMLSerializer' >\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_view_selection extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic focused( next? : Element[] , force? : $mol_atom_force ) {\n\t\t\tif( next === undefined ) return [] as Element[]\n\t\t\t\n\t\t\tconst node = next[ 0 ] as HTMLElement\n\t\t\t\n\t\t\tconst atom = $mol_atom_current< HTMLElement >()\n\t\t\tnew $mol_defer( ()=> {\n\t\t\t\tif( node ) return node.focus()\n\n\t\t\t\tconst el = atom.cache()![0]\n\t\t\t\tif( el ) el.blur()\n\t\t\t} )\n\n\t\t\treturn undefined\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic position( next? : { start : number , end : number , id : string } , force? : $mol_atom_force ) {\n\t\t\tif( next !== undefined ) {\n\t\t\t\t\n\t\t\t\tvar start = next.start\n\t\t\t\tvar end = next.end\n\t\t\t\tif( !( start <= end ) ) throw new Error( `Wrong offsets (${start},${end})` )\n\t\t\t\t\n\t\t\t\tvar root = $mol_dom_context.document.getElementById( next.id )!\n\t\t\t\troot.focus()\n\t\t\t\t\n\t\t\t\tvar range = new Range\n\t\t\t\t\n\t\t\t\tvar cur : Node = root.firstChild!\n\t\t\t\twhile( cur !== root ) {\n\t\t\t\t\twhile( cur.firstChild ) cur = cur.firstChild\n\t\t\t\t\tif( cur.nodeValue ) {\n\t\t\t\t\t\tvar length = cur.nodeValue.length\n\t\t\t\t\t\tif( length >= start )  break\n\t\t\t\t\t\tstart -= length\n\t\t\t\t\t}\n\t\t\t\t\twhile( !cur.nextSibling ) {\n\t\t\t\t\t\tcur = cur.parentNode!\n\t\t\t\t\t\tif( cur === root ) {\n\t\t\t\t\t\t\tstart = root.childNodes.length\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trange.setStart( cur , start )\n\t\t\t\t\n\t\t\t\tvar cur : Node = root.firstChild!\n\t\t\t\twhile( cur !== root ) {\n\t\t\t\t\twhile( cur.firstChild ) cur = cur.firstChild\n\t\t\t\t\tif( cur.nodeValue ) {\n\t\t\t\t\t\tvar length = cur.nodeValue.length\n\t\t\t\t\t\tif( length >= end )  break\n\t\t\t\t\t\tend -= length\n\t\t\t\t\t}\n\t\t\t\t\twhile( !cur.nextSibling ) {\n\t\t\t\t\t\tcur = cur.parentNode!\n\t\t\t\t\t\tif( cur === root ) {\n\t\t\t\t\t\t\tend = root.childNodes.length\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trange.setEnd( cur , end )\n\t\t\t\t\n\t\t\t\tvar sel = $mol_dom_context.document.getSelection()!\n\t\t\t\tsel.removeAllRanges()\n\t\t\t\tsel.addRange( range )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t} else {\n\t\t\t\tvar sel = $mol_dom_context.document.getSelection()\n\t\t\t\tif( sel.rangeCount === 0 ) return null\n\t\t\t\tvar range = sel.getRangeAt( 0 )\n\t\t\t\t\n\t\t\t\tvar el = range.commonAncestorContainer as Element\n\t\t\t\twhile( el && !el.id ) el = el.parentElement!\n\t\t\t\t\n\t\t\t\tif( !el ) return { id : null , start : 0 , end : 0 }\n\t\t\t\t\n\t\t\t\tvar meter = new Range\n\t\t\t\tmeter.selectNodeContents( el )\n\t\t\t\t\n\t\t\t\tmeter.setEnd( range.startContainer , range.startOffset )\n\t\t\t\tvar startOffset = meter.toString().length\n\t\t\t\t\n\t\t\t\tmeter.setEnd( range.endContainer , range.endOffset )\n\t\t\t\tvar endOffset = meter.toString().length\n\t\t\t\t\n\t\t\t\treturn { id : el.id , start : startOffset , end : endOffset }\n\t\t\t}\n\t\t}\n\t\t\n\t\tstatic onFocus( event : FocusEvent ) {\n\t\t\tconst parents : Element[] = []\n\t\t\tlet element = event.target as HTMLElement\n\t\t\t\n\t\t\twhile( element ) {\n\t\t\t\tparents.push( element )\n\t\t\t\telement = element.parentNode as HTMLElement\n\t\t\t}\n\n\t\t\tthis.focused( parents , $mol_atom_force_cache )\n\t\t}\n\t\t\n\t\tstatic onBlur( event : FocusEvent ) {\n\t\t\tconst focused = this.focused()\n\t\t\tsetTimeout( $mol_log_group( '$mol_view_selection blur' , ()=> {\n\t\t\t\tif( focused !== this.focused() ) return\n\t\t\t\tthis.focused( [] , $mol_atom_force_cache )\n\t\t\t} ) )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_attributes (\n\t\tel : Element ,\n\t\tattrs : { [ key : string ] : string|number|boolean }\n\t) {\n\t\tfor( let name in attrs ) {\n\t\t\tlet val = attrs[ name ] as any\n\t\t\tif( val === null || val === false ) el.removeAttribute( name )\n\t\t\telse el.setAttribute( name , String( val ) )\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_events (\n\t\tel : Element ,\n\t\tevents : { [ key : string ] : ( event : Event )=> any }\n\t) {\n\t\tfor( let name in events ) {\n\t\t\tel.addEventListener( name , $mol_log_group( el.id + ' ' + name , events[ name ] ) , { passive : false } as any )\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_events_async (\n\t\tel : Element ,\n\t\tevents : { [ key : string ] : ( event : Event )=> any }\n\t) {\n\t\tfor( let name in events ) {\n\t\t\tel.addEventListener( name , $mol_log_group( el.id + ' ' + name , events[ name ] ) , { passive : true } as any )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element ,\n\t\tchildNodes : NodeList | readonly ( Node | string | number | boolean | { dom_tree : ()=> Node } )[]\n\t) {\n\t\tconst node_list = [] as ( Node | string )[]\n\t\tconst node_set = new Set<Node>()\n\t\t\n\t\tfor( let i = 0 ; i < childNodes.length ; ++i ) {\n\t\t\tlet node = childNodes[ i ] as any\n\t\t\tif( node == null ) continue\n\t\t\tif( Object( node ) === node ) {\n\t\t\t\tif( node[ 'dom_tree' ] ) node = node[ 'dom_tree' ]()\n\t\t\t\tnode_list.push( node )\n\t\t\t\tnode_set.add( node )\n\t\t\t} else {\n\t\t\t\tnode_list.push( String( node ) )\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view_ of node_list ) {\n\t\t\tconst view = view_.valueOf() as Node\n\t\t\t\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_styles (\n\t\tel : Element ,\n\t\tstyles : { [ key : string ] : string|number }\n\t) {\n\t\tfor( let name in styles ) {\n\t\t\tlet val = styles[ name ]\n\t\t\t\n\t\t\tconst style = ( el as HTMLElement ).style as any\n\t\t\tconst cur = style[ name ]\n\t\t\t\n\t\t\tif( typeof val === 'number' ) {\n\t\t\t\tif( parseFloat( cur ) == val ) continue\n\t\t\t\tstyle[ name ] = `${ val }px`\n\t\t\t}\n\t\t\t\n\t\t\tif( cur !== val ) style[ name ] = val\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_fields (\n\t\tel : Element ,\n\t\tfields : { [ key : string ] : any }\n\t) {\n\t\tfor( let key in fields ) {\n\t\t\t\n\t\t\tconst val : any = fields[ key ]\n\t\t\t\n\t\t\tif( val === undefined ) continue\n\t\t\t// if( el[ key ] === val ) continue\n\t\t\t\n\t\t\tel[ key ] = val\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_func_name( func : Function ) : string {\n\t\treturn func.name\n\t}\n\n\texport function $mol_func_name_from< Target extends Function >( target : Target , source : Function ) {\n\t\tObject.defineProperty( target , 'name' , { value : source.name } )\n\t\treturn target\n\t}\n\n}\n","\nnamespace $ {\n\t\n\texport namespace $$ { let $$ }\n\texport namespace $mol { let $mol }\n\t\n\texport function $mol_view_visible_width() {\n\t\treturn $mol_window.size().width\n\t}\n\t\n\texport function $mol_view_visible_height() {\n\t\treturn $mol_window.size().height\n\t}\n\t\n\texport function $mol_view_state_key( suffix : string ) {\n\t\treturn suffix\n\t}\n\n\t/// Reactive statefull lazy ViewModel\n\texport class $mol_view extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic Root( id : number ) {\n\t\t\treturn new this\n\t\t}\n\n\t\t@ $mol_mem\n\t\tstatic autobind() {\n\t\t\tconst nodes = $mol_dom_context.document.querySelectorAll( '[mol_view_root]' )\n\t\t\t\n\t\t\tfor( let i = nodes.length - 1 ; i >= 0 ; --i ) {\n\t\t\t\tconst name = nodes.item( i ).getAttribute( 'mol_view_root' )!\n\t\t\t\t\n\t\t\t\tconst View = $[ name ]\n\t\t\t\tif( !View ) {\n\t\t\t\t\tconsole.error( `Can not attach view. Class not found: ${ name }` )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst view = View.Root( i )\n\t\t\t\t\n\t\t\t\tview.dom_tree( nodes.item( i ) )\n\t\t\t\t\n\t\t\t\tdocument.title = view.title()\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttitle() : string {\n\t\t\treturn this.constructor.toString()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tfocused( next?: boolean ) {\n\t\t\tlet node = this.dom_node()\n\t\t\tconst value = $mol_view_selection.focused( next === undefined ? undefined : next ? [ node ] : [] ) || []\n\t\t\treturn value.indexOf( node ) !== -1\n\t\t} \n\t\t\n\t\t@ $mol_mem\n\t\tcontext( next? : $mol_ambient_context ) {\n\t\t\treturn next || $ as $mol_ambient_context\n\t\t}\n\t\tget $() {\n\t\t\treturn this.context()\n\t\t}\n\t\tset $( next : $mol_ambient_context ) {\n\t\t\tthis.context( next )\n\t\t}\n\t\t\n\t\tcontext_sub() {\n\t\t\treturn this.context()\n\t\t}\n\t\t\n\t\tstate_key( suffix = '' ) {\n\t\t\treturn this.$.$mol_view_state_key( suffix )\n\t\t}\n\t\t\n\t\t/// Name of element that created when element not found in DOM\n\t\tdom_name() {\n\t\t\treturn this.constructor.toString().replace( '$' , '' )\n\t\t}\n\t\t\n\t\t/// NameSpace of element that created when element not found in DOM\n\t\tdom_name_space() { return 'http://www.w3.org/1999/xhtml' }\n\t\t\n\t\t/// Raw child views\n\t\tsub() {\n\t\t\treturn null as readonly ($mol_view|Node|string|number|boolean)[] | null\n\t\t}\n\t\t\n\t\t/// Visible sub views with defined context()\n\t\t/// Render all by default\n\t\tsub_visible() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return sub\n\t\t\t\n\t\t\tconst context = this.context_sub()\n\t\t\tsub.forEach( child => {\n\t\t\t\tif( child instanceof $mol_view ) {\n\t\t\t\t\tchild.$ = context\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn sub\n\t\t}\n\t\t\n\t\t/// Minimal width that used for lazy rendering\n\t\t@ $mol_mem\n\t\tminimal_width() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return 0\n\t\t\t\n\t\t\tlet min = 0\n\t\t\tsub.forEach( view => {\n\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\tmin = Math.max( min , view.minimal_width() )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn min\n\t\t}\n\t\t\n\t\t/// Minimal height that used for lazy rendering\n\t\tminimal_height() {\n\t\t\treturn this.content_height()\n\t\t}\n\n\t\t@ $mol_mem\n\t\tcontent_height() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return 0\n\t\t\t\n\t\t\tlet min = 0\n\t\t\tsub.forEach( view => {\n\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\tmin = Math.max( min , view.minimal_height() )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn min\n\t\t}\n\n\t\tdom_id() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdom_node( next? : Element ) {\n\t\t\tconst node = next || this.$.$mol_dom_context.document.createElementNS( this.dom_name_space() , this.dom_name() )\n\n\t\t\tnode.setAttribute( 'id' , this.dom_id() )\n\t\t\t$mol_dom_render_attributes( node , this.attr_static() )\n\t\t\t$mol_dom_render_events( node , this.event() )\n\t\t\t$mol_dom_render_events_async( node , this.event_async() )\n\n\t\t\treturn node\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdom_tree( next? : Element ) : Element {\n\t\t\tconst node = this.dom_node( next )\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tfor( let plugin of this.plugins() ) {\n\t\t\t\t\tplugin.dom_node( node )\n\t\t\t\t\tplugin.render()\n\t\t\t\t}\n\t\t\t\tthis.render()\n\t\t\t\t\n\t\t\t} catch( error ) {\n\t\t\t\t\n\t\t\t\t$mol_dom_render_attributes( node , { mol_view_error : error.name } )\n\t\t\t\t\n\t\t\t\tif( error instanceof $mol_atom_wait ) return node\n\t\t\t\t\n\t\t\t\ttry { void( ( node as HTMLElement ).innerText = error.message ) } catch( e ) {}\n\t\t\t\t\n\t\t\t\tif( error[ '$mol_atom_catched' ] ) return node\n\t\t\t\t\n\t\t\t\tconsole.error( error )\n\n\t\t\t\terror[ '$mol_atom_catched' ] = true\n\t\t\t}\n\t\t\t\n\t\t\treturn node\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst node = this.dom_node()\n\t\t\t\n\t\t\tconst sub = this.sub_visible()\n\t\t\tif( sub ) $mol_dom_render_children( node , sub )\n\t\t\t\n\t\t\t$mol_dom_render_attributes( node , this.attr() )\n\t\t\t$mol_dom_render_styles( node , this.style() )\n\t\t\t\n\t\t\tconst fields = this.field()\n\t\t\t$mol_dom_render_fields( node , fields )\n\t\t\tnew $mol_defer( ()=> $mol_dom_render_fields( node , fields ) )\n\t\t}\n\n\t\t@ $mol_mem\n\t\tstatic view_classes() {\n\t\t\tconst proto = this.prototype\n\t\t\t\n\t\t\tlet current = proto\n\t\t\tconst classes = [] as ( typeof $mol_view )[]\n\t\t\t\n\t\t\twhile( current ) {\n\t\t\t\tclasses.push( current.constructor as typeof $mol_view )\n\t\t\t\tif(!( current instanceof $mol_view )) break\n\t\t\t\tcurrent = Object.getPrototypeOf( current )\n\t\t\t}\n\t\t\t\n\t\t\treturn classes\n\t\t}\n\t\t\n\t\tview_names_owned() {\n\t\t\tconst names = [] as string[]\n\t\t\tlet owner = this.object_host()\n\n\t\t\tif( owner instanceof $mol_view ) {\n\n\t\t\t\tconst suffix = this.object_field()\n\t\t\t\tconst suffix2 = '_' + suffix[0].toLowerCase() + suffix.substring(1)\n\t\t\t\t\n\t\t\t\tfor( let Class of ( owner.constructor as typeof $mol_view ).view_classes() ) {\n\t\t\t\t\tif( suffix in Class.prototype ) names.push( $mol_func_name( Class ) + suffix2 )\n\t\t\t\t\telse break\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor( let prefix of owner.view_names_owned() ) {\n\t\t\t\t\tnames.push( prefix + suffix2 )\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn names\n\t\t}\n\n\t\t@ $mol_mem\n\t\tview_names() {\n\t\t\tconst names = [] as string[]\n\t\t\t\n\t\t\tfor( let name of this.view_names_owned() ) {\n\t\t\t\tif( names.indexOf( name ) < 0 ) names.push( name )\n\t\t\t}\n\n\t\t\tfor( let Class of ( this.constructor as typeof $mol_view ).view_classes() ) {\n\t\t\t\tconst name = $mol_func_name( Class )\n\t\t\t\tif( names.indexOf( name ) < 0 ) names.push( name )\n\t\t\t}\n\n\t\t\treturn names\n\t\t}\n\t\t\n\t\tattr_static() : { [ key : string ] : string|number|boolean } {\n\t\t\tlet attrs : any = {}\n\t\t\t\n\t\t\tfor( let name of this.view_names() ) attrs[ name.replace( /\\$/g , '' ).toLowerCase() ] = ''\n\t\t\t\n\t\t\treturn attrs\n\t\t}\n\t\t\n\t\tattr() : { [ key : string ] : string|number|boolean } {\n\t\t\treturn {\n\t\t\t\t'mol_view_error' : false ,\n\t\t\t}\n\t\t}\n\t\t\n\t\tstyle() : { [ key : string ] : string|number } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tfield() : { [ key : string ] : any } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tevent() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tevent_async() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tplugins() {\n\t\t\treturn [] as readonly $mol_view[]\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_state_local< Value > extends $mol_object {\n\t\t\n\t\tstatic 'native()' : Pick< Storage , 'getItem'|'setItem'|'removeItem' >\n\t\tstatic native() {\n\t\t\tif( this['native()'] ) return this['native()']\n\n\t\t\tcheck : try {\n\t\t\t\tconst native = $mol_dom_context.localStorage\n\t\t\t\tif( !native ) break check\n\t\t\t\t\n\t\t\t\tnative.setItem( '' , '' )\n\t\t\t\tnative.removeItem( '' )\n\t\t\t\treturn this['native()'] = native\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.warn( error )\n\t\t\t}\n\n\t\t\treturn this['native()'] = {\n\t\t\t\tgetItem( key : string ) {\n\t\t\t\t\treturn this[ ':' + key ]\n\t\t\t\t} ,\n\t\t\t\tsetItem( key : string , value : string ) {\n\t\t\t\t\tthis[ ':' + key ] = value\n\t\t\t\t} ,\n\t\t\t\tremoveItem( key : string ) {\n\t\t\t\t\tthis[ ':' + key ] = void 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tstatic value< Value >( key : string , next? : Value , force? : $mol_atom_force ) : Value {\n\t\t\tif( next === void 0 ) return JSON.parse( this.native().getItem( key ) || 'null' )\n\t\t\t\n\t\t\tif( next === null ) this.native().removeItem( key )\n\t\t\telse this.native().setItem( key , JSON.stringify( next ) )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tprefix() { return '' }\n\t\t\n\t\tvalue( key : string , next? : Value ) {\n\t\t\treturn $mol_state_local.value( this.prefix() + '.' + key , next )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport interface $mol_locale_dict {\n\t\t[ key : string ] : string\n\t}\n\t\n\texport class $mol_locale extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic lang_default() {\n\t\t\treturn 'en'\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic lang( next? : string ) {\n\t\t\treturn $mol_state_local.value( 'locale' , next ) || $mol_dom_context.navigator.language.replace( /-.*/ , '' ) || this.lang_default()\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic source( lang : string ) {\n\t\t\treturn JSON.parse( $mol_file.relative( `web.locale=${ lang }.json` ).content() )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic texts( lang : string , next? : $mol_locale_dict ) : $mol_locale_dict {\n\t\t\tif( next ) return next\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn this.source( lang ).valueOf()\n\t\t\t} catch( error ) {\n\t\t\t\tif( error instanceof $mol_atom_wait ) $mol_fail_hidden( error )\n\t\t\t\tconst def = this.lang_default()\n\t\t\t\tif( lang === def ) throw error\n\t\t\t\treturn this.source( def )\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic text( key : string ) {\n\n\t\t\tfor( let lang of [ this.lang() , 'en' ] ) {\n\t\t\t\t\n\t\t\t\tconst text = this.texts( lang )[ key ]\n\t\t\t\tif( text ) return text\n\n\t\t\t\tconsole.warn( `Not translated to \"${ lang }\": ${ key }` )\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\treturn `<${ key }>`\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_view_tree_trim_remarks( def : $mol_tree ) {\n\t\treturn def.transform( ( [ node ] , sub )=> ( node.type === '-' ) ? null : node.clone({ sub : sub() }) )!\n\t}\n\n\texport function $mol_view_tree_classes( defs : $mol_tree ) {\n\t\treturn $mol_view_tree_trim_remarks( defs )\n\t}\n\n\texport function $mol_view_tree_class_name( val : $mol_tree ) {\n\t\treturn val.type\n\t}\n\n\texport function $mol_view_tree_super_name( val : $mol_tree ) {\n\t\tif( val.sub.length != 1 ) throw val.error( 'Wrong sub count' )\n\t\treturn val.sub[0].type\n\t}\n\n\texport function $mol_view_tree_class_props( def : $mol_tree ) {\n\t\tconst props : { [ key : string ] : $mol_tree } = {}\n\t\t\n\t\tconst catch_prop = ( prop : $mol_tree , type = '' )=> {\n\n\t\t\tlet def = prop\n\t\t\t\n\t\t\tif( type === '=>' ) {\n\t\t\t\tif( prop.sub[0] ) throw prop.error( 'Right binding can not have default value' )\n\t\t\t} else {\n\n\t\t\t\tif( prop.sub.length === 0 ) return\n\t\t\t\tif( prop.sub[0].type === '-' ) return\n\t\t\t\t\t\t\n\t\t\t\tprops[ prop.type ] = props[ prop.type ]\n\n\t\t\t\tdef = prop.clone({\n\t\t\t\t\tsub : [ prop.sub[0].transform( ( [ node , ... stack ] , sub )=> {\n\n\t\t\t\t\t\tif( [ '<=' , '<=>' , '=>' ].indexOf( node.type ) === -1 ) return node.clone({ sub : sub() })\n\t\t\t\t\t\t\n\t\t\t\t\t\tcatch_prop( node.sub[0] , node.type )\n\n\t\t\t\t\t\treturn node.clone({\n\t\t\t\t\t\t\tsub : [ node.sub[0].clone({\n\t\t\t\t\t\t\t\tsub : []\n\t\t\t\t\t\t\t}) ]\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t} )!]\n\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tif( props[ prop.type ] ) {\n\t\t\t\tif( props[ prop.type ].toString() !== def.toString() ) {\n\t\t\t\t\tthrow def.error( 'Property already defined with another default value' + props[ prop.type ].error('').message + '\\n---' )\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprops[ prop.type ] = def\n\t\t\t}\n\t\t}\n\n\t\tdef.sub[0].sub.map( sub => catch_prop( sub ) )\n\t\t\n\t\treturn def.clone({\n\t\t\ttype : '' ,\n\t\t\tsub : Object.keys( props ).map( name => props[ name ] ) ,\n\t\t})\n\n\t}\n\n\texport function $mol_view_tree_prop_name( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /^\\w+/ ) || [] )[0] || ''\n\t}\n\n\texport function $mol_view_tree_prop_key( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /!(\\w+)$/ ) || [] )[1] || ''\n\t}\n\n\texport function $mol_view_tree_prop_next( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /\\?(\\w+)$/ ) || [] )[1] || ''\n\t}\n\n\texport function $mol_view_tree_prop_value( prop : $mol_tree ) {\n\t\tif( prop.sub.length != 1 ) throw prop.error( `Wrong sub count (${ prop.sub.length })` )\n\t\treturn prop.sub[0]\n\t}\n\n\texport function $mol_view_tree_value_type( val : $mol_tree ) {\n\t\t\n\t\tswitch( val.type ) {\n\t\t\tcase 'true' : return 'bool'\n\t\t\tcase 'false' : return 'bool'\n\t\t\tcase 'null' : return 'null'\n\t\t\tcase '*' : return 'dict'\n\t\t\tcase '@' : return 'locale'\n\t\t\tcase '' : return 'string'\n\t\t\tcase '<=' : return 'get'\n\t\t\tcase '<=>' : return 'bind'\n\t\t\tcase '=>' : return 'put'\n\t\t}\n\n\t\tswitch( val.type[0] ) {\n\t\t\tcase '/' : return 'list'\n\t\t\tcase '$' : return 'object'\n\t\t}\n\n\t\tif( Number( val.type ).toString() == val.type ) return 'number'\n\n\t\tthrow val.error( 'Wrong value' )\n\t}\n\n\texport function $mol_view_tree_compile( tree : $mol_tree ) {\n\t\t\n\t\tvar content = ''\n\t\tvar locales : { [ key : string ] : string } = {}\n\t\t\n\t\tfor( let def of $mol_view_tree_classes( tree ).sub ) {\n\t\t\tif( !/^\\$\\w+$/.test( def.type ) ) throw def.error( 'Wrong component name' )\n\t\t\t\n\t\t\tvar parent = def.sub[0]\n\t\t\t\n\t\t\tvar propDefs : { [ key : string ] : $mol_tree } = {}\n\t\t\tvar members : { [ key : string ] : string } = {}\n\t\t\t\n\t\t\tfor( let param of $mol_view_tree_class_props( def ).sub ) { try {\n\t\t\t\tvar needSet = false\n\t\t\t\tvar needReturn = true\n\t\t\t\tvar needCache = false\n\t\t\t\tvar keys : string[] = []\n\t\n\t\t\t\tif( param.type === '<=>' ) {\n\t\t\t\t\tparam = param.sub[0]\n\t\t\t\t}\n\t\n\t\t\t\tif( param.type === '<=' ) {\n\t\t\t\t\tparam = param.sub[0]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar propName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( param.type )!\n\t\t\t\t\n\t\t\t\tif( propName[3] ) {\n\t\t\t\t\tneedSet = true\n\t\t\t\t\tneedCache = true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst getValue = ( value : $mol_tree )=> { try {\n\t\t\t\t\tswitch( true ) {\n\t\t\t\t\t\tcase( value.type === '' ) :\n\t\t\t\t\t\t\treturn JSON.stringify( value.value )\n\t\t\t\t\t\tcase( value.type === '@' ) :\n\t\t\t\t\t\t\tconst key = `${ def.type }_${ param.type.replace( /[?!].*/ , '' ) }`\n\t\t\t\t\t\t\tlocales[ key ] = value.value\n\t\t\t\t\t\t\treturn `this.$.$mol_locale.text( ${ JSON.stringify( key ) } )`\n\t\t\t\t\t\tcase( value.type === '-' ) :\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\tcase( value.type[0] === '/' ) :\n\t\t\t\t\t\t\tconst item_type = value.type.substring( 1 )\n\t\t\t\t\t\t\tvar items : string[] = []\n\t\t\t\t\t\t\tvalue.sub.forEach( item => {\n\t\t\t\t\t\t\t\tif( item.type === '-' ) return\n\t\t\t\t\t\t\t\tif( item.type === '^' ) {\n\t\t\t\t\t\t\t\t\titems.push( `...super.${ param.type }()` )\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar val = getValue( item )\n\t\t\t\t\t\t\t\tif( val ) items.push( val )\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\treturn `[].concat( ${ items.join(' , ') } )` + ( item_type ? ` as readonly ( ${ item_type } )[]` : '' )\n\t\t\t\t\t\tcase( value.type[0] === '$' ) :\n\t\t\t\t\t\t\tneedCache = true\n\t\t\t\t\t\t\tvar overs : string[] = []\n\t\t\t\t\t\t\tvalue.sub.forEach( over => {\n\t\t\t\t\t\t\t\tif( /^[-\\/]?$/.test( over.type ) ) return ''\n\t\t\t\t\t\t\t\tvar overName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.type )!\n\t\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( over.sub[0].type === '=>' ) {\n\t\t\t\t\t\t\t\t\tif( over.sub[0].sub.length === 1 ) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconst [ , own_name , own_key , own_next ] = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.sub[0].sub[0].type )!\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlet own_args : string[] = []\n\t\t\t\t\t\t\t\t\t\tif( own_key ) own_args.push( ` ${own_key} : any ` )\n\t\t\t\t\t\t\t\t\t\tif( own_next ) own_args.push( ` ${own_next}? : any ` )\n\n\t\t\t\t\t\t\t\t\t\tlet [ , their_name , ... their_args ] = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.type )!\n\t\t\t\t\t\t\t\t\t\ttheir_args = their_args.filter( Boolean )\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tmembers[ own_name ] = `\\t${ own_name }(${ own_args.join(',') }) {\\n\\t\\treturn this.${ param.type }().${ their_name }( ${ their_args.join(' , ') } )\\n\\t}\\n\\n`\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar v = getValue( over.sub[0] )\n\t\t\t\t\t\t\t\tlet args : string[] = []\n\t\t\t\t\t\t\t\tif( overName[2] ) args.push( ` ${ overName[2] } : any ` )\n\t\t\t\t\t\t\t\tif( overName[3] ) args.push( ` ${ overName[3] }? : any ` )\n\t\t\t\t\t\t\t\tovers.push( '\\t\\t\\tobj.' + overName[1] + ' = (' + args.join( ',' ) + ') => ' + v + '\\n' )\n\t\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tconst object_args = value.select( '/' , '' ).sub.map( arg => getValue( arg ) ).join( ' , ' ) as string\n\t\t\t\t\t\t\treturn '(( obj )=>{\\n' + overs.join( '' ) + '\\t\\t\\treturn obj\\n\\t\\t})( new this.$.' + value.type + '( ' + object_args + ' ) )'\n\t\t\t\t\t\tcase( value.type === '*' ) :\n\t\t\t\t\t\t\t//needReturn = false\n\t\t\t\t\t\t\tvar opts : string[] = []\n\t\t\t\t\t\t\tvalue.sub.forEach( opt => {\n\t\t\t\t\t\t\t\tif( opt.type === '-' ) return ''\n\t\t\t\t\t\t\t\tif( opt.type === '^' ) {\n\t\t\t\t\t\t\t\t\topts.push( `\\t\\t\\t...super.${ param.type }() ,\\n` )\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar key = /(.*?)(?:\\?(\\w+))?$/.exec( opt.type )!\n\t\t\t\t\t\t\t\tkeys.push( key[1] )\n\t\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\t\tvar v = getValue( opt.sub[0] )\n\t\t\t\t\t\t\t\tvar arg = key[2] ? ` ( ${ key[2] }? : any )=> ` : ''\n\t\t\t\t\t\t\t\topts.push( '\\t\\t\\t\"' + key[1] + '\" : ' + arg + ' ' + v + ' ,\\n' )\n\t\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\treturn '({\\n' + opts.join( '' ) + '\\t\\t})'\n\t\t\t\t\t\tcase( value.type === '<=>' ) :\n\t\t\t\t\t\t\tneedSet = true\n\t\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))$/.exec( value.sub[0].type )!\n\t\t\t\t\t\t\t\treturn 'this.' + type[1] + '(' + ( type[2] ? type[2] + ' ,' : '' ) + ' ' + type[3] + ' )'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase( value.type === '<=' ) :\n\t\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( value.sub[0].type )!\n\t\t\t\t\t\t\t\treturn 'this.' + type[1] + '(' + (  type[2] ? type[2] : '' ) + ')'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tswitch( value.type ) {\n\t\t\t\t\t\tcase 'true' :\n\t\t\t\t\t\tcase 'false' :\n\t\t\t\t\t\t\treturn value.type\n\t\t\t\t\t\tcase 'null' :\n\t\t\t\t\t\t\treturn 'null as any'\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( Number( value.type ).toString() == value.type ) return value.type\n\t\t\t\t\t\n\t\t\t\t\tthrow value.error( 'Wrong value' )\n\t\t\t\t} catch ( err ) {\n\t\t\t\t\terr.message += `\\n${value.baseUri}:${value.row}:${value.col}\\n${ value }`\n\t\t\t\t\tthrow err\n\t\t\t\t} }\n\t\t\t\t\n\t\t\t\tif( param.sub.length > 1 ) throw new Error( 'Too more sub' )\n\t\t\t\t\n\t\t\t\tparam.sub.forEach( child => {\n\t\t\t\t\tvar val = getValue( child )\n\t\t\t\t\tif( !val ) return\n\t\t\t\t\t\n\t\t\t\t\tpropDefs[ propName[1] ] = param\n\t\t\t\t\t\n\t\t\t\t\tvar args : string[] = []\n\t\t\t\t\tif( propName[2] ) args.push( ` ${ propName[2] } : any ` )\n\t\t\t\t\tif( propName[3] ) args.push( ` ${ propName[3] }? : any , force? : $${''}mol_atom_force ` )\n\t\t\t\t\tif( needSet && param.sub[0].type !== '<=>' ) val = ( needReturn ? `( ${ propName[3] } !== void 0 ) ? ${ propName[3] } : ` : `if( ${ propName[3] } !== void 0 ) return ${ propName[3] }\\n\\t\\t` ) + val\n\t\t\t\t\tif( needReturn ) val = 'return ' + val\n\t\t\t\t\tvar decl = '\\t' + propName[1] +'(' + args.join(',') + ') {\\n\\t\\t' + val + '\\n\\t}\\n\\n'\n\t\t\t\t\tif( needCache ) {\n\t\t\t\t\t\tif( propName[2] ) decl = '\\t@ $' + 'mol_mem_key\\n' + decl\n\t\t\t\t\t\telse decl = '\\t@ $' + 'mol_mem\\n' + decl\n\t\t\t\t\t}\n\t\t\t\t\tdecl = '\\t/**\\n\\t * ```\\n\\t * ' + param.toString().trim().split( '\\n' ).join( '\\n\\t * ' ) + '\\n\\t * ```\\n\\t **/\\n' + decl\n\t\t\t\t\t\n\t\t\t\t\tmembers[ propName[1] ] = decl\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t} catch ( err ) {\n\t\t\t\terr.message += `\\n${param.baseUri}:${param.row}:${param.col}\\n${ param }`\n\t\t\t\tthrow err\n\t\t\t} }\n\t\t\t\n\t\t\tvar body = Object.keys( members ).map( function( name ) {\n\t\t\t\treturn members[ name ] || '\\t' + name +'() { return null as any }\\n\\t}\\n'\n\t\t\t}).join( '' )\n\t\t\t\n\t\t\tvar classes = 'namespace $ { export class ' + def.type + ' extends ' + parent.type + ' {\\n\\n' + body + '} }\\n'\n\t\t\t\n\t\t\tcontent += classes + '\\n'\n\t\t}\n\t\t\n\t\treturn { script : content , locales : locales }\n\t}\n\n}\n","namespace $ {\n\t\n\texport class $mol_graph< Node , Edge > {\n\t\t\n\t\tnodes : { [ id : string ] : Node | undefined } = {}\n\t\t\n\t\tedgesOut : { [ from : string ] : { [ to : string ] : Edge } } = {}\n\t\tedgesIn : { [ to : string ] : { [ from : string ] : Edge } } = {}\n\t\t\n\t\tnodeEnsure( id : string ) {\n\t\t\tif( this.nodes.hasOwnProperty( id ) ) return\n\t\t\tthis.nodes[ id ] = undefined\n\t\t}\n\t\t\n\t\tlinkOut( from : string , to : string , edge : Edge ) {\n\t\t\tif( !this.edgesOut[ from ] ) {\n\t\t\t\tthis.edgesOut[ from ] = {}\n\t\t\t\tthis.nodeEnsure( from )\n\t\t\t}\n\t\t\tthis.edgesOut[ from ][ to ] = edge\n\t\t\tthis.nodeEnsure( to )\n\t\t}\n\t\t\n\t\tlinkIn( to : string , from : string , edge : Edge ) {\n\t\t\tif( !this.edgesIn[ to ] ) {\n\t\t\t\tthis.edgesIn[ to ] = {}\n\t\t\t\tthis.nodeEnsure( to )\n\t\t\t}\n\t\t\tthis.edgesIn[ to ][ from ] = edge\n\t\t\tthis.nodeEnsure( from )\n\t\t}\n\t\t\n\t\tedgeOut( from : string , to : string ) {\n\t\t\treturn this.edgesOut[ from ] && this.edgesOut[ from ][ to ]\n\t\t}\n\t\t\n\t\tedgeIn( to : string , from : string ) {\n\t\t\treturn this.edgesIn[ to ] && this.edgesIn[ to ][ from ]\n\t\t}\n\t\t\n\t\tlink( from : string , to : string , edge : Edge ) {\n\t\t\tthis.linkOut( from , to , edge )\n\t\t\tthis.linkIn( to , from , edge )\n\t\t}\n\t\t\n\t\tunlink( from : string , to : string ) {\n\t\t\tdelete this.edgesIn[ to ][ from ]\n\t\t\tdelete this.edgesOut[ from ][ to ]\n\t\t}\n\t\t\n\t\tcut_cycles( get_weight : ( edge : Edge )=> number ) {\n\t\t\t\n\t\t\tconst checked = [] as string[]\n\t\t\t\n\t\t\tfor( const start in this.nodes ) {\n\t\t\t\t\n\t\t\t\tconst path = [] as string[]\n\t\t\t\t\n\t\t\t\tconst visit = ( from : string ) : number => {\n\n\t\t\t\t\tif( checked.includes( from ) ) return Number.POSITIVE_INFINITY\n\n\t\t\t\t\tconst index = path.lastIndexOf( from )\n\t\t\t\t\tif( index > -1 ) {\n\n\t\t\t\t\t\tconst cycle = path.slice( index )\n\n\t\t\t\t\t\treturn cycle.reduce(\n\t\t\t\t\t\t\t( weight , id , index )=> Math.min(\n\t\t\t\t\t\t\t\tweight ,\n\t\t\t\t\t\t\t\tget_weight( this.edgesOut[ id ][ cycle[ ( index + 1 ) % cycle.length ] ] ) ,\n\t\t\t\t\t\t\t) ,\n\t\t\t\t\t\t\tNumber.POSITIVE_INFINITY ,\n\t\t\t\t\t\t)\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpath.push( from )\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst deps = this.edgesOut[ from ]\n\t\t\t\t\t\tfor( const to in deps ) {\n\n\t\t\t\t\t\t\tif( to === from ) {\n\t\t\t\t\t\t\t\tthis.unlink( from , to )\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst weight_out = get_weight( deps[ to ] )\n\t\t\t\t\t\t\tconst min = visit( to )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( weight_out > min ) return min\n\t\t\t\t\t\t\tif( weight_out === min ) this.unlink( from , to )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tpath.pop()\n\t\t\t\t\t}\n\n\t\t\t\t\tchecked.push( from )\n\n\t\t\t\t\treturn Number.POSITIVE_INFINITY\n\t\t\t\t}\n\n\t\t\t\tvisit( start )\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tget sorted() {\n\n\t\t\tconst sorted : string[] = []\n\t\t\t\n\t\t\tconst visit = ( id : string ) => {\n\t\t\t\t\n\t\t\t\tif( sorted.indexOf( id ) !== -1 ) return\n\n\t\t\t\tfor( const dep in this.edgesOut[ id ] ) visit( dep )\n\n\t\t\t\tif( sorted.indexOf( id ) !== -1 ) return\n\n\t\t\t\tsorted.push( id )\n\n\t\t\t}\n\t\t\t\n\t\t\tObject.keys( this.nodes ).forEach( id => visit( id ) )\n\t\t\t\n\t\t\treturn sorted\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_build_start( paths : string[] ) {\n\t\tvar build = $mol_build.relative( '.' )\n\t\tif( paths.length > 0 ) {\n\t\t\ttry {\n\t\t\t\tprocess.argv.slice( 2 ).forEach(\n\t\t\t\t\t( path : string )=> {\n\t\t\t\t\t\tpath = build.root().resolve( path ).path()\n\t\t\t\t\t\treturn build.bundleAll( { path } )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tprocess.exit(0)\n\t\t\t} catch {\n\t\t\t\tprocess.exit(1)\n\t\t\t}\n\t\t} else {\n\t\t\tbuild.server().express()\n\t\t}\n\t}\n\t\n\tsetTimeout( ()=> $mol_build_start( process.argv.slice( 2 ) ) )\n\t\n\texport class $mol_build extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic root( path : string ) {\n\t\t\treturn this.make({\n\t\t\t\troot : $mol_const( $mol_file.absolute( path ) ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\tstatic relative( path : string ) {\n\t\t\treturn $mol_build.root( $mol_file.relative( path ).path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tserver() {\n\t\t\treturn $mol_build_server.make({\n\t\t\t\tbuild : $mol_const( this ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\troot() {\n\t\t\treturn $mol_file.relative( '.' )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmods( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tconst mods : $mol_file[] = []\n\t\t\t\n\t\t\t$mol_file.absolute( path ).sub()\n\t\t\t.forEach(\n\t\t\t\tchild => {\n\t\t\t\t\tconst name = child.name()\n\t\t\t\t\tif( !/^\\w/i.test( name ) ) return false\n\t\t\t\t\tif( exclude && RegExp( '[.=](' + exclude.join( '|' ) + ')[.]' , 'i' ).test( name ) ) return false\n\t\t\t\t\t\n\t\t\t\t\tif( /(meta\\.tree)$/.test( name ) ) {\n\n\t\t\t\t\t\tconst tree = $mol_tree.fromString( child.content().toString() , child.path() )\n\n\t\t\t\t\t\tlet content = ''\n\t\t\t\t\t\tfor( const step of tree.select( 'build' , '' ).sub ) {\n\n\t\t\t\t\t\t\tconst res = $mol_exec( child.parent().path() , step.value ).stdout.toString().trim()\n\t\t\t\t\t\t\tif( step.type ) content += `let ${ step.type } = ${ JSON.stringify( res ) }`\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( content ) {\n\t\t\t\t\t\t\tconst script = child.parent().resolve( `-meta.tree/${ child.name() }.ts` )\n\t\t\t\t\t\t\tscript.content( content )\n\t\t\t\t\t\t\tmods.push( script )\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if( /(view\\.tree)$/.test( name ) ) {\n\n\t\t\t\t\t\tconst script = child.parent().resolve( `-view.tree/${ child.name() }.ts` )\n\t\t\t\t\t\tconst locale = child.parent().resolve( `-view.tree/${ child.name() }.locale=en.json` )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst tree = $mol_tree.fromString( child.content().toString() , child.path() )\n\t\t\t\t\t\tconst res = $mol_view_tree_compile( tree )\n\t\t\t\t\t\tscript.content( res.script )\n\t\t\t\t\t\tlocale.content( JSON.stringify( res.locales , null , '\\t' ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tmods.push( script , locale )\n\t\t\t\t\t}\n\n\t\t\t\t\tmods.push( child )\n\t\t\t\t\t\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t)\n\t\t\t// .sort( ( a , b )=> a.path().length - b.path().length )\n\t\t\t\n\t\t\treturn mods\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodsRecursive( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn [ mod ]\n\t\t\t\tcase 'dir' :\n\t\t\t\t\tvar mods = [ mod ]\n\t\t\t\t\tfor( var m of this.mods( { path , exclude } ) ) {\n\t\t\t\t\t\tif( m.type() !== 'dir' ) continue\n\t\t\t\t\t\tfor( var dep of this.modsRecursive( { path : m.path() , exclude } ) ) {\n\t\t\t\t\t\t\tif( mods.indexOf( dep ) !== -1 ) continue\n\t\t\t\t\t\t\tmods.push( dep )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn mods\n\t\t\t\tcase null :\n\t\t\t\t\tthrow new Error( `Module not found: \"${mod.relate()}\"` )\n\t\t\t}\n\t\t\tthrow new Error( `Unsopported type \"${mod.type()}\" of \"${mod.relate()}\"` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsources( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn [ mod ]\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.mods( { path , exclude } ).filter( mod => mod.type() === 'file' )\n\t\t\t\tdefault:\n\t\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesSorted( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst graph = new $mol_graph< void , { priority : number } >()\n\t\t\tconst sources = this.sources( { path , exclude } )\n\t\t\tfor( let src of sources ) {\n\t\t\t\tgraph.nodeEnsure( src.relate( this.root() ) )\n\t\t\t}\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\t\n\t\t\t\t\tvar names : string[]\n\t\t\t\t\tif( p[ 0 ] === '/' ) names = p.substring( 1 ).split( '/' )\n\t\t\t\t\telse if( p[ 0 ] === '.' ) names = mod.resolve( p ).relate( this.root() ).split( '/' )\n\t\t\t\t\telse names = [ 'node_modules' , ... p.split( '/' ) ]\n\t\t\t\t\t\n\t\t\t\t\tlet files = [ this.root() ]\n\t\t\t\t\tfor( let name of names ) {\n\t\t\t\t\t\tlet nextFiles : $mol_file[] = []\n\t\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\t\tlet validName = new RegExp( `^(${file.name()})?${name}(?![a-z0-9])` , 'i' )\n\t\t\t\t\t\t\tfor( let child of this.mods( { path : file.path() , exclude } ) ) {\n\t\t\t\t\t\t\t\tif( !child.name().match( validName ) ) continue\n\t\t\t\t\t\t\t\tnextFiles.push( child )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( nextFiles.length === 0 ) break\n\t\t\t\t\t\tfiles = nextFiles\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\tif( file === this.root() ) continue\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.link(\n\t\t\t\t\t\t\t\tsrc.relate( this.root() ) ,\n\t\t\t\t\t\t\t\tfile.relate( this.root() ) ,\n\t\t\t\t\t\t\t\t{ priority : deps[ p ] }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\tlet next = graph.sorted.map( name => this.root().resolve( name ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesAll( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst sortedPaths = this.graph( { path , exclude } ).sorted\n\t\t\t\n\t\t\tlet sources : $mol_file[] = []\n\t\t\tsortedPaths.forEach( path => {\n\t\t\t\tthis.sourcesSorted( { path : this.root().resolve( path ).path() , exclude } ).forEach( src => {\n\t\t\t\t\tif( sources.indexOf( src ) === -1 ) sources.push( src )\n\t\t\t\t} )\n\t\t\t} )\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttsOptions() {\n\t\t\tconst rawOptions = JSON.parse( this.root().resolve( 'tsconfig.json' ).content() ).compilerOptions\n\t\t\tconst res = $node['typescript'].convertCompilerOptionsFromJson( rawOptions , \".\" , 'tsconfig.json' )\n\t\t\tif( res.errors.length ) throw res.errors\n\t\t\treturn res.options\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\ttsSource( { path , target } : { path : string , target : number } ) {\n\t\t\tconst content = $mol_file.absolute( path ).content().toString()\n\t\t\treturn $node['typescript'].createSourceFile( path , content , target )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsPaths( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\treturn this.sourcesAll( { path , exclude } ).filter( src => /tsx?$/.test( src.ext() ) ).map( src => src.path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\ttsCompile( { path , exclude } : { path : string , exclude? : string[] } ) {\n\n\t\t\tconst paths = this.tsPaths({ path , exclude })\n\t\t\tif( !paths.length ) return null\n\n\t\t\tvar host = $node.typescript.createWatchCompilerHost(\n\n\t\t\t\tpaths ,\n\t\t\t\t\n\t\t\t\tthis.tsOptions(),\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t... $node.typescript.sys ,\n\t\t\t\t\tsetTimeout : ( cb : any )=> cb(),\n\t\t\t\t\twriteFile : ( path : string , content : string )=> {\n\t\t\t\t\t\t$mol_file.relative( path ).content( content , $mol_atom_force_cache )\n\t\t\t\t\t} ,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t$node.typescript.createEmitAndSemanticDiagnosticsBuilderProgram,\n\n\t\t\t\t( diagnostic : any )=> {\n\n\t\t\t\t\tif( diagnostic.file ) {\n\n\t\t\t\t\t\tconst file = $mol_file.absolute( diagnostic.file.fileName.replace( /\\.tsx?$/ , '.js' ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst error = new Error( $node.typescript.formatDiagnostic( diagnostic , {\n\t\t\t\t\t\t\tgetCurrentDirectory : ()=> this.root().path() ,\n\t\t\t\t\t\t\tgetCanonicalFileName : ( path : string )=> path.toLowerCase() ,\n\t\t\t\t\t\t\tgetNewLine : ()=> '\\n' ,\n\t\t\t\t\t\t}) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tfile.content( error as any , $mol_atom_force_cache )\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.error( diagnostic.messageText )\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} ,\n\n\t\t\t\t() => {} ,\n\t\t\t\t\n\t\t\t)\n\n\t\t\tconst builder = $node.typescript.createWatchProgram( host )\n\n\t\t\treturn $mol_object.make({ destructor : ()=> { builder.updateRootFileNames([]) } })\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesJS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t.filter( src => /(js|tsx?)$/.test( src.ext() ) )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => {\n\t\t\t\t\tif( !/tsx?$/.test( src.ext() ) ) return src\n\t\t\t\t\t\n\t\t\t\t\treturn src.parent().resolve( src.name().replace( /\\.tsx?$/ , '.js' ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesDTS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\t\n\t\t\tlet sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tsources = sources.filter( src => /(tsx?)$/.test( src.ext() ) )\n\t\t\t\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => src.parent().resolve( src.name().replace( /(\\.d)?\\.tsx?$/ , '.d.ts' ) )\n\t\t\t)\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesCSS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\treturn this.sourcesAll( { path , exclude } ).filter( src => /(css)$/.test( src.ext() ) )\n\t\t}\n\t\t\n\t\tstatic dependors : { [ index : string ] : ( source : $mol_file )=> { [ index : string ] : number } } = {}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsrcDeps( path : string ) {\n\t\t\tconst src = $mol_file.absolute( path )\n\t\t\t\n\t\t\tlet ext = src.ext()\n\t\t\tif( !ext ) return {}\n\t\t\t\n\t\t\tlet dependencies \n\t\t\twhile( !dependencies ) {\n\t\t\t\tdependencies = $mol_build.dependors[ ext ]\n\t\t\t\tif( dependencies ) break\n\t\t\t\tvar extShort = ext.replace( /^[^.]*\\./ , '' )\n\t\t\t\tif( ext === extShort ) break\n\t\t\t\text = extShort\n\t\t\t}\n\t\t\t\n\t\t\treturn dependencies ? dependencies( src ) : {}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodDeps( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst depends : { [ index : string ] : number } = { '..' : Number.MIN_SAFE_INTEGER }\n\t\t\tfor( var src of this.sources( { path , exclude } ) ) {\n\t\t\t\t$mol_build_depsMerge( depends , this.srcDeps( src.path() ) )\n\t\t\t}\n\t\t\treturn depends\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tdependencies( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn this.srcDeps( path )\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.modDeps( { path , exclude } )\n\t\t\t\tdefault :\n\t\t\t\t\treturn {}\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodEnsure( path : string ) {\n\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tif( mod === this.root() ) return false\n\n\t\t\tvar parent = mod.parent()\n\t\t\tthis.modEnsure( parent.path() )\n\t\t\t\n\t\t\tvar mapping = this.modMeta( parent.path() )\n\t\t\t\n\t\t\tif( mod.exists() ) {\n\t\t\t\tif( mod.resolve( '.git' ).exists() ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//$mol_exec( pack.path() , 'git' , '--no-pager' , 'fetch' )\n\t\t\t\t\t\tprocess.stdout.write( $mol_exec( mod.path() , 'git' , '--no-pager' , 'log' , '--oneline' , 'HEAD..origin/master' ).stdout )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tconsole.error( error.message )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tfor( let repo of mapping.select( 'pack' , mod.name() , 'git' ).sub ) {\n\t\t\t\tconsole.log( '> git clone' , repo.value , mod.path() )\n\t\t\t\t$mol_exec( this.root().path() , 'git' , 'clone' , repo.value , mod.path() )\n\t\t\t\tmod.stat( undefined , $mol_atom_force_cache )\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t\n\t\t\tif( parent === this.root() ) {\n\t\t\t\tthrow new Error( `Root package \"${ mod.relate( this.root() ) }\" not found` )\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodMeta( path : string ) {\n\n\t\t\tconst decls = [] as $mol_tree[]\n\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tfor( const file of pack.sub() ) {\n\t\t\t\tif( !/\\.meta\\.tree$/.test( file.name() ) ) continue\n\t\t\t\tdecls.push( ... $mol_tree.fromString( file.content().toString() , file.path() ).sub )\n\t\t\t}\n\t\t\t\n\t\t\treturn new $mol_tree({ sub : decls })\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tgraph( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tlet graph = new $mol_graph< null , { priority : number } >()\n\t\t\tlet added : { [ path : string ] : boolean } = {}\n\t\t\t\n\t\t\tvar addMod = ( mod : $mol_file )=> {\n\t\t\t\tif( added[ mod.path() ] ) return\n\t\t\t\tadded[ mod.path() ] = true\n\t\t\t\t\n\t\t\t\tgraph.nodes[ mod.relate( this.root() ) ] = null\n\t\t\t\t\n\t\t\t\tconst checkDep = ( p : string )=> {\n\t\t\t\t\t\n\t\t\t\t\tvar dep = ( p[ 0 ] === '/' )\n\t\t\t\t\t? this.root().resolve( p )\n\t\t\t\t\t: ( p[ 0 ] === '.' )\n\t\t\t\t\t? mod.resolve( p )\n\t\t\t\t\t: this.root().resolve( 'node_modules' ).resolve( './' + p )\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.modEnsure( dep.path() )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tthrow new Error( `${ error.message }\\nDependency \"${ dep.relate( this.root() ) }\" from \"${ mod.relate( this.root() ) }\" ` )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twhile( !dep.exists() ) dep = dep.parent()\n\t\t\t\t\t\n\t\t\t\t\tif( dep.type() === 'dir' ) {\n\t\t\t\t\t\tlet index = dep.resolve( 'index.js' )\n\t\t\t\t\t\tif( index.exists() ) dep = index\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//if( dep.type() === 'file' ) dep = dep.parent()\n\t\t\t\t\tif( mod === dep ) return\n\t\t\t\t\tif( dep === this.root() ) return\n\t\t\t\t\t\n\t\t\t\t\tconst from = mod.relate( this.root() )\n\t\t\t\t\tconst to = dep.relate( this.root() )\n\t\t\t\t\tconst edge = graph.edgesOut[ from ] && graph.edgesOut[ from ][ to ]\n\t\t\t\t\tif( !edge || ( deps[ p ] > edge.priority ) ) {\n\t\t\t\t\t\tgraph.link( from , to , { priority : deps[ p ] } )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\taddMod( dep )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet deps = this.dependencies( { path : mod.path() , exclude } )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\tcheckDep( p )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.modEnsure( path )\n\n\t\t\taddMod( $mol_file.absolute( path ) )\n\t\t\t\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\n\t\t\treturn graph\n\t\t}\n\n\t\tbundleAll( { path } : { path : string } ) {\n\n\t\t\tconst once = ( action : ()=> void )=> {\n\t\t\t\tconst task = new $mol_atom( '$mol_build_start' , action )\n\t\t\t\ttask.value()\n\t\t\t\ttask.destructor()\n\t\t\t\t$mol_atom.sync()\n\t\t\t}\n\n\t\t\tonce( ()=> {\n\t\t\t\tthis.bundle({ path , bundle : 'web.deps.json' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.css' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.js' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.test.js' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.test.html' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.d.ts' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.view.tree' })\n\t\t\t\tthis.bundle({ path , bundle : 'web.locale=en.json' })\n\t\t\t} )\n\n\t\t\tonce( ()=> {\n\t\t\t\tthis.bundle({ path , bundle : 'node.deps.json' })\n\t\t\t\tthis.bundle({ path , bundle : 'node.js' })\n\t\t\t\tthis.bundle({ path , bundle : 'node.test.js' })\n\t\t\t\tthis.bundle({ path , bundle : 'node.d.ts' })\n\t\t\t\tthis.bundle({ path , bundle : 'node.view.tree' })\n\t\t\t\tthis.bundle({ path , bundle : 'node.locale=en.json' })\n\t\t\t} )\n\n\t\t\tthis.bundle({ path , bundle : 'package.json' })\n\n\t\t\tthis.bundleFiles( { path , exclude : [ 'node' ] } )\n\t\t\tthis.bundleCordova( { path , exclude : [ 'node' ] } )\n\n\t\t}\n\t\t\n\t\tbundle( { path , bundle = '' } : { path : string , bundle? : string } ) {\n\t\t\t\n\t\t\tbundle = bundle && bundle.replace( /\\.map$/ , '' )\n\t\t\t\n\t\t\tvar envsDef = [ 'web' , 'node' ]\n\t\t\tvar envs = bundle ? [] as string[] : envsDef.slice()\n\t\t\tvar stages = [ 'test' , 'dev' ]\n\t\t\tvar moduleTargets = ['', 'esm']\n\t\t\tif( bundle ) {\n\t\t\t\t\n\t\t\t\tvar [ bundle , tags , type , locale ] = /^(.*?)(?:\\.(test\\.js|test\\.html|js|css|deps\\.json|locale=(\\w+)\\.json))?$/.exec(\n\t\t\t\t\tbundle\n\t\t\t\t)!\n\t\t\t\t\n\t\t\t\ttags.split( '.' ).forEach(\n\t\t\t\t\ttag => {\n\t\t\t\t\t\tif( envsDef.indexOf( tag ) !== -1 ) envs = [ tag ]\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tvar res : $mol_file[] = []\n\t\t\t\n\t\t\tenvs.forEach(\n\t\t\t\tenv => {\n\t\t\t\t\tvar exclude = envsDef.filter( e => e !== env ).concat( stages )\n\t\t\t\t\t\n\t\t\t\t\tif( !type || type === 'deps.json' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDepsJSON( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'css' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleCSS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'js' ) {\n\t\t\t\t\t\tmoduleTargets.forEach(\n\t\t\t\t\t\t\tmoduleTarget => {\n\t\t\t\t\t\t\t\tres = res.concat( this.bundleJS( { path , exclude , bundle : env, moduleTarget } ) )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'test.js' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleTestJS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'test.html' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleTestHtml({ path }) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'd.ts' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDTS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'view.tree' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleViewTree( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || /^locale=(\\w+).json$/.test( type ) ) {\n\t\t\t\t\t\tres = res.concat(\n\t\t\t\t\t\t\tthis.bundleLocale(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpath ,\n\t\t\t\t\t\t\t\t\texclude ,\n\t\t\t\t\t\t\t\t\tbundle : env\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tif( !bundle || bundle === 'package.json' ) {\n\t\t\t\tres = res.concat( this.bundlePackageJSON( { path , exclude : [ 'web' ] } ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn res.map( r => r.valueOf() )\n\t\t}\n\t\t\n\t\tlogBundle( target : $mol_file ) {\n\t\t\tvar time = new Date().toLocaleTimeString()\n\t\t\tvar path = target.relate( this.root() )\n\t\t\tconsole.log( `${time} Built ${path}` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleJS( { path , exclude , bundle , moduleTarget } : { path : string , exclude? : string[] , bundle : string, moduleTarget? : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\tvar mt = moduleTarget ? `.${moduleTarget}` : ''\n\t\t\tvar target = pack.resolve( `-/${bundle}${mt}.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}${mt}.js.map` )\n\t\t\t\n\t\t\tvar sources = this.sourcesJS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tthis.tsCompile({ path , exclude })\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() , '\\n;\\n' )\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( '' , 'require'+'( \"source-map-support\" ).install(); var exports = void 0;\\n' )\n\t\t\t\tconcater.add( '' , \"process.on( 'unhandledRejection' , up => { throw up } )\" )\n\t\t\t} else {\n\t\t\t\tconcater.add( '' , 'function require'+'( path ){ return $node[ path ] }' )\n\t\t\t}\n\n\t\t\tconst errors = [] as Error[]\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\t( src )=> {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( this.root() ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar content = ( src.content() || '' ).toString().replace( /^\\/\\/#\\ssourceMappingURL=/mg , '//' )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tcontent = ''\n\t\t\t\t\t\terrors.push( error )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar srcMap = src.parent().resolve( src.name() + '.map' ).content()\n\t\t\t\t\tif( srcMap ) {\n\t\t\t\t\t\tvar map = JSON.parse( srcMap )\n\t\t\t\t\t\tmap.sourceRoot = src.parent().relate( target.parent() )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst isCommonJs = /module\\.exports/.test( content )\n\t\t\t\t\t\n\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\tconcater.add( '-' , `\\nvar $node = $node || {}\\nvoid function( module ) { var exports = module.${''}exports = this; function require( id ) { return $node[ id.replace( /^.\\\\// , \"' + src.parent().relate( this.root().resolve( 'node_modules' ) ) + '/\" ) + \".js\" ] }; \\n` )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content , map && JSON.stringify( map ) )\n\t\t\t\t\t\n\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\tconst idFull = src.relate( this.root().resolve( 'node_modules' ) )\n\t\t\t\t\t\tconst idShort = idFull.replace( /\\/index\\.js$/ , '' )\n\t\t\t\t\t\tconcater.add( '-' , `\\n$${''}node[ \"${ idShort }\" ] = $${''}node[ \"${ idFull }\" ] = module.${''}exports }.call( {} , {} )\\n` )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tif( moduleTarget === 'esm' ) {\n\t\t\t\tconcater.add( '-', 'export default $')\n\t\t\t}\n\t\t\ttarget.content( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() ) )\n\t\t\ttargetMap.content( concater.sourceMap )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\n\t\t\tif( errors.length ) $mol_fail_hidden( new Error( errors.map( error => error.message ).join( '\\n' ) ) )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleTestJS( { path , exclude , bundle } : { path : string , exclude : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar root = this.root()\n\t\t\tvar target = pack.resolve( `-/${bundle}.test.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.test.js.map` )\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() , '\\n;\\n' )\n\t\t\t\n\t\t\tvar exclude_ext = exclude.filter( ex => ex !== 'test' && ex !== 'dev' )\n\t\t\tvar sources = this.sourcesJS( { path , exclude : exclude_ext } )\n\t\t\tvar sourcesNoTest = this.sourcesJS( { path , exclude } )\n\t\t\tvar sourcesTest = sources.filter( src => sourcesNoTest.indexOf( src ) === -1 )\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( '' , 'require'+'( \"source-map-support\" ).install()\\n' )\n\t\t\t\tconcater.add( '' , \"process.on( 'unhandledRejection' , up => { throw up } )\" )\n\t\t\t\tsources = [ ... sourcesNoTest , ... sourcesTest ]\n\t\t\t} else {\n\t\t\t\tconcater.add( '' , 'function require'+'( path ){ return $node[ path ] }' )\n\t\t\t\tsources = sourcesTest\n\t\t\t}\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tthis.tsCompile({ path , exclude : exclude_ext })\n\t\t\t\n\t\t\tconst errors = [] as Error[]\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tfunction( src ) {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( root ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar content = ( src.content() || '' ).toString().replace( /^\\/\\/#\\ssourceMappingURL=/mg , '//' )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tcontent = ''\n\t\t\t\t\t\terrors.push( error )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar srcMap = src.parent().resolve( src.name() + '.map' ).content()\n\t\t\t\t\tif( srcMap ) {\n\t\t\t\t\t\tvar map = JSON.parse( srcMap )\n\t\t\t\t\t\tmap.sourceRoot = src.parent().relate( target.parent() )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content , map && JSON.stringify( map ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.content( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() ) )\n\t\t\ttargetMap.content( concater.sourceMap )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\tif( errors.length ) $mol_fail_hidden( new Error( errors.map( error => error.message ).join( '\\n' ) ) )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleTestHtml( { path } : { path : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar source = pack.resolve( `index.html` )\n\t\t\tvar target = pack.resolve( `-/web.test.html` )\n\n\t\t\tconst content = `\n<!doctype html>\n<meta charset=\"utf-8\" />\n<body>\n<script src=\"web.js\" charset=\"utf-8\"></script>\n<script>\n\taddEventListener( 'load' , function() {\n\t\tvar script = document.createElement( 'script' )\n\t\tscript.src = 'web.test.js'\n\t\tdocument.body.appendChild( script )\n\t} )\n</script>\n`\n\t\t\t\n\t\t\ttarget.content( content )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tbundleDTS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.d.ts` )\n\t\t\t\n\t\t\tvar sources = this.sourcesDTS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() )\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tfunction( src ) {\n\t\t\t\t\tif( !src.content() ) return\n\t\t\t\t\tvar content = src.content().toString()\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.content( concater.content )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleViewTree( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.view.tree` )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll({ path , exclude })\n\t\t\t.filter( src => /view.tree$/.test( src.ext() ) )\n\t\t\t\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\ttarget.content( sources.map( src => src.content().toString() ).join( '\\n' ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tbundlePackageJSON( { path , exclude } : { path : string , exclude : string[] } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/package.json` )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll( { path , exclude : exclude.filter( ex => ex !== 'test' && ex !== 'dev' ) } )\n\t\t\t\n\t\t\tvar json : any\n\t\t\ttry {\n\t\t\t\t$mol_atom_fence( ()=> json = target.exists() && JSON.parse( target.content() ) )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.error( error )\n\t\t\t}\n\n\t\t\tif( !json ) json = {\n\t\t\t\tname : pack.relate( this.root() ).replace( /\\//g , '_' ) ,\n\t\t\t\tversion : '0.0.0' ,\n\t\t\t\tmain : 'node.js' ,\n\t\t\t\tmodule : 'node.esm.js',\n\t\t\t\tbrowser : 'web.esm.js',\n\t\t\t\ttypes : 'web.d.ts',\n\t\t\t\tdependencies : <{ [ key : string ] : string }>{}\n\t\t\t}\n\n\t\t\tjson.version = json.version.replace( /\\d+$/, ( build : string )=> parseInt( build ) + 1 )\n\t\t\tjson.dependencies = {}\n\t\t\t\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let dep in deps ) {\n\t\t\t\t\tif( !/^\\/node(?:_modules)?\\//.test( dep ) ) continue\n\t\t\t\t\tlet mod = dep.replace( /^\\/node(?:_modules)?\\// , '' ).replace( /\\/.*/g , '' )\n\t\t\t\t\tjson.dependencies[ mod ] = `*`\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\ttarget.content( JSON.stringify( json , null , '  ' ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleFiles( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst root = this.root()\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t.filter( src => /meta.tree$/.test( src.ext() ) )\n\t\t\t\n\t\t\tconst targets : $mol_file[] = []\n\n\t\t\tconst html = pack.resolve( 'index.html' )\n\t\t\tconst html_target = pack.resolve( '-/index.html' )\n\t\t\thtml_target.content( html.content() )\n\t\t\ttargets.push( html_target )\n\t\t\tthis.logBundle( html_target )\n\n\t\t\tsources.forEach( source => {\n\t\t\t\tconst tree = $mol_tree.fromString( source.content().toString() , source.path() )\n\t\t\t\t\n\t\t\t\ttree.select( 'deploy' ).sub.forEach( deploy => {\n\t\t\t\t\tconst file = root.resolve( deploy.value.replace( /^\\// , '' ) )\n\t\t\t\t\tconst target = pack.resolve( `-/${ file.relate( root ) }` )\n\t\t\t\t\ttarget.content( file.content() )\n\t\t\t\t\ttargets.push( target )\n\t\t\t\t\tthis.logBundle( target )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleCordova( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tconst cordova = pack.resolve( '-cordova' )\n\t\t\t\n\t\t\tconst config = pack.resolve( 'config.xml' )\n\t\t\tif( !config.exists() ) return []\n\t\t\t\n\t\t\tconst config_target = cordova.resolve( 'config.xml' )\n\t\t\tconfig_target.content( config.content() )\n\t\t\t\n\t\t\tconst html = pack.resolve( 'index.html' )\n\t\t\tconst html_target = cordova.resolve( 'www/index.html' )\n\t\t\thtml_target.content( html.content() )\n\t\t\t\n\t\t\tconst sources = pack.resolve( '-' ).find().filter( src => src.type() === 'file' )\n\t\t\t\n\t\t\tconst targets = [ config_target , html_target ]\n\t\t\t.concat( sources.map( source => {\n\t\t\t\tconst target = cordova.resolve( `www/${ source.relate( pack ) }` )\n\t\t\t\ttarget.content( source.content() )\n\t\t\t\treturn target\n\t\t\t} ) )\n\t\t\t\n\t\t\tthis.logBundle( cordova )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleCSS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tif( bundle === 'node' ) return []\n\t\t\t\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\tvar sources = this.sourcesCSS( { path , exclude } )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.css` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.css.map` )\n\t\t\t\n\t\t\tvar root : any = null //$node['postcss'].root({})\n\t\t\tsources.forEach(\n\t\t\t\tsrc => {\n\t\t\t\t\tvar root2 = $node['postcss'].parse( src.content() , { from : src.path() } )\n\t\t\t\t\troot = root ? root.append( root2 ) : root2\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tvar processor = $node['postcss']([\n\t\t\t\t$node[ 'postcss-custom-properties' ]({\n\t\t\t\t\tpreserve : true ,\n\t\t\t\t}) ,\n\t\t\t\t$node[ 'postcss-color-function' ]() ,\n\t\t\t])\n\t\t\tvar result = processor.process( root , { to : target.relate() , map : { inline : false } } )\n\t\t\t\n\t\t\ttarget.content( result.css )\n\t\t\ttargetMap.content( JSON.stringify( result.map , null , '\\t' ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleLocale( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst sources = this.sourcesAll( { path , exclude } ).filter( src => /(locale=(\\w+)\\.json)$/.test( src.name() ) )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tconst locales = {} as { [ key : string ] : { [ key : string ] : string } }\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tsrc => {\n\t\t\t\t\tconst [ ext , lang ] = /locale=(\\w+)\\.json$/.exec( src.name() )!\n\t\t\t\t\t\n\t\t\t\t\tif( !locales[ lang ] ) locales[ lang ] = {}\n\t\t\t\t\t\n\t\t\t\t\tconst loc = JSON.parse( src.content() )\n\t\t\t\t\tfor( let key in loc ) {\n\t\t\t\t\t\tlocales[ lang ][ key ] = loc[ key ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tconst targets = Object.keys( locales ).map( lang => {\n\t\t\t\tconst target = pack.resolve( `-/${bundle}.locale=${ lang }.json` )\n\t\t\t\t\n\t\t\t\tconst locale = locales[ lang ]\n\n\t\t\t\tif( lang !== 'en' && locales['en'] ) {\n\t\t\t\t\t\n\t\t\t\t\tfor( let key in locale ) {\n\t\t\t\t\t\tif( key in locales[ 'en' ] ) continue\n\t\t\t\t\t\tconsole.warn( `Not translated to \"en\": ${ key }` )\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst locale_sorted = {}\n\n\t\t\t\tfor( let key of Object.keys( locale ).sort() ) {\n\t\t\t\t\tlocale_sorted[ key ] = locale[ key ]\n\t\t\t\t}\n\n\t\t\t\ttarget.content( JSON.stringify( locale_sorted , null , '\\t' ) )\n\t\t\t\t\n\t\t\t\tthis.logBundle( target )\n\t\t\t\t\n\t\t\t\treturn target\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleDepsJSON( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar list = this.sourcesAll( { path , exclude } )\n\t\t\tif( !list.length ) return []\n\t\t\t\n\t\t\tvar graph = this.graph( { path , exclude } )\n\t\t\t\n\t\t\tvar deps : any = {}\n\t\t\tfor( let dep in graph.nodes ) {\n\t\t\t\tdeps[ dep ] = this.dependencies( { path : this.root().resolve( dep ).path() , exclude } )\n\t\t\t}\n\t\t\t\n\t\t\tvar data = {\n\t\t\t\tfiles : list.map( src => src.relate( this.root() ) ) ,\n\t\t\t\tedgesIn : graph.edgesIn ,\n\t\t\t\tedgesOut : graph.edgesOut ,\n\t\t\t\tdeps\n\t\t\t}\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.deps.json` )\n\t\t\ttarget.content( JSON.stringify( data ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t}\n\t\n\tfunction $mol_build_depsMerge(\n\t\ttarget : { [ index : string ] : number } ,\n\t\tsource : { [ index : string ] : number }\n\t) : { [ index : string ] : number } {\n\t\tfor( var path in source ) {\n\t\t\tif( target[ path ] >= source[ path ] ) continue\n\t\t\ttarget[ path ] = source[ path ]\n\t\t}\n\t\treturn target\n\t}\n\t\n\t$mol_build.dependors[ 'js' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.content() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/require\\(\\s*['\"](.*?)['\"]\\s*\\)/ig , ( str , path )=> {\n\t\t\t\t\t\tif( !/\\.[^\\/]$/.test( path ) ) path += '.js'\n\t\t\t\t\t\tif( path[0] === '.' ) path = '../' + path\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'ts' ] = $mol_build.dependors[ 'tsx' ] = $mol_build.dependors[ 'jam.js' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.content() )\n\t\t.replace( /\\/\\*(?!\\*)[\\s\\S]*?\\*\\//g , '' ) // drop block comments except doc-comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/\\$(([a-z0-9]{2,})(?:[._][a-z0-9]+|\\[\\s*['\"](?:[^\\/]*?)['\"]\\s*\\])*)/ig , ( str , name , pack )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/' + name.replace( /[_.\\[\\]'\"]+/g , '/' ) ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/require\\(\\s*['\"](.*?)['\"]\\s*\\)/ig , ( str , path )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'view.ts' ] = source => {\n\t\tvar treeName = './' + source.name().replace( /ts$/ , 'tree' )\n\t\tvar depends : { [ index : string ] : number } = { [ treeName ] : 0 }\n\t\t$mol_build_depsMerge( depends , $mol_build.dependors[ 'ts' ]( source ) )\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'css' ] = $mol_build.dependors[ 'view.css' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.content() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/(?:--|[\\[\\.#])([a-z][a-z0-9]+(?:[-_][a-z0-9]+)+)/ig , ( str , name )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/' + name.replace( /[._-]/g , '/' ) ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'meta.tree' ] = source => {\n\t\tconst depends : { [ index : string ] : number } = {}\n\t\t\n\t\tconst tree = $mol_tree.fromString( source.content().toString() , source.path() )\n\t\t\n\t\ttree.select( 'require' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.value ] = 0\n\t\t} )\n\t\t\n\t\ttree.select( 'include' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.value ] = Number.MIN_SAFE_INTEGER\n\t\t} )\n\t\t\n\t\treturn depends\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_server extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\texpress() {\n\t\t\tvar express = $node['express']()\n\t\t\t\n\t\t\tthis.expressHandlers().forEach( plugin => express.use( plugin ) )\n\t\t\t\n\t\t\t$node['portastic'].find(\n\t\t\t\t{\n\t\t\t\t\tmin : this.port() ,\n\t\t\t\t\tmax : this.port() + 1000 ,\n\t\t\t\t\tretrieve : 1\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t( ports : number[] ) => {\n\t\t\t\t\texpress.listen( ports[ 0 ] )\n\t\t\t\t\tconsole.log( this.messageStart( ports[ 0 ] ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn express\n\t\t}\n\t\t\n\t\tmessageStart( port : number ) {\n\t\t\treturn `${ this } started at http://127.0.0.1:${ port }/`\n\t\t}\n\t\t\n\t\texpressHandlers() : any[] {\n\t\t\treturn [].concat.apply(\n\t\t\t\t[] , [\n\t\t\t\t\tthis.expressCompressor() ,\n\t\t\t\t\tthis.expressBodier() ,\n\t\t\t\t\tthis.expressGenerator() ,\n\t\t\t\t\tthis.expressFiler() ,\n\t\t\t\t\tthis.expressDirector() ,\n\t\t\t\t]\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressCompressor() {\n\t\t\treturn $node['compression']()\n\t\t}\n\t\t\n\t\texpressBodier() {\n\t\t\treturn $node[ 'body-parser' ].json(\n\t\t\t\t{\n\t\t\t\t\tlimit : this.bodyLimit()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressFiler() {\n\t\t\treturn $node['express'].static(\n\t\t\t\t$node.path.resolve( this.rootPublic() ) , {\n\t\t\t\t\tmaxAge : this.cacheTime()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressDirector() {\n\t\t\treturn $node['serve-index']( this.rootPublic() , { icons : true } )\n\t\t}\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn ( req : any , res : any , next : () => void )=> next()\n\t\t}\n\t\t\n\t\tbodyLimit() {\n\t\t\treturn '1mb'\n\t\t}\n\t\t\n\t\tcacheTime() {\n\t\t\treturn 1000 * 60 * 60 * 24 * 365 * 1000\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 80\n\t\t}\n\t\t\n\t\trootPublic() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_build_server extends $mol_server {\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn ( req : any , res : any , next : () => void )=> {\n\t\t\t\ttry {\n\t\t\t\t\treturn this.generator( req.url ).valueOf() && next()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\tif( req.url.match( /\\.js$/ ) ) {\n\t\t\t\t\t\tres.send( `console.error( ${ JSON.stringify( error.message ) } )` ).end()\n\t\t\t\t\t} else if( req.url.match( /\\.css$/ ) ) {\n\t\t\t\t\t\tconst message = JSON.stringify( error.message.replace( /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g , '' ) )\n\t\t\t\t\t\t\t.replace( /\\\\n/g , '\\\\a' )\n\t\t\t\t\t\t\t.replace( /\\\\t/g , '\\\\9' )\n\t\t\t\t\t\tres.setHeader( 'content-type' , 'text/css' )\n\t\t\t\t\t\tres.send( `body:before{ display: block; font: 1em monospace; white-space: pre-wrap; color: red; content : ${ message } }` ).end()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tbuild() : $mol_build {\n\t\t\treturn $mol_fail( new Error( 'Not implemented' ) )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tgenerator( path : string ) {\n\t\t\tvar matched = path.match( /^((?:\\/\\w+)+)\\/-\\/(\\w+(?:.\\w+)+)$/ )\n\t\t\tif( !matched ) return <$mol_file[]>[]\n\t\t\t\n\t\t\tvar build = this.build()\n\t\t\t\n\t\t\tvar [ path , path , bundle ] = matched\n\t\t\tpath = build.root().resolve( path ).path()\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn build.bundle( { path , bundle } )\n\t\t\t} finally {\n\t\t\t\tbuild.bundleFiles( { path , exclude : [ 'node' ] } )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 8080\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\t\n\texport function $mol_test( set : { [ name : string ] : string | ( ( context : $mol_ambient_context )=> void ) } ) {\n\t\t\n\t\tfor( let name in set ) {\n\n\t\t\tconst code = set[ name ]\n\t\t\tconst test = ( typeof code === 'string' ) ? new Function( '' , code ) as ()=> void : code\n\t\t\t\n\t\t\t$mol_test_all.push( $mol_log_group( name , test ) )\n\t\t}\n\n\t\t$mol_test_schedule()\n\t}\n\n\texport let $mol_test_mocks = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport const $mol_test_all = [] as Array< ( context : $mol_ambient_context )=> void >\n\n\texport async function $mol_test_run() {\n\n\t\tfor( var test of $mol_test_all ) {\n\n\t\t\tlet context = Object.create( $$ )\n\t\t\tfor( let mock of $mol_test_mocks ) await mock( context )\n\t\t\t\n\t\t\tawait test( context )\n\t\t}\n\t\t\n\t\tconsole.info( '$mol_test' , $mol_test_all.length )\n\t}\n\t\n\tlet scheduled = false\n\texport function $mol_test_schedule() {\n\n\t\tif( scheduled ) return\n\t\tscheduled = true\n\n\t\tsetTimeout( $mol_log_group( '$mol_test' , ()=> {\n\t\t\tscheduled = false\n \t\t\t$mol_test_run()\n\t\t} ) )\n\t\t\n\t}\n\n\n\t$mol_test_mocks.push( context => {\n\t\tlet seed = 0\n\n\t\tcontext.Math = Object.create( Math )\n\t\tcontext.Math.random = ()=> Math.sin( seed++ )\n\n\t\tconst forbidden = [ 'XMLHttpRequest' , 'fetch' ]\n\n\t\tfor( let api of forbidden ) {\n\t\t\tcontext[ api ] = new Proxy( function(){} , {\n\t\t\t\tget() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t\tapply() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t} )\n\t\t}\n\t\t\n\t} )\n\n\t$mol_test({\n\n\t\t'mocked Math.random'( $ ) {\n\t\t\tconsole.assert( $.Math.random() === 0 )\n\t\t\tconsole.assert( $.Math.random() === Math.sin(1) )\n\t\t} ,\n\n\t\t'forbidden XMLHttpRequest'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void new $.XMLHttpRequest )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'XMLHttpRequest is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t\t'forbidden fetch'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void $.fetch('') )\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.assert( error.message === 'fetch is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t})\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'objects by reference' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( {} , {} ) , false )\n\t\t} ,\n\n\t\t'primitives by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( 'a' , 'a' ) , true )\n\t\t} ,\n\n\t\t'NaN by value' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , Number.NaN ) , true )\n\t\t} ,\n\n\t\t'NaN not equal zero' () {\n\t\t\t$mol_assert_equal( $mol_compare_any( Number.NaN , 0 ) , false )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'return source when same object'() {\n\t\t\tconst target = {}\n\t\t\t$mol_assert_equal( $mol_conform( target , target ) , target )\n\t\t} ,\n\n\t\t'return target when some is not object'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( true , obj ) , true )\n\t\t\t$mol_assert_equal( $mol_conform( obj , true ) , obj )\n\t\t} ,\n\n\t\t'return target when some is null'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( null , obj ) , null )\n\t\t\t$mol_assert_equal( $mol_conform( obj , null ) , obj )\n\t\t} ,\n\n\t\t'return target when some is undefined'() {\n\t\t\tconst obj = { a : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( undefined , obj ) , undefined )\n\t\t\t$mol_assert_equal( $mol_conform( obj , undefined ) , obj )\n\t\t} ,\n\n\t\t'return target when different keys count'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 3 , undefined ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when array values are strong equal'() {\n\t\t\tconst source = [ 1 , 2 , 3 ]\n\t\t\t$mol_assert_equal( $mol_conform( [ 1 , 2 , 3 ] , source ) , source )\n\t\t} ,\n\n\t\t'return source when object values are strong equal'() {\n\t\t\tconst source = { a : 1 , b : 2 }\n\t\t\t$mol_assert_equal( $mol_conform( { a : 1 , b : 2 } , source ) , source )\n\t\t} ,\n\n\t\t'return target when some values are not equal'() {\n\t\t\tconst target = [ 1 , 2 , 3 ]\n\t\t\tconst source = [ 1 , 2 , 5 ]\n\t\t\tconst result = $mol_conform( target , source )\n\t\t\t\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.join(',') , '1,2,3' )\n\t\t} ,\n\n\t\t'return source when values are deep equal'() {\n\t\t\tconst source = { foo : { bar : 1 } }\n\t\t\t$mol_assert_equal( $mol_conform( { foo : { bar : 1 } } , source ) , source )\n\t\t} ,\n\n\t\t'return target with equal values from source and not equal from target'() {\n\t\t\tconst source = { foo : { xxx : 1 } , bar : { xxx : 2 } }\n\t\t\tconst target = { foo : { xxx : 1 } , bar : { xxx : 3 } }\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t\t$mol_assert_equal( result.bar , target.bar )\n\t\t} ,\n\n\t\t'return target when equal but with different class'() {\n\t\t\tconst target = { '0' : 1 }\n\t\t\t$mol_assert_equal( $mol_conform( target , [ 1 ] ) , target )\n\t\t} ,\n\n\t\t'return target when conformer for class is not defined'() {\n\t\t\tconst Obj = class {}\n\n\t\t\tconst source = new Obj \n\t\t\tconst target = new Obj\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t} ,\n\n\t\t'return target when has cyclic reference'() {\n\t\t\tconst source = { foo : {} }\n\t\t\tsource['self'] = source\n\n\t\t\tconst target = { foo : {} }\n\t\t\ttarget['self'] = target\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result['self'] , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t} ,\n\n\t\t'return source when equal dates'() {\n\t\t\tconst source = new Date( 12345 )\n\t\t\tconst target = new Date( 12345 )\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'return source when equal regular expressions'() {\n\t\t\tconst source = /\\x22/mig\n\t\t\tconst target = /\\x22/mig\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\t\t\n\t\t'return cached value if already conformed'() {\n\t\t\tconst source = { foo : { xxx : 1 } , bar : { xxx : 3 } }\n\t\t\tconst target = { foo : { xxx : 2 } , bar : { xxx : 3 } }\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\ttarget.foo.xxx = 1\n\t\t\t$mol_assert_equal( $mol_conform( target.foo , source.foo ) , target.foo )\n\t\t} ,\n\n\t\t'skip readlony fields'() {\n\t\t\tconst source = { foo : {} , bar : {} }\n\n\t\t\tconst target = { foo : {} , bar : {} }\n\t\t\tObject.defineProperty( target , 'bar' , { value : {} , writable : false } )\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , target )\n\t\t\t$mol_assert_equal( result.foo , source.foo )\n\t\t\t$mol_assert_equal( result.bar , target.bar )\n\t\t} ,\n\n\t\t'object with NaN'() {\n\n\t\t\tconst source = { foo : Number.NaN }\n\t\t\tconst target = { foo : Number.NaN }\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t\t'array with NaN'() {\n\n\t\t\tconst source = [ Number.NaN ]\n\t\t\tconst target = [ Number.NaN ]\n\n\t\t\tconst result = $mol_conform( target , source )\n\n\t\t\t$mol_assert_equal( result , source )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'two must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'three must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'two must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'two must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\t$mol_fail( new Error( `${value} ≠ true` ) )\n\t}\n\t\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\t$mol_fail( new Error( `${value} ≠ false` ) )\n\t}\n\t\n\texport function $mol_assert_fail( handler : ()=> any , ErrorRight? : any ) {\n\t\t\n\t\tconst fail = $.$mol_fail\n\t\t\n\t\ttry {\n\t\t\t$.$mol_fail = $.$mol_fail_hidden\n\t\t\t\n\t\t\thandler()\n\n\t\t} catch( error ) {\n\t\t\t\n\t\t\tif( !ErrorRight ) return error\n\t\t\t\n\t\t\tif( typeof ErrorRight === 'string' ) {\n\t\t\t\tif( error.message !== ErrorRight ) throw error\n\t\t\t} else {\n\t\t\t\tif(!( error instanceof ErrorRight )) throw error\n\t\t\t}\n\t\t\t\n\t\t\treturn error\n\n\t\t} finally {\n\t\t\t$.$mol_fail = fail\n\t\t}\n\n\t\t$mol_fail( new Error( 'Not failed' ) )\n\t}\n\t\n\texport function $mol_assert_equal< Value >( ... args : Value[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) continue\n\t\t\t\tif( args[i] !== args[j] ) $mol_fail( new Error( `Not equal\\n${ args[i] }\\n${ args[j] }` ) )\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_unique( ... args : any[] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( args[i] === args[j] || ( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) ) {\n\t\t\t\t\t$mol_fail( new Error( `args[${ i }] = args[${ j }] = ${ args[i] }` ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_like< Value >( head : Value , ... tail : Value[] ) {\n\t\tfor( let value of tail ) {\n\t\t\tvalue = $mol_conform( value , head )\n\t\t\tif( Number.isNaN( value as any as number ) && Number.isNaN( head as any as number ) ) continue\n\t\t\tif( head !== value ) $mol_fail( new Error( `Not like\\n${ head }\\n${ value }` ) )\n\t\t\thead = value\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\t\n\t} )\n}\n","module $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'caching'() {\n\t\t\t\n\t\t\tlet random = new $mol_atom( 'random' , ()=> Math.random() )\n\t\t\t\n\t\t\t$mol_assert_equal( random.get() , random.get() )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'lazyness'() {\n\t\t\t\n\t\t\tlet value = 0\n\t\t\tlet prop = new $mol_atom( 'prop' , ()=> value = 1 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( value , 0 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'instant actualization'() {\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'do not actualize when masters not changed'() {\n\t\t\t\n\t\t\tlet target_updates = 0 \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> Math.abs( source.get() ) )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\t++ target_updates\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\n\t\t\tsource.set( -1 )\n\t\t\ttarget.get()\n\t\t\t\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\t\t\t\n\t\t} ,\n\t\t\n\t\t'obsolete atoms actualized in initial order'() {\n\t\t\t\n\t\t\tlet actualizations = '' \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> {\n\t\t\t\tactualizations += 'M'\n\t\t\t\treturn source.get()\n\t\t\t} )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\tactualizations += 'T'\n\t\t\t\tsource.get()\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( actualizations , 'TM' )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( actualizations , 'TMTM' )\n\t\t\t\t\t\t\n\t\t} ,\n\n\t\t'automatic deferred restart'() {\n\t\t\t\n\t\t\tlet targetValue = 0\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> targetValue = middle.get() + 1 )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_equal( targetValue , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Right reactive change of source'() {\n\n\t\t\tlet targetValue : number\n\t\t\t\n\t\t\tlet test_counter = new $mol_atom<number>( 'test_counter' , next => {\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\ttest_counter.push( next || 1 )\n\t\t\t\t} )\n\t\t\t\t$mol_fail_hidden( new $mol_atom_wait )\n\t\t\t} )\n\t\t\t\n\t\t\tlet slave = new $mol_atom<number>( 'slave' , next => test_counter.get() )\n\t\t\tslave.actualize()\n\t\t\t\n\t\t\tlet res : Error[] = []\n\t\t\tconst error = new Error( 'test error' )\n\t\t\t\n\t\t\tconst test_task = new $mol_atom( 'test_task' )\n\t\t\t.then( () => test_counter.get() + 1 )\n\t\t\t.then( next => test_counter.set( next ) )\n\t\t\t.then( next => {\n\t\t\t\ttest_counter.set( next + 1 )\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t} )\n\t\t\t.catch( error => [ error ] )\n\t\t\t.then( next => res = next )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( test_counter.get() , 3 )\n\t\t\t$mol_assert_equal( res[0] , error )\n\t\t} ,\n\t\t\n\t\t'error handling'() {\n\n\t\t\tlet source = new $mol_atom< number >( 'source' , ( next? : number )=> {\n\t\t\t\tconst error = new Error( 'Test error' )\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t} )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\n\t\t\t$mol_assert_fail( ()=> target.get().valueOf() )\n\n\t\t} ,\n\n\t\t'setting equal state are ignored'() {\n\n\t\t\tlet atom = new $mol_atom( 'atom' , next => next || { foo : [777] } )\n\n\t\t\tlet v1 = atom.get()\n\t\t\tlet v2 = { foo : [777] }\n\t\t\tlet v3 = atom.set( v2 )\n\t\t\t\n\t\t\t$mol_assert_equal( v1 , v3 )\n\t\t\t$mol_assert_unique( v2 , v3 )\n\t\t} ,\n\t\t\n\t\t'setting equal to last setted are ignored until changed'() {\n\t\t\tlet val = { foo : [777] }\n\t\t\tlet called = 0\n\n\t\t\tlet atom = new $mol_atom( 'atom' , ()=> {\n\t\t\t\t++ called\n\t\t\t\treturn val\n\t\t\t} )\n\n\t\t\tatom.get()\n\t\t\t$mol_assert_equal( called , 1 )\n\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 2 )\n\t\t\t\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 2 )\n\t\t\tatom.value( { foo : [666] } , $mol_atom_force_update )\n\t\t\t$mol_assert_equal( called , 3 )\n\t\t\t\n\t\t\tatom.push({ foo : [777] })\n\n\t\t\tatom.set({ foo : [666] })\n\t\t\t$mol_assert_equal( called , 4 )\n\n\t\t\tatom.set({ foo : [555] })\n\t\t\t$mol_assert_equal( called , 5 )\n\t\t} ,\n\t\t\n\t\t'Next remains after restart'() {\n\n\t\t\tlet defer = new $mol_atom( 'defer' , next => {\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\tdefer.push({})\n\t\t\t\t} )\n\t\t\t\t$mol_fail_hidden( new $mol_atom_wait )\n\t\t\t} )\n\n\t\t\tlet value = {}\n\t\t\t\n\t\t\tlet task = new $mol_atom( 'task' , next => {\n\t\t\t\tdefer.get().valueOf()\n\t\t\t\treturn next\n\t\t\t} )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> task.set( value ).valueOf() , $mol_atom_wait )\n\n\t\t\t$mol_defer.run()\n\n\t\t\t$mol_assert_equal( task.get() , value )\n\t\t} ,\n\t})\n\t\n}\n","/**\n * Only keys from `Input` that fit to `Constraint`. `any` and `unknown` values are ignored.\n * \n * \t// \"E\" | \"PI\" ...\n * \ttype MathConstants = $mol_type_filter_keys< Math , number >\n */\ntype $mol_type_filter_keys< Input , Constraint > = {\n    [ Field in keyof Input ] : Input[ Field ] extends Constraint ? unknown extends Input[ Field ] ? never : Field : never\n}[ keyof Input ]\n\n/**\n * Only keys from `Input` that fit to `Constraint`.\n * \n * \t// { E , PI , ... }\n * \ttype MathConstants = $mol_type_filter< Math , number >\n */\ntype $mol_type_filter< Input , Constraint > = Pick< Input , $mol_type_filter_keys< Input , Constraint > >\n\n/**\n * Recursive `Partial`.\n * \n * \tlet props : $mol_type_partial_deep< HTMLElement > = { style : { display : 'block' } }\n */\ntype $mol_type_partial_deep< Val > = {\n\t[ field in keyof Val ]? : $mol_type_partial_deep< Val[ field ] >\n}\n\n/**\n * Converts union of types to intersection of same types\n * \n * \t// number & string\n * \t$mol_type_intersect< number | string >\n */\ntype $mol_type_intersect< Union > = ( Union extends any ? ( _ : Union )=> void : never ) extends ( ( _ : infer Intersection )=> void ) ? Intersection : never\n\n/**\n * Return `unknown` when `A` and `B` are the same type. `never` otherwise.\n * \n * \t// never\n * \t$mol_type_equals< unknown , any > & number\n * \n * \t// number\n * \t$mol_type_equals< never , never > & number\n */\ntype $mol_type_equals< A , B > = ( <X>()=> X extends A ? 1 : 2 ) extends ( <X>()=> X extends B ? 1 : 2 ) ? unknown : never\n\n/**\n * Converts intersection of records to record of intersections\n * \n * \t// { a : 1 & 2 }\n * \t$mol_type_merge< { a : 1 } & { b : 2 } >\n */\ntype $mol_type_merge< Intersection extends object > = {\n\t[ Key in keyof Intersection ] : Intersection[ Key ]\n}\n","declare namespace JSX {\n\n\texport interface Element extends HTMLElement {}\n\t\n\texport interface ElementClass {\n\t\tattributes : {}\n\t\townerDocument : Pick< Document , 'getElementById' | 'createElement' >\n\t\tchildNodes : Array< Node | string >\n\t\tvalueOf() : Element\n\t}\n\t\n\t/** Props for html elements */\n\texport type IntrinsicElements = {\n\t\t[ key in keyof HTMLElementTagNameMap ]? : $mol_type_partial_deep< HTMLElementTagNameMap[ key ] >\n\t}\n\t\n\t/** Additional undeclared props */\n\texport interface IntrinsicAttributes {\n\t\tid? : string\n\t}\n\t\n\texport interface ElementAttributesProperty {\n\t\tattributes : {\n\t\t}\n\t}\n\t\n\t// export type IntrinsicClassAttributes< Class > = $mol_type_partial_deep< Omit< Class , 'valueOf' > >\n\t\n\tinterface ElementChildrenAttribute {\n\t}\n\n}\n","namespace $ {\n\n\texport let $mol_jsx_prefix = ''\n\n\texport let $mol_jsx_booked = null as null | Set< string >\n\t\n\texport let $mol_jsx_document : JSX.ElementClass['ownerDocument'] = {\n\t\tgetElementById : ()=> null ,\n\t\tcreateElement : ( name : string )=> $mol_dom_context.document.createElement( name )\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make empty div'() {\n\t\t\t$mol_assert_equal( (<div/>).outerHTML , '<div></div>' )\n\t\t} ,\n\t\t\n\t\t'Define native field'() {\n\t\t\t\n\t\t\tconst dom = <input value='123' /> as HTMLInputElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<input value=\"123\">' )\n\t\t\t$mol_assert_equal( dom.value , '123' )\n\n\t\t} ,\n\t\t\n\t\t'Define classes'() {\n\t\t\t\n\t\t\tconst dom = <div classList={[ 'foo bar' ]} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div class=\"foo bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define styles'() {\n\t\t\t\n\t\t\tconst dom = <div style={{ color : 'red' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div style=\"color: red;\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define dataset'() {\n\t\t\t\n\t\t\tconst dom = <div dataset={{ foo : 'bar' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div data-foo=\"bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define attributes'() {\n\t\t\t\n\t\t\tconst dom = <div hidden lang=\"ru\" />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div hidden=\"\" lang=\"ru\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define child nodes'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\thello\n\t\t\t\t\t<strong>world</strong>\n\t\t\t\t\t!\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div>hello<strong>world</strong>!</div>' )\n\n\t\t} ,\n\n\t\t'Function as component'() {\n\n\t\t\tconst Button = ( { hint } : { hint : string } , target : ()=> string ) => {\n\t\t\t\treturn <button title={ hint } >{ target() }</button>\n\t\t\t}\n\n\t\t\tconst dom = <Button id=\"/foo\" hint=\"click me\">{ ()=> 'hey!' }</Button>\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<button title=\"click me\" id=\"/foo\">hey!</button>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t// 'Standart classes as component'() {\n\n\t\t// \tconst dom = <HTMLButtonElement id=\"/foo\" title=\"click me\">hey!</HTMLButtonElement>\n\n\t\t// \t$mol_assert_equal( dom.outerHTML , '<button title=\"click me\" id=\"/foo\">hey!</button>' )\n\t\t\t\n\t\t// } ,\n\t\t\n\t\t'Nested guid generation'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"/bar\">\n\t\t\t\t\t\t<img id=\"/icon\" />\n\t\t\t\t\t</Bar>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props : {} , icon : Element )=> {\n\t\t\t\treturn <span>{ icon }</span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"/foo\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div id=\"/foo\"><span id=\"/foo/bar\"><img id=\"/foo/icon\"></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on non unique ids'() {\n\n\t\t\tconst App = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<span id=\"/bar\" />\n\t\t\t\t\t<span id=\"/bar\" />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <App id=\"/foo\" /> , 'JSX already has tag with id \"/bar\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport function $mol_jsx_make< Props extends { id? : string } , Children extends Array< Node | string > >(\n\t\tElem : string\n\t\t\t| ( ( props : Props , ... children : Children ) => Element )\n\t\t\t| typeof $mol_jsx_view ,\n\t\tprops : Props ,\n\t\t... childNodes : Children\n\t) : Element {\n\n\t\tconst id = props && props.id || ''\n\n\t\tif( $mol_jsx_booked ) {\n\t\t\tif( $mol_jsx_booked.has( id ) ) {\n\t\t\t\t$mol_fail( new Error( `JSX already has tag with id ${ JSON.stringify( id ) }` ) )\n\t\t\t} else {\n\t\t\t\t$mol_jsx_booked.add( id )\n\t\t\t}\n\t\t}\n\n\t\tconst guid = $mol_jsx_prefix + id\n\n\t\tlet node = guid && $mol_jsx_document.getElementById( guid )\n\n\t\tif( typeof Elem !== 'string' ) {\n\n\t\t\tif( Elem.prototype ) {\n\n\t\t\t\tconst view : $mol_jsx_view = node && node[ Elem as any ] || new ( Elem as any )\n\t\t\t\t\n\t\t\t\tObject.assign( view , props )\n\t\t\t\tview[ Symbol.toStringTag ] = guid\n\t\t\t\t\n\t\t\t\tview.childNodes = childNodes\n\t\t\t\t\n\t\t\t\tif( !view.ownerDocument ) view.ownerDocument = $mol_jsx_document\n\t\t\t\t\n\t\t\t\tnode = view.valueOf()\n\t\t\t\t\n\t\t\t\tnode[ Elem as any ] = view\n\t\t\t\t\n\t\t\t\treturn node\n\n\t\t\t} else {\n\n\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\t$mol_jsx_prefix = guid\n\t\t\t\t\t$mol_jsx_booked = new Set\n\t\n\t\t\t\t\treturn ( Elem as any )( props , ... childNodes )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t$mol_jsx_booked = booked\n\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( !node ) node = $mol_jsx_document.createElement( Elem )\n\n\t\t$mol_dom_render_children( node , ( [] as ( Node | string )[] ).concat( ... childNodes ) )\n\n\t\tfor( const key in props ) {\n\n\t\t\tif( typeof props[ key ] === 'string' ) {\n\n\t\t\t\tnode.setAttribute( key , props[ key as any ] )\n\n\t\t\t} else if( props[ key ] && props[ key ]['constructor'] === Object ) {\n\n\t\t\t\tif( typeof node[ key as any ] === 'object' ) {\n\t\t\t\t\tObject.assign( ( node as any )[ key ] , props[ key ] )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnode[ key as any ] = props[ key ]\n\n\t\t}\n\n\t\tif( guid ) node.id = guid\n\n\t\treturn node\n\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t$mol_test({\n\n\t\t'number'() {\n\t\t\tconst dict = new $mol_dict< number , number >()\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\n\t\t\tdict.set( 123 , 321 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , true )\n\n\t\t\tdict.delete( 123 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\t\t} ,\n\n\t\t'pojo as key'() {\n\t\t\tconst dict = new $mol_dict< { foo : number } , number >()\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\n\t\t\tdict.set( { foo : 123 } , 321 )\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , 321 )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , true )\n\n\t\t\tdict.delete({ foo : 123 })\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\t\t} ,\n\n\t\t'array as key'() {\n\t\t\tconst dict = new $mol_dict< [ number ] , number >()\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\n\t\t\tdict.set( [ 123 ] , 321 )\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , 321 )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , true )\n\n\t\t\tdict.delete([ 123 ])\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\t\t} ,\n\n\t\t'html element as key'() {\n\t\t\tconst el = <div />\n\n\t\t\tconst dict = new $mol_dict< Element , number >()\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\n\t\t\tdict.set( el , 321 )\n\t\t\t$mol_assert_equal( dict.get( el ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( el ) , true )\n\t\t\t\n\t\t\t$mol_assert_equal( dict.get( <div/> ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( <div/> ) , false )\n\n\t\t\tdict.delete( el )\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\t\t} ,\n\n\t\t'for-of key restore'() {\n\t\t\t\n\t\t\tconst dict = new $mol_dict< number , number >([[ 123 , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tfor( const [ key , val ] of dict ) {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( keys.length , 1 )\n\t\t\t$mol_assert_equal( keys[0] , 123 )\n\t\t\t\n\t\t\t$mol_assert_equal( vals.length , 1 )\n\t\t\t$mol_assert_equal( vals[0] , 321 )\n\n\t\t} ,\n\n\t\t'forEach key restore'() {\n\n\t\t\tconst dict = new $mol_dict< number , number >([[ 123 , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tdict.forEach( ( val , key )=> {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t} )\n\n\t\t\t$mol_assert_equal( keys.length , 1 )\n\t\t\t$mol_assert_equal( keys[0] , 123 )\n\t\t\t\n\t\t\t$mol_assert_equal( vals.length , 1 )\n\t\t\t$mol_assert_equal( vals[0] , 321 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test( {\n\n\t\t'cached property with simple key'() {\t\t\t\t\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key\n\t\t\t\tfoo( id : number , next? : Number | null ) {\n\t\t\t\t\tif( next == null ) return new Number( 123 )\n\t\t\t\t\treturn new Number( next )\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t// get\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\t\t\t$mol_assert_equal( x.foo( 0 ) , x.foo( 0 ) )\n\t\t\t$mol_assert_unique( x.foo( 0 ) , x.foo( 1 ) )\n\n\t\t\t// set\n\t\t\tx.foo( 0 , 321 )\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 321 )\n\n\t\t\t// reset\n\t\t\tx.foo( 0 , null )\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\n\t\t} ,\n\n\t\t'cached property with complex key'() {\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key\n\t\t\t\tfoo( ids : number[] ) {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t$mol_assert_equal( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 1 ] ) )\n\t\t\t$mol_assert_unique( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 2 ] ) )\n\t\t} ,\n\n\t\t'auto sync of properties'() {\n\n\t\t\tclass X extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\txxx() {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst x = new X\n\t\t\t$mol_assert_equal( x.bar() , 2 )\n\t\t\t$mol_assert_equal( x.xxx() , 3 )\n\n\t\t\tx.foo( 5 )\n\t\t\t$mol_assert_equal( x.xxx() , 7 )\n\t\t} ,\n\n\t\t//'must fail on recursive dependency'() {\n\t\t//\n\t\t//\tclass X extends $mol_object {\n\t\t//\n\t\t//\t\t@ $mol_prop()\n\t\t//\t\tfoo() : number {\n\t\t//\t\t\treturn this.foo() + 1\n\t\t//\t\t}\n\t\t//\n\t\t//\t}\n\t\t//\n\t\t//\tvar x = new X\n\t\t//\n\t\t//\ttry {\n\t\t//\t\tx.foo().valueOf()\n\t\t//\t\t$mol_assert_fail( 'Not tracked recursive dependency' )\n\t\t//\t} catch( error ) {\n\t\t//\t\t$mol_assert_equal( error.message , 'Recursive dependency! .foo()' )\n\t\t//\t}\n\t\t//} ,\n\n\t\t'must be deferred destroyed when no longer referenced'() {\n\n\t\t\tlet foo : any\n\t\t\tlet foo_destroyed = false\n\n\t\t\tclass B extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tshowing( next? : boolean ) {\n\t\t\t\t\tif( next === void 0 ) return true\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tfoo() {\n\t\t\t\t\treturn foo = new class extends $mol_object {\n\t\t\t\t\t\tdestructor() {\n\t\t\t\t\t\t\tfoo_destroyed = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.showing() ? this.foo() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar b = new B\n\n\t\t\tvar bar = b.bar()\n\t\t\t$mol_assert_ok( bar )\n\n\t\t\tb.showing( false )\n\t\t\tb.bar()\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_ok( foo_destroyed )\n\t\t\t$mol_assert_not( b.bar() )\n\n\t\t\tb.showing( true )\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_unique( b.bar() , bar )\n\t\t} ,\n\n\t\t'wait for data'() {\n\n\t\t\tclass Test extends $mol_object {\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tsource( next? : string , force? : $mol_atom_force ) : string {\n\t\t\t\t\tnew $mol_defer( () => {\n\t\t\t\t\t\tthis.source( 'Jin' , $mol_atom_force_cache )\n\t\t\t\t\t} )\n\t\t\t\t\treturn $mol_fail_hidden( new $mol_atom_wait( 'Wait for data!' ) )\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\tmiddle() {\n\t\t\t\t\treturn this.source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem\n\t\t\t\ttarget() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst t = new Test\n\n\t\t\t$mol_assert_fail( ()=> t.target().valueOf() , $mol_atom_wait )\n\n\t\t\t$mol_defer.run()\n\n\t\t\t$mol_assert_equal( t.target() , 'Jin' )\n\t\t} ,\n\n\t} )\n\n}\n","namespace $ {\n\t$mol_test( { \n\t\t\n\t\t'const returns stored value'() {\n\t\t\n\t\t\tconst foo = { bar : $mol_const( Math.random() ) }\n\t\t\t\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar() )\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar['()'] )\n\t\t\t\n\t\t} ,\n\n\t} )\n}\n","module $ {\n\t$mol_test({\n\t\t\n\t\t'scalars'() {\n\t\t\t$mol_assert_equal( $mol_typeof( void 0 ) , 'Undefined' )\n\t\t\t$mol_assert_equal( $mol_typeof( null ) , 'Null' )\n\t\t\t$mol_assert_equal( $mol_typeof( 0 ) , 'Number' )\n\t\t\t$mol_assert_equal( $mol_typeof( '' ) , 'String' )\n\t\t\t$mol_assert_equal( $mol_typeof( false ) , 'Boolean' )\n\t\t} ,\n\t\t\n\t\t'common objects'() {\n\t\t\t$mol_assert_equal( $mol_typeof( {} ) , 'Object' )\n\t\t\t$mol_assert_equal( $mol_typeof( [] ) , 'Array' )\n\t\t\t$mol_assert_equal( $mol_typeof( arguments ) , 'Arguments' )\n\t\t} ,\n\t\t\n\t\t'special classes'() {\n\t\t\t$mol_assert_equal( $mol_typeof( new Date ) , 'Date' )\n\t\t\t$mol_assert_equal( $mol_typeof( new RegExp( '' ) ) , 'RegExp' )\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'tree parsing'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub[ 1 ].type , \"bar\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\n\\n\\n\" ).sub.length , 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub[ 1 ].data , \"bar\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar \\\\pol\" ).sub[ 0 ].sub[ 0 ].sub[ 0 ].data , \"pol\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar\\n\\t\\\\pol\\n\\t\\\\men\" ).sub[ 0 ].sub[ 0 ].sub[ 1 ].data , \"men\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'foo bar \\\\text\\n' ).toString() , 'foo bar \\\\text\\n' )\n\t\t} ,\n\n\t\t'inserting'() {\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , 'a' , 'b' , 'c' ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , 'a' , 'b' , 'c' , 'd' ).toString() , 'a b c \\\\\\n' )\n\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , 0 , 0 , 0 ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , 0 , 0 , 0 , 0 ).toString() , 'a b \\\\\\n\\t\\\\\\n' )\n\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , null , null , null ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , null , null , null , null ).toString() , 'a b \\\\\\n\\t\\\\\\n' )\n\t\t} ,\n\n\t\t'fromJSON'() {\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([]).toString() , '/\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ false , true ]).toString() , '/\\n\\tfalse\\n\\ttrue\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ 0 , 1 , 2.3 ]).toString() , '/\\n\\t0\\n\\t1\\n\\t2.3\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ '' , 'foo' , 'bar\\nbaz' ]).toString() , '/\\n\\t\\\\\\n\\t\\\\foo\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON({ 'foo' : false , 'bar\\nbaz' : 'lol' }).toString() , '*\\n\\tfoo false\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n\\t\\t\\\\lol\\n' )\n\t\t} ,\n\t\t\n\t\t'toJSON'() {\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n' ).sub[0] ) , '[]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\tfalse\\n\\ttrue\\n' ).sub[0] ) , '[false,true]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\t0\\n\\t1\\n\\t2.3\\n' ).sub[0] ) , '[0,1,2.3]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\t\\\\\\n\\t\\\\foo\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n' ).sub[0] ) , '[\"\",\"foo\",\"bar\\\\nbaz\"]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '*\\n\\tfoo false\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n\\t\\t\\\\lol\\n' ).sub[0] ) , '{\"foo\":false,\"bar\\\\nbaz\":\"lol\"}' )\n\t\t} ,\n\t\t\n\t\t'hack'() {\n\n\t\t\tconst res = $mol_tree.fromString( `foo bar xxx` ).hack({\n\t\t\t\t'' : ( tree , context )=> [ tree.hack( context ) ] ,\n\t\t\t\t'bar' : ( tree , context )=> [ tree.hack( context ).clone({ type : '777' }) ] ,\n\t\t\t})\n\n\t\t\t$mol_assert_equal( res.toString() , new $mol_tree({ type : 'foo 777 xxx' }).toString() )\n\n\t\t} ,\n\n\t} )\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'id auto generation'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test_item extends $mol_view { }\n\t\t\t\n\t\t\tclass $mol_view_test_block extends $mol_view {\n\t\t\t\t\n\t\t\t\t@ $mol_mem_key\n\t\t\t\telement( id : number ) {\n\t\t\t\t\treturn new $mol_view_test_item()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test_block()\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node().id , '' )\n\t\t\t$mol_assert_equal( x.element( 0 ).dom_node().id , '.element(0)' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'caching ref to dom node'() {\n\t\t\t\n\t\t\tvar x = new class extends $mol_view { }\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node() , x.dom_node() )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'content render'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tsub() {\n\t\t\t\t\treturn [ 'lol' , 5 ]\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree()\n\t\t\t\n\t\t\t$mol_assert_equal( node.innerHTML , 'lol5' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'bem attributes generation'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test_item extends $mol_view { }\n\t\t\t\n\t\t\tclass $mol_view_test_block extends $mol_view {\n\t\t\t\t\n\t\t\t\t@ $mol_mem_key\n\t\t\t\tElement( id : number ) {\n\t\t\t\t\treturn new $mol_view_test_item()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test_block()\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node().getAttribute( 'mol_view_test_block' ) , '' )\n\t\t\t$mol_assert_equal( x.dom_node().getAttribute( 'mol_view' ) , '' )\n\t\t\t\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view_test_block_element' ) , '' )\n\t\t\t\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view_test_item' ) , '' )\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view' ) , '' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'render custom attributes'() {\n\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tattr() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'href' : '#haha' ,\n\t\t\t\t\t\t'required' : true ,\n\t\t\t\t\t\t'hidden' : false ,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree()\n\t\t\t\n\t\t\t$mol_assert_equal( node.getAttribute( 'href' ) , '#haha' )\n\t\t\t$mol_assert_equal( node.getAttribute( 'required' ) , 'true' )\n\t\t\t$mol_assert_equal( node.getAttribute( 'hidden' ) , null )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'render custom fields'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tfield() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'hidden' : true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree() as HTMLElement\n\t\t\t\n\t\t\t$mol_assert_equal( node.hidden , true )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'attach event handlers'() {\n\t\t\t\t\n\t\t\tvar clicked = false\n\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tevent() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'click' : ( next? : Event ) => this.event_click( next )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevent_click( next? : Event ) {\n\t\t\t\t\tclicked = true\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_node() as HTMLElement\n\t\t\tnode.click()\n\t\t\t\n\t\t\t$mol_assert_ok( clicked )\n\t\t\t\n\t\t} ,\n\t\n\t} )\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( context => {\n\t\tclass $mol_state_local_mock< Value > extends $mol_state_local< Value > {\n\t\t\t\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tstatic value< Value >( key : string , next? : Value ) { return next as Value }\n\n\t\t}\n\t\tcontext.$mol_state_local = $mol_state_local_mock\n\t} )\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'local get set delete'() {\n\t\t\t\t\t\n\t\t\tvar key = '$mol_state_local_test:' + Math.random()\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t\t\n\t\t\t$mol_state_local.value( key , 123 )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , 123 )\n\t\t\t\n\t\t\t$mol_state_local.value( key , null )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'sorting must cut cycles at low priority edges A'() {\n\n\t\t\tvar graph = new $mol_graph< void , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.sorted.join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges B'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< void , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.sorted.join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges C'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< void , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.sorted.join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges D'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< void , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.sorted.join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t} )\n}\n","namespace $ {\n\n\texport function $mol_dom_parse(\n\t\ttext : string ,\n\t\ttype : SupportedType = 'application/xhtml+xml' ,\n\t) {\n\n\t\tconst parser = new $mol_dom_context.DOMParser()\n\t\tconst doc = parser.parseFromString( text , type )\n\t\t\n\t\tconst error = doc.getElementsByTagName( 'parsererror' )[0]\n\t\tif( error ) throw new Error( error.textContent! )\n\n\t\treturn doc\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Attach to document'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\n\t\t\t$mol_jsx_attach( doc , ()=> <body id=\"/foo\">bar</body> )\n\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\t\t\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport function $mol_jsx_attach< Result >( next : typeof $mol_jsx_document , action : ()=> Result ) {\n\t\tconst prev = $mol_jsx_document\n\t\ttry {\n\t\t\t$mol_jsx_document = next\n\t\t\treturn action()\n\t\t} finally {\n\t\t\t$mol_jsx_document = prev\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_class< Class extends  any >( Class : Class ) {\n\t\t\n\t\tClass[ Symbol.toStringTag ] = Class.name\n\t\t\n\t\tif( !Class.prototype.hasOwnProperty( Symbol.toStringTag ) ) {\n\t\t\tClass.prototype[ Symbol.toStringTag ] = '<' + Class.name + '>'\n\t\t}\n\n\t\treturn Class\n\n\t}\n\n}\n","namespace $ {\n\n\t@ $mol_class\n\texport class $mol_object2 extends Object {\n\t\t\n\t\tstatic $ = $ as $mol_ambient_context\n\t\tstatic get $$() { return this.$ }\n\n\t\t$! : typeof $mol_object2.$\n\t\tget $$() { return this.$ }\n\n\t\tconstructor( init? : ( obj : any )=> void ) {\n\t\t\tsuper()\n\t\t\tif( init ) init( this )\n\t\t}\n\n\t\tpublic static make< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : Instance )=> void\n\t\t) : Instance {\n\t\t\treturn new this( init )\n\t\t}\n\t\t\n\t\tstatic toString() { return this[ Symbol.toStringTag ] || this.name }\n\n\t\tdestructor() { }\n\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\n\t}\n\n\tObject.defineProperty( $mol_object2.prototype, '$' , { value : $mol_object2.$ , enumerable : false , writable : true } )\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'run callback' () {\n\n\t\t\t@ $mol_class\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t$mol_assert_equal( Plus1.run( ()=> 2 ) , 3 )\n\n\t\t} ,\n\n\t\t'wrap function' () {\n\t\t\n\t\t\t@ $mol_class\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tconst obj = {\n\t\t\t\tlevel : 2 ,\n\t\t\t\tpow : Plus1.func( function( this : { level : number } , a ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( obj.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate instance method' () {\n\n\t\t\t@ $mol_class\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo1 {\n\n\t\t\t\tlevel = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tpow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst Foo2 = Foo1\n\t\t\tconst foo = new Foo2\n\n\t\t\t$mol_assert_equal( foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate static method' () {\n\t\t\t\n\t\t\t@ $mol_class\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t@ $mol_class\n\t\t\tclass Foo {\n\n\t\t\t\tstatic level = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tstatic pow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( Foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate class' () {\n\t\t\t\n\t\t\t@ $mol_class\n\t\t\tclass BarInc extends $mol_wrapper {\n\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> Foo ) {\n\t\t\t\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\n\t\t\t\t\t\tconst foo = task.call( this , ...args )\n\t\t\t\t\t\tfoo.bar ++\n\t\t\t\t\t\treturn foo\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t@ BarInc.class\n\t\t\t@ $mol_class\n\t\t\tclass Foo {\n\t\t\t\tconstructor( public bar : number ) {}\n\t\t\t}\n\n\t\t\t$mol_assert_equal( new Foo( 2 ).bar , 3 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t@ $mol_class\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\tconst wrapped = this.wrap( func )\n\t\t\t\n\t\t\tObject.defineProperty( wrapped , 'name' , {\n\t\t\t\tvalue : `${ func.name || '<anonymous>' }|${ this.name }`\n\t\t\t} )\n\t\t\t\n\t\t\treturn wrapped\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Args extends any[] , Result extends object >(\n\t\t\t\tClass : new ( ... args : Args )=> Result\n\t\t\t) => {\n\n\t\t\t\tconst construct = ( target : new ( ... args : Args )=> Result , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t}\n\n\t\t\t\thandler[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : Args )=> Result >\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t/// @todo right orderinng\n\texport let $mol_after_mock_queue = [] as ( ()=> void )[]\n\n\texport function $mol_after_mock_warp() {\n\t\tconst queue = $mol_after_mock_queue.splice( 0 )\n\t\tfor( const task of queue ) task()\n\t}\n\n\texport class $mol_after_mock_commmon extends $mol_object2 {\n\n\t\tpromise = Promise.resolve()\n\t\tcancelled = false\n\t\tid : any\n\n\t\tconstructor( public task : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_after_mock_queue.push( task )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tconst index = $mol_after_mock_queue.indexOf( this.task )\n\t\t\tif( index >= 0 )$mol_after_mock_queue.splice( index , 1 )\n\t\t}\n\n\t}\n\n\texport class $mol_after_mock_timeout extends $mol_after_mock_commmon {\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\ttask : ()=> void ,\n\t\t) {\n\t\t\tsuper( task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_timeout = $mol_after_mock_timeout as any as typeof $mol_after_timeout\n\t})\n\n}\n","namespace $ {\n\n\texport class $mol_after_timeout extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = setTimeout( task , delay )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tclearTimeout( this.id )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_frame extends $mol_after_timeout {\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper( 16 , task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_frame = $mol_after_mock_commmon as any as typeof $mol_after_frame\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'trim array'() {\n\n\t\t\tconst array = [ undefined , null , 0, false , null , undefined , undefined ]\n\t\t\tconst correct = [ undefined , null , 0, false , null ]\n\t\t\t\n\t\t\t$mol_array_trim( array )\n\t\t\t\n\t\t\t$mol_assert_like( array , correct )\n\n\t\t}\n\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_array_trim< Item >( array : Item[] ) {\n\n\t\tlet last = array.length\n\t\twhile( last > 0 ) {\n\t\t\t\n\t\t\t-- last\n\t\t\tconst value = array[ last ]\n\t\t\t\n\t\t\tif( value === undefined ) array.pop()\n\t\t\telse break\n\t\t}\n\n\t\treturn array\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( async $ => {\n\t\tawait $mol_fiber_warp()\n\t\t$mol_fiber.deadline = Date.now() + 100\n\t} )\n\t\n}\n","namespace $ {\n\n\texport const enum $mol_fiber_status {\n\t\tpersist = -3 , // 🗹\n\t\tactual = -2 , // ✔\n\t\tdoubt = -1 , // �\n\t\tobsolete = 0 , // ✘\n\t}\n\n\texport function $mol_fiber_defer< Value = void >( calculate : ()=> Value ) {\n\t\t\n\t\tconst fiber = new $mol_fiber\n\t\t\n\t\tfiber.calculate = calculate\n\t\tfiber[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\tfiber.schedule()\n\t\t\n\t\treturn fiber\n\t}\n\n\texport function $mol_fiber_func<\n\t\tThis ,\n\t\tArgs extends any[] ,\n\t\tResult ,\n\t>( calculate : ( this : This , ... args : Args )=> Result ) {\n\t\tconsole.warn( '$mol_fiber_func is deprecated. Use $mol_fiber.func instead.' )\n\t\treturn $mol_fiber.func( calculate )\n\t}\n\n\texport function $mol_fiber_root<\n\t\tCalculate extends ( this : This , ... args : any[] )=> Result ,\n\t\tResult = void ,\n\t\tThis = void ,\n\t>( calculate : Calculate ) {\n\t\t\n\t\tconst wrapper = function( ... args : any[] ) {\n\t\t\tconst fiber = new $mol_fiber< Result >()\n\t\t\tfiber.calculate = calculate.bind( this , ... args )\n\t\t\treturn fiber.wake()\n\t\t} as Calculate\n\t\t\n\t\twrapper[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\treturn wrapper\n\t}\n\n\texport function $mol_fiber_method< Host , Value >(\n\t\tobj : Host ,\n\t\tname : keyof Host ,\n\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : any[] )=> Value >\n\t) {\n\t\tconsole.warn( '$mol_fiber_method is deprecated. Use $mol_fiber.method instead.' )\n\t\treturn $mol_fiber.method( obj , name , descr )\n\t}\n\n\texport function $mol_fiber_sync< Args extends any[] , Value = void , This = void >(\n\t\trequest : ( this : This , ... args : Args )=> PromiseLike< Value >\n\t) : ( ... args : Args )=> Value {\n\n\t\treturn function $mol_fiber_sync_wrapper( this : This , ... args : Args ) {\n\n\t\t\tconst slave = $mol_fiber.current\n\n\t\t\tlet master = slave && slave.master\n\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\tmaster = new $mol_fiber\n\t\t\t\tmaster.cursor = $mol_fiber_status.persist\n\t\t\t\tmaster.error = ( request.call( this , ... args ) as PromiseLike< Value > ).then(\n\t\t\t\t\tres => master!.push( res ) ,\n\t\t\t\t\terr => master!.fail( err ) ,\n\t\t\t\t)\n\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\tmaster[ Symbol.toStringTag ] = prefix + ( request.name || $mol_fiber_sync.name )\n\t\t\t}\n\n\t\t\treturn master.get()\n\n\t\t}\n\n\t}\n\n\texport async function $mol_fiber_warp() {\n\t\tconst deadline = $mol_fiber.deadline\n\t\ttry {\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\twhile( $mol_fiber.queue.length ) await $mol_fiber.tick()\n\t\t\treturn Promise.resolve()\n\t\t} finally {\n\t\t\t$mol_fiber.deadline = deadline\n\t\t}\n\t}\n\n\texport function $mol_fiber_fence( func : ()=> any ) {\n\t\tconst prev = $mol_fiber.current\n\t\ttry {\n\t\t\t$mol_fiber.current = null\n\t\t\treturn func()\n\t\t} finally {\n\t\t\t$mol_fiber.current = prev\n\t\t}\n\t}\n\n\texport function $mol_fiber_unlimit< Result >( task : ()=> Result ) {\n\t\t\n\t\tconst deadline = $mol_fiber.deadline\n\t\t\n\t\ttry {\n\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\n\t\t\treturn task()\n\n\t\t} finally {\n\n\t\t\t$mol_fiber.deadline = deadline\n\n\t\t}\n\n\t}\n\n\t@ $mol_class\n\texport class $mol_fiber_solid extends $mol_wrapper {\n\n\t\tstatic func< This , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\n\t\t\tfunction wrapped( this : This , ... args : Args ) {\n\n\t\t\t\tconst deadline = $mol_fiber.deadline\n\n\t\t\t\ttry {\n\n\t\t\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\t\t\n\t\t\t\t\treturn task.call( this , ... args ) as Result\n\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\tif( 'then' in error ) $mol_fail( new Error( 'Solid fiber can not be suspended.' ) )\n\t\t\t\t\treturn $mol_fail_hidden( error )\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_fiber.deadline = deadline\n\n\t\t\t\t}\n\t\t\n\t\t\t}\n\n\t\t\tObject.defineProperty( wrapped , 'name' , {\n\t\t\t\tvalue : `${ task.name || '<anonymous>' }|${ this.name }`\n\t\t\t} )\n\n\t\t\treturn $mol_fiber.func( wrapped )\n\n\t\t}\n\n\t}\n\n\t@ $mol_class\n\texport class $mol_fiber< Value = any > extends $mol_wrapper {\n\n\t\tstatic wrap< This , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\t\t\t\n\t\t\treturn function( this : This , ... args : Args ) {\n\n\t\t\t\tconst slave = $mol_fiber.current\n\n\t\t\t\tlet master = slave && slave.master\n\t\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\t\tmaster = new $mol_fiber\n\t\t\t\t\tmaster.calculate = task.bind( this , ... args )\n\t\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\t\tmaster[ Symbol.toStringTag ] = `${ prefix }${ task.name }`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn master.get()\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic quant = 32\n\t\tstatic deadline = 0\n\n\t\tstatic current = null as null | $mol_fiber\n\t\t\n\t\tstatic scheduled = null as null | $mol_after_frame\n\t\tstatic queue = [] as ( ()=> PromiseLike< any > )[]\n\t\t\n\t\tstatic async tick() {\n\t\n\t\t\twhile( $mol_fiber.queue.length > 0 ) {\n\n\t\t\t\tif( Date.now() > $mol_fiber.deadline ) {\n\t\t\t\t\t$mol_fiber.schedule()\n\t\t\t\t\treturn \n\t\t\t\t}\n\n\t\t\t\tconst task = $mol_fiber.queue.shift()!\n\t\t\t\tawait task()\n\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic schedule() {\n\n\t\t\tif( !$mol_fiber.scheduled ) {\n\n\t\t\t\t$mol_fiber.scheduled = new $mol_after_frame( ()=> {\n\t\t\t\t\t$mol_fiber.deadline = Math.max( $mol_fiber.deadline , Date.now() + $mol_fiber.quant )\n\t\t\t\t\t$mol_fiber.scheduled = null\n\t\t\t\t\t$mol_fiber.tick()\n\t\t\t\t} )\n\n\t\t\t}\n\n\t\t\tconst promise : Promise< any > = new this.$.Promise( done => this.queue.push( ()=> ( done() , promise ) ) )\n\t\t\treturn promise\n\n\t\t}\n\n\t\tvalue = undefined as unknown as Value\n\t\terror = null as null | Error | PromiseLike< Value >\n\t\tcursor = $mol_fiber_status.obsolete\n\t\tmasters = [] as ( $mol_fiber | number | undefined )[]\n\t\tcalculate! : ()=> Value\n\t\t\n\t\tschedule() {\n\t\t\t$mol_fiber.schedule().then( $mol_log_group( '$mol_fiber_scheduled' , this.wake.bind( this ) ) )\n\t\t}\n\n\t\twake() {\n\t\t\tthis.$.$mol_log( this , '⏰' )\n\t\t\ttry {\n\t\t\t\tif( this.cursor > $mol_fiber_status.actual ) return this.get()\n\t\t\t} catch( error ) {\n\t\t\t\tif( 'then' in error ) return\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t}\n\t\t}\n\n\t\tpush( value : Value ) {\n\t\t\t\n\t\t\tvalue = this.$.$mol_conform( value , this.value )\n\t\t\t\n\t\t\tif( !$mol_compare_any( this.value , value ) ) {\n\t\t\n\t\t\t\tthis.$.$mol_log( this , value , '🠈' , this.value  )\n\t\t\t\t\n\t\t\t\tthis.obsolete_slaves()\n\t\t\t\t\n\t\t\t\tthis.forget()\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.$.$mol_log( this , '✔' , value )\n\t\t\t\tif( this.error ) this.obsolete_slaves()\n\t\t\t}\n\t\t\t\n\t\t\tthis.error = null\n\t\t\tthis.value = value\n\t\t\t\n\t\t\tthis.complete()\n\n\t\t\treturn value\n\t\t}\n\n\t\tfail( error : Error ) : Error {\n\t\t\t\n\t\t\tthis.complete()\t\n\t\t\t\n\t\t\tthis.error = error\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '🔥' , error.message )\n\n\t\t\tthis.obsolete_slaves()\n\n\t\t\treturn error\n\t\t}\n\n\t\twait( promise : PromiseLike< Value > ) : PromiseLike< Value > {\n\t\t\tthis.error = promise\n\t\t\tthis.$.$mol_log( this , '💤' )\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\treturn promise\n\t\t}\n\n\t\tcomplete() {\n\n\t\t\tif( this.cursor <= $mol_fiber_status.actual ) return\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2  ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\t\t}\n\t\t\n\t\tcomplete_master( master_index : number ) {\n\t\t\tthis.disobey( master_index )\n\t\t}\n\n\t\tpull() {\n\t\t\tthis.push( this.calculate() )\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst slave = $mol_fiber.current\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\tthis.error = null\n\t\t\t\t\n\t\t\t\tthis.limit()\n\t\t\t\t\n\t\t\t\t$mol_fiber.current = this\n\n\t\t\t\tthis.$.$mol_log( this , '►' )\n\n\t\t\t\tthis.pull()\n\n\t\t\t} catch( error ) {\n\n\t\t\t\tif( 'then' in error ) {\n\t\t\t\t\t\n\t\t\t\t\tif( !slave ) {\n\t\t\t\t\t\tconst listener = this.wake.bind( this )\n\t\t\t\t\t\terror = error.then( listener , listener )\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.wait( error )\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.fail( error )\n\t\t\t\t}\n\n\t\t\t} finally {\n\t\t\t\t$mol_fiber.current = slave\n\t\t\t}\n\n\t\t}\n\n\t\tget() {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) this.$.$mol_fail( new Error( 'Cyclic dependency' ) )\n\t\t\t\n\t\t\tconst slave = $mol_fiber.current\n\t\t\tif( slave ) slave.master = this\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.actual ) this.update()\n\n\t\t\tif( this.error ) return this.$.$mol_fail_hidden( this.error )\n\t\t\t\n\t\t\treturn this.value\n\n\t\t}\n\n\t\tlimit() {\n\n\t\t\tif( !$mol_fiber.current ) return\n\n\t\t\tconst now = Date.now()\n\n\t\t\tconst overtime = now - $mol_fiber.deadline\n\t\t\tif( overtime < 0 ) return\n\n\t\t\t/// after debugger\n\t\t\tif( overtime > 500 ) {\n\t\t\t\t$mol_fiber.deadline = now + $mol_fiber.quant\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.$.$mol_fail_hidden( $mol_fiber.schedule() )\n\t\t}\n\n\t\tget master() {\n\t\t\treturn this.masters[ this.cursor ] as $mol_fiber\n\t\t}\n\t\tset master( next : $mol_fiber ) {\n\n\t\t\tif( this.cursor === $mol_fiber_status.doubt ) return\n\t\t\t\n\t\t\tconst cursor = this.cursor\n\t\t\tconst prev = this.masters[ this.cursor ]\n\t\t\t\n\t\t\tif( prev !== next ) {\n\t\t\t\tif( prev ) this.rescue( prev as $mol_fiber , cursor )\n\t\t\t\tthis.masters[ cursor ] = next\n\t\t\t\tthis.masters[ cursor + 1 ] = this.obey( next , cursor )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = cursor + 2\n\t\t}\n\n\t\trescue( master : $mol_fiber , master_index : number ) {}\n\n\t\tobey( master : $mol_fiber , master_index : number ) { return -1 }\n\t\tlead( slave : $mol_fiber , master_index : number ) { return -1 }\n\n\t\tdislead( slave_index : number ) {\n\t\t\tthis.destructor()\n\t\t}\n\n\t\tdisobey( master_index : number ) {\n\t\t\t\n\t\t\tconst master = this.masters[ master_index ] as $mol_fiber\n\t\t\tif( !master ) return\n\n\t\t\tmaster.dislead( this.masters[ master_index + 1 ] as number )\n\t\t\t\n\t\t\tthis.masters[ master_index ] = undefined\n\t\t\tthis.masters[ master_index + 1 ] = undefined\n\n\t\t\tthis.$.$mol_array_trim( this.masters )\n\n\t\t}\n\n\t\tobsolete_slaves() { }\n\n\t\tobsolete( master_index : number ) { }\n\n\t\tforget() {\n\t\t\tthis.value = undefined as unknown as Value\n\t\t}\n\n\t\tabort() {\n\t\t\tthis.forget()\n\t\t\treturn true\n\t\t}\n\n\t\tdestructor() {\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '🕱' , this.value )\n\t\t\tthis.complete()\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\tif( !having ) return false\n\t\tif( typeof having !== 'object' ) return false\n\t\tif(!( 'destructor' in having )) return false\n\t\treturn true\n\t}\n\n\texport function $mol_owning_get< Owner , Having >( having : Having ) {\n\t\tif( !$mol_owning_allow( having ) ) return\n\t\treturn $mol_owning_map.get( having )\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","module $ {\n\n\t$mol_test({\n\n\t\t'Value has js-path name' () {\n\n\t\t\t@ $mol_class\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get title() { return new $mol_object2 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.title }` , 'App.title' )\n\n\t\t} ,\n\n\t\t'Simple property' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic value = 1\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value , 1 )\n\n\t\t\tApp.value = 2\n\t\t\t$mol_assert_equal( App.value , 2 )\n\n\t\t} ,\n\n\t\t'Instant actualization' () {\n\n\t\t\tclass Source extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tvalue = 1\n\n\t\t\t}\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get source() { return Source.make() }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get value() { return this.source.value + 1 }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value , 2 )\n\n\t\t\tApp.source.value = 2\n\t\t\t$mol_assert_equal( App.value , 3 )\n\n\t\t} ,\n\n\t\t'Access to cached value' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get value() { return 1 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( $mol_atom2_value( ()=> App.value ) , undefined )\n\n\t\t\t$mol_assert_equal( App.value , 1 )\n\t\t\t$mol_assert_equal( $mol_atom2_value( ()=> App.value ) , 1 )\n\n\t\t} ,\n\n\t\t'Do not recalc slaves on equal changes' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = [1]\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.first[0] + this.counter++ }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.first = [1]\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t} ,\n\n\t\t'Do not recalc grand slave on equal direct slave result ' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return Math.abs( this.first ) }\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.second + ++this.counter }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t\tApp.first = -1\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t} ,\n\n\t\t'Recalc when [not changed master] changes [following master]' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() {\n\t\t\t\t\tthis.third = this.first\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic third = 0\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.second + this.third + ++this.counter }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 2 )\n\n\t\t\tApp.first = 5\n\t\t\t$mol_assert_equal( App.result , 7 )\n\n\t\t} ,\n\n\t\t'Branch switching' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return 2 }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\treturn ( this.condition ? this.first : this.second ) + this.counter++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t\tApp.first = 10\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\t'Forbidden self invalidation' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() { return this.first + 1 }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\tthis.second\n\t\t\t\t\treturn this.first ++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> App.result )\n\n\t\t} ,\n\n\t\t'Side effect inside computation' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic first = 1\n\n\t\t\t\t@ $mol_fiber.method\n\t\t\t\tstatic increase() { return ++ this.first }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\treturn this.increase() + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\t'Forbidden cyclic dependency' () {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get first() : number { return this.second - 1 }\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get second() : number { return this.first + 1 }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> App.first )\n\n\t\t} ,\n\n\t\t'Forget sub fibers on complete' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_fiber.method\n\t\t\t\tstatic count() { return this.counter ++ }\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic data = 1\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.count() + this.data }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t\tApp.data = 2\n\t\t\t$mol_assert_equal( App.result , 3 )\n\n\t\t} ,\n\n\t\tasync 'Automatic destroy owned value on self destruction' () {\n\n\t\t\tlet counter = 0\n\n\t\t\tclass Having extends $mol_object2 {\n\t\t\t\tdestructor() { counter++ }\n\t\t\t}\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get having() { return Having.make() }\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() {\n\t\t\t\t\tif( this.condition ) this.having\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tApp.result\n\t\t\tApp.condition = false\n\t\t\tApp.result\n\n\t\t\t$mol_assert_equal( counter , 0 )\n\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( counter , 1 )\n\n\t\t} ,\n\n\t\tasync 'Do not destroy putted value' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic source : number\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = true\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get target() {\n\t\t\t\t\treturn this.condition ? this.source : 0\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tApp.source = 1\n\t\t\t$mol_assert_equal( App.target , 1 )\n\t\t\t\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.target , 0 )\n\t\t\tawait $mol_fiber_warp()\n\t\t\t\n\t\t\tApp.condition = true\n\t\t\t$mol_assert_equal( App.target , 1 )\n\n\t\t} ,\n\n\t\t'Restore after error' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic condition = false\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get broken() {\n\t\t\t\t\tif( this.condition ) $mol_fail( new Error( 'test error' ) )\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get result() { return this.broken }\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result , 1 )\n\t\t\t\n\t\t\tApp.condition = true\n\t\t\t$mol_assert_fail( ()=> App.result )\n\t\t\t\n\t\t\tApp.condition = false\n\t\t\t$mol_assert_equal( App.result , 1 )\n\n\t\t} ,\n\t\n\t\tasync 'auto fresh only when alive'( $ ) {\n\n\t\t\tlet state = 1\n\n\t\t\tconst monitor = new $.$mol_atom2\n\t\t\tmonitor.calculate = ()=> {\n\t\t\t\tnew $.$mol_after_frame( $mol_atom2.current!.fresh )\n\t\t\t\treturn state\n\t\t\t}\n\t\t\t$mol_assert_equal( monitor.get() , 1 )\n\t\t\t\n\t\t\tstate = 2\n\t\t\t$mol_assert_equal( monitor.get() , 1 )\n\t\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\t$mol_assert_equal( monitor.get() , 2 )\n\t\t\t\n\t\t\tstate = 3\n\t\t\t$mol_assert_equal( monitor.get() , 2 )\n\t\t\t\n\t\t\tmonitor.destructor()\n\t\t\t$mol_assert_equal( monitor.value , undefined )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait $.$mol_fiber_warp()\n\t\t\t$mol_assert_equal( monitor.value , undefined )\n\t\t\t\n\t\t} ,\n\n\t// \t'thenable interface: wait for value' () {\n\t// \t\t$mol_fiber_warp()\n\t\t\t\n\t// \t\tconst source = new $mol_atom2( 'source', ()=> {\n\t// \t\t\treturn $mol_fiber_async<number>( back => {\n\t// \t\t\t\tnew $mol_defer( back( ()=> 777 ) )\n\t// \t\t\t} )\n\t// \t\t} )\n\n\t// \t\tconst target = source.then( val => val.toString() )\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , $mol_fiber_wait.constructor )\n\n\t// \t\t$mol_defer.run() ; $mol_fiber_warp() ; $mol_atom2.sync()\n\n\t// \t\t$mol_assert_equal( target.value() , '777' )\n\t// \t} ,\n\t\t\n\t// \t'thenable interface: negative' () {\n\t// \t\t$mol_fiber_warp()\n\t\t\t\n\t// \t\tconst TestError = class extends Error {}\n\n\t// \t\tconst source = new $mol_atom2( 'source', ()=> {\n\t// \t\t\treturn $mol_fiber_async<number>( back => {\n\t// \t\t\t\tnew $mol_defer( back( ()=> {\n\t// \t\t\t\t\tthrow new TestError( 'Test error' )\n\t// \t\t\t\t} ) )\n\t// \t\t\t} )\n\t// \t\t} )\n\n\t// \t\tconst target = source.then( val => val.toString() )\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , $mol_fiber_wait.constructor )\n\t\t\t\n\t// \t\t$mol_defer.run()\n\t\t\t\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\t// \t\t$mol_assert_fail( ()=> { $mol_fiber_warp() } , TestError )\n\n\t// \t\t$mol_assert_fail( ()=> target.value().valueOf() , TestError )\n\t// \t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\texport function $mol_atom2_value< Value >( task : ()=> Value ) {\n\t\tconst cached = $mol_atom2.cached\n\t\ttry {\n\t\t\t$mol_atom2.cached = true\n\t\t\treturn task()\n\t\t} finally {\n\t\t\t$mol_atom2.cached = cached\n\t\t}\n\t}\n\n\t@ $mol_class\n\texport class $mol_atom2< Value = any > extends $mol_fiber< Value > {\n\n\t\tstatic get current() {\n\t\t\tconst atom = $mol_fiber.current\n\t\t\tif( atom instanceof $mol_atom2 ) return atom\n\t\t\treturn null\n\t\t}\n\n\t\tstatic cached = false\n\n\t\tstatic reap_task = null as null | $mol_fiber\n\t\tstatic reap_queue = [] as $mol_atom2[]\n\n\t\tstatic reap( atom : $mol_atom2 ) {\n\n\t\t\tthis.reap_queue.push( atom )\n\n\t\t\tif( this.reap_task ) return\n\n\t\t\tthis.reap_task = $mol_fiber_defer( ()=> {\n\t\t\t\tthis.reap_task = null\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\t\n\t\t\t\t\tconst atom = this.reap_queue.pop()\n\t\t\t\t\tif( !atom ) break\n\t\t\t\t\t\n\t\t\t\t\tif( !atom.alone ) continue\n\t\t\t\t\t\n\t\t\t\t\tatom.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} )\n\n\t\t}\n\n\t\tslaves = [] as ( $mol_fiber | number | undefined )[]\n\t\t\n\t\trescue( master : $mol_atom2 , cursor : number ) {\n\t\t\t\n\t\t\tconst master_index = this.masters.length\n\t\t\tconst slave_index = this.masters[ cursor + 1 ] as number + 1\n\t\t\t\n\t\t\tmaster.slaves[ slave_index ] = master_index\n\t\t\tthis.masters.push( master , this.masters[ cursor + 1 ] )\n\t\t\t\n\t\t}\n\n\t\tget() {\n\t\t\tif( $mol_atom2.cached ) return this.value\n\t\t\t\n\t\t\tconst value = super.get()\n\t\t\tif( value === undefined ) $mol_fail( new Error( `Not defined: ${ this }` ) )\n\t\t\t\n\t\t\treturn value\n\t\t}\n\n\t\tpull() {\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return super.pull()\n\n\t\t\tthis.$.$mol_log( this , '⏭' )\n\t\t\t\n\t\t\tconst masters = this.masters\n\n\t\t\tfor( let index = 0 ; index < masters.length ; index += 2 ) {\n\n\t\t\t\tconst master = masters[ index ] as $mol_atom2\n\t\t\t\tif( !master ) continue\n\n\t\t\t\ttry {\n\t\t\t\t\tmaster.get()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\tif( 'then' in error ) $mol_fail_hidden( error )\n\t\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t}\n\n\t\t\t\tif( this.cursor as $mol_fiber_status !== $mol_fiber_status.obsolete ) continue\n\n\t\t\t\tthis.$.$mol_log( this , '⏯' )\n\t\t\t\treturn super.pull()\n\t\t\t}\n\n\t\t\tthis.$.$mol_log( this , '✔✔' , this.value )\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\n\t\t\treturn this.value\n\t\t}\n\t\t\n\t\t_value = undefined as unknown as Value\n\t\tget value() { return this._value }\n\t\tset value( next : Value ) {\n\n\t\t\tconst prev = this._value\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) next[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\n\t\t\tthis._value = next\n\t\t}\n\n\t\t_error = null as null | Error | PromiseLike< Value >\n\t\tget error() { return this._error }\n\t\tset error( next : null | Error | PromiseLike< Value > ) {\n\n\t\t\tconst prev = this._error\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) next[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\n\t\t\tthis._error = next\n\t\t}\n\n\t\tput( next : Value ) {\n\t\t\tthis.push( next )\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\t\t}\n\n\t\tcomplete_master( master_index : number ) {\n\t\t\tif( this.masters[ master_index ] instanceof $mol_atom2 ) {\n\t\t\t\tif( master_index >= this.cursor ) this.disobey( master_index )\n\t\t\t} else {\n\t\t\t\tthis.disobey( master_index )\n\t\t\t}\n\t\t}\n\n\t\tobey( master : $mol_fiber , master_index : number ) : number {\n\t\t\treturn master.lead( this , master_index )\n\t\t}\n\n\t\tlead( slave : $mol_fiber , master_index : number ) {\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '☍' , slave )\n\t\t\t\n\t\t\tconst slave_index = this.slaves.length\n\t\t\tthis.slaves[ slave_index ] = slave\n\t\t\tthis.slaves[ slave_index + 1 ] = master_index\n\t\t\t\n\t\t\treturn slave_index\n\t\t}\n\n\t\tdislead( slave_index : number ) {\n\n\t\t\tif( slave_index < 0 ) return // slave is fiber\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '☌' , this.slaves[ slave_index ] )\n\n\t\t\tthis.slaves[ slave_index ] = undefined\n\t\t\tthis.slaves[ slave_index + 1 ] = undefined\n\n\t\t\t$mol_array_trim( this.slaves )\n\n\t\t\tif( this.cursor > $mol_fiber_status.persist && this.alone ) $mol_atom2.reap( this )\n\t\t}\n\n\t\tobsolete( master_index = -1 ) {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Obsoleted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '✘' )\n\t\t\tif( this.cursor !== $mol_fiber_status.doubt ) this.doubt_slaves()\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\n\t\t}\n\n\t\tdoubt( master_index = -1 ) {\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Doubted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor >= $mol_fiber_status.doubt ) return\n\t\t\t\t\n\t\t\tthis.$.$mol_log( this , '�' )\n\t\t\tthis.cursor = $mol_fiber_status.doubt\n\t\t\t\n\t\t\tthis.doubt_slaves()\n\n\t\t}\n\n\t\tobsolete_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.obsolete( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\tdoubt_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.doubt( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\tget fresh() {\n\t\t\treturn ()=> {\n\t\t\t\tif( this.cursor !== $mol_fiber_status.actual ) return\n\n\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t$mol_fiber_solid.run( ()=> this.update() )\n\t\t\t}\n\t\t}\n\n\t\tget alone() {\n\t\t\treturn this.slaves.length === 0\n\t\t}\n\t\t\n\t\tget derived() {\n\t\t\t\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tif( this.masters[ index ] ) return true\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\n\t\tdestructor() {\n\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tthis.$.$mol_log( this , '🕱' , this.value )\n\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\n}\n","module $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Property method' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_prop\n\t\t\t\tstatic value( next = 1 ) { return next + 1 }\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.value() , 2 )\n\n\t\t\tApp.value( 2 )\n\t\t\t$mol_assert_equal( App.value() , 3 )\n\n\t\t} ,\n\n\t})\n\t\n}\n","namespace $ {\n\n\texport function $mol_atom2_prop<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tValue ,\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< ( next? : Value , force? : $mol_atom_force )=> Value >\n\t) : any {\n\n\t\tconst value = descr!.value!\n\t\t\n\t\tconst store = new WeakMap< Host , $mol_atom2< Value > >()\n\n\t\tObject.defineProperty( proto , name + \"()\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host )=> {\n\t\t\t\n\t\t\tlet cache = store.get( host )!\n\t\t\t\n\t\t\tif( !cache ) {\n\t\t\t\tcache = new $mol_atom2\n\t\t\t\tcache.calculate = value.bind( host )\n\t\t\t\tcache[ Symbol.toStringTag ] = `${ host }.${ name }()`\n\t\t\t\tcache.abort = ()=> {\n\t\t\t\t\tstore.delete( host )\n\t\t\t\t\tcache.forget()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\t$mol_owning_catch( host , cache )\n\t\t\t\tstore.set( host , cache )\n\t\t\t}\n\n\t\t\treturn cache\n\t\t}\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tvalue( this : Host , next? : Value , force? : $mol_atom_force ) {\n\t\t\t\t\n\t\t\t\tif( next === undefined ) {\n\t\t\t\t\tconst cache = get_cache( this )\n\t\t\t\t\tif( force === $mol_atom_force_cache ) cache.obsolete( Number.NaN )\n\t\t\t\t\treturn cache.get()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_fiber.run( ()=> {\n\t\t\t\t\tif( force !== $mol_atom_force_cache ) next = value.call( this , next )\n\t\t\t\t\treturn get_cache( this ).put( next! )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_field<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tValue extends Host[ Field ]\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< Value >\n\t) : any {\n\t\t\n\t\tif( !descr ) descr =  Object.getOwnPropertyDescriptor( proto , name )\n\n\t\tconst get = descr ? ( descr.get || $mol_const( descr.value! ) ) : ( ()=> undefined as unknown as Value )\n\t\tconst set = descr && descr.set || function( this : Host , next ) { get_cache( this ).put( next ) }\n\t\t\n\t\tconst store = new WeakMap< Host , $mol_atom2< Value > >()\n\n\t\tObject.defineProperty( proto , name + \"@\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host )=> {\n\t\t\t\n\t\t\tlet cache = store.get( host )\n\t\t\t\n\t\t\tif( !cache ) {\n\t\t\t\tcache = new $mol_atom2\n\t\t\t\tcache.calculate = get.bind( host )\n\t\t\t\tcache[ Symbol.toStringTag ] = `${ host }.${ name }`\n\t\t\t\tcache.abort = ()=> {\n\t\t\t\t\tstore.delete( host )\n\t\t\t\t\tcache!.forget()\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tstore.set( host , cache )\n\t\t\t}\n\n\t\t\treturn cache!\n\t\t}\n\n\t\treturn {\n\t\t\t\n\t\t\tget() {\n\t\t\t\treturn get_cache( this ).get()\n\t\t\t},\n\n\t\t\tset ,\n\n\t\t\t// set( next : Value ) {\n\t\t\t\t\n\t\t\t\t// const slave = $mol_fiber.current \n\n\t\t\t\t// let master = slave && slave.master as $mol_fiber< void >\n\t\t\t\t// if( !master ) {\n\t\t\t\t// \tmaster = new $mol_fiber\n\t\t\t\t// \tmaster.calculate = ()=> {\n\t\t\t\t\t\t// set.call( this , next )\n\t\t\t\t// \t}\n\t\t\t\t// \tmaster[ Symbol.toStringTag ] = `${ this }.${ name }=`\n\t\t\t\t// }\n\n\t\t\t\t// master.get()\n\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\tasync 'Autorun' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic state = 1\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_atom2_field\n\t\t\t\tstatic get init() {\n\t\t\t\t\t++ this.counter\n\t\t\t\t\treturn this.state\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst autorun = $mol_atom2_autorun( ()=> App.init )\n\n\t\t\ttry {\n\n\t\t\t\tawait $mol_fiber_warp()\n\t\t\t\t$mol_assert_equal( App.counter , 1 )\n\t\t\t\t\n\t\t\t\tApp.state = 2\n\t\t\t\t$mol_assert_equal( App.counter , 1 )\n\n\t\t\t\tawait $mol_fiber_warp()\n\t\t\t\t$mol_assert_equal( App.counter , 2 )\n\t\t\t\t\n\t\t\t\tApp.state = 3\n\n\t\t\t} finally {\n\t\t\t\tautorun.destructor()\n\t\t\t}\n\n\t\t\tApp.state = 4\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( App.counter , 2 )\n\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_autorun( calculate : ()=> any ) {\n\t\t\n\t\treturn $mol_atom2.make( atom => {\n\t\t\tatom.calculate = calculate\n\t\t\tatom.obsolete_slaves = atom.schedule\n\t\t\tatom.doubt_slaves = atom.schedule\n\t\t\tatom[ Symbol.toStringTag ] = calculate[ Symbol.toStringTag ] || calculate.name || '$mol_atom2_autorun'\n\t\t\tatom.schedule()\n\t\t} )\n\n\t}\n\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Class as component'() {\n\n\t\t\tclass Foo extends $mol_jsx_view {\n\n\t\t\t\ttitle = ''\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.title } { this.childNodes.join( '-' ) }</div>\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"/foo\" title=\"bar\">xxx{123}</Foo>\n\n\t\t\t$mol_assert_equal( dom.outerHTML , '<div id=\"/foo\">bar xxx-123</div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'View by element'() {\n\n\t\t\tclass Br extends $mol_jsx_view {\n\n\t\t\t\trender() {\n\t\t\t\t\tview = this\n\t\t\t\t\treturn <br id=\"/foo\" />\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet view! : Br\n\n\t\t\t$mol_assert_equal( Br.of( <Br /> ) , view )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Attached view rerender'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\t\t\t\n\t\t\tclass Title extends $mol_jsx_view {\n\n\t\t\t\tvalue = 'foo'\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.value }</div>\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tconst dom = $mol_jsx_attach( doc , ()=> <Title id=\"/foo\" /> )\n\t\t\tconst title = Title.of( dom )\n\t\t\t\n\t\t\t$mol_assert_equal( title.ownerDocument , doc )\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">foo</body></html>' )\n\t\t\t\n\t\t\ttitle.value = 'bar'\n\t\t\ttitle.valueOf()\n\t\t\t\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\tasync 'Reactive attached view'() {\n\n\t\t\tconst doc = $mol_dom_parse( '<html><body id=\"/foo\"></body></html>' )\n\t\t\t\n\t\t\tclass Task {\n\n\t\t\t\t@ $mol_atom2_prop\n\t\t\t\ttitle( next? : string ) { return next || 'foo' }\n\t\t\t\t\n\t\t\t}\n\n\t\t\tclass App extends $mol_jsx_view {\n\t\t\t\t\n\t\t\t\t@ $mol_atom2_prop\n\t\t\t\ttask() { return new Task }\n\n\t\t\t\t@ $mol_atom2_prop\n\t\t\t\tvalueOf() {\n\t\t\t\t\treturn super.valueOf()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trender() {\n\t\t\t\t\treturn <div>{ this.task().title() }</div>\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst task = new Task\n\n\t\t\t$mol_atom2_autorun( ()=> $mol_jsx_attach( doc , ()=> <App id=\"/foo\" task={ ()=> task } /> ) )\n\t\t\t\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">foo</body></html>' )\n\n\t\t\ttask.title( 'bar' )\n\t\t\tawait $mol_fiber_warp()\n\t\t\t$mol_assert_equal( doc.documentElement.outerHTML , '<html><body id=\"/foo\">bar</body></html>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","/** @jsx $mol_jsx_make */\nnamespace $ {\n\n\texport class $mol_jsx_view extends $mol_object2 {\n\n\t\tstatic of< This extends typeof $mol_jsx_view >( this : This , node : Element ) {\n\t\t\treturn node[ this as any ] as InstanceType< This >\n\t\t}\n\t\t\n\t\t[ Symbol.toStringTag ] : string\n\t\t\n\t\tattributes! : Partial< Pick< this , Exclude< keyof this , 'valueOf' > > >\n\t\townerDocument! : typeof $mol_jsx_document\n\t\tchildNodes! : Array< Node | string >\n\t\t\n\t\tvalueOf() {\n\t\t\t\n\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\tconst booked = $mol_jsx_booked\n\t\t\tconst document = $mol_jsx_document\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t$mol_jsx_prefix = this[ Symbol.toStringTag ]\n\t\t\t\t$mol_jsx_booked = new Set\n\t\t\t\t$mol_jsx_document = this.ownerDocument\n\n\t\t\t\treturn this.render()\n\n\t\t\t} finally {\n\n\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t$mol_jsx_document = document\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\trender() : HTMLElement {\n\t\t\treturn $mol_fail( new Error( 'dom_tree() not implemented' ) )\n\t\t}\n\n\t}\n\n}\n"]}